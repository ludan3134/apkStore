// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ws/v1/ws.proto (package api.ws.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage,
} from "@bufbuild/protobuf";
import {Message, proto3, protoInt64} from "@bufbuild/protobuf";
import {
    AllCategoriesLabel,
    AllPricePlanLabel,
    AppInfo,
    Apps,
    AppUser,
    AppVersion,
    Categories,
    ClassVersion,
    PricePlans,
} from "./wm_pb.ts";
import {PageMeta} from "../../com/v1/pagemeta_pb.ts";

/**
 * 后台接口
 * apps
 *
 * @generated from message api.ws.v1.InsertAppsRequest
 */
export class InsertAppsRequest extends Message<InsertAppsRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppsRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "apps", kind: "message", T: Apps},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.Apps apps = 3;
     */
    apps?: Apps;

    constructor(data?: PartialMessage<InsertAppsRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppsRequest {
        return new InsertAppsRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsRequest {
        return new InsertAppsRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsRequest {
        return new InsertAppsRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: InsertAppsRequest | PlainMessage<InsertAppsRequest> | undefined,
        b: InsertAppsRequest | PlainMessage<InsertAppsRequest> | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppsRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.InsertAppsResponse
 */
export class InsertAppsResponse extends Message<InsertAppsResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppsResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<InsertAppsResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppsResponse {
        return new InsertAppsResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsResponse {
        return new InsertAppsResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsResponse {
        return new InsertAppsResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: InsertAppsResponse | PlainMessage<InsertAppsResponse> | undefined,
        b: InsertAppsResponse | PlainMessage<InsertAppsResponse> | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppsResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsListRequest
 */
export class QueryAppsListRequest extends Message<QueryAppsListRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsListRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "page_meta", kind: "message", T: PageMeta},
        {no: 4, name: "apps_filter", kind: "message", T: Apps},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 3;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: api.ws.v1.Apps apps_filter = 4;
     */
    appsFilter?: Apps;

    constructor(data?: PartialMessage<QueryAppsListRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsListRequest {
        return new QueryAppsListRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsListRequest {
        return new QueryAppsListRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsListRequest {
        return new QueryAppsListRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: QueryAppsListRequest | PlainMessage<QueryAppsListRequest> | undefined,
        b: QueryAppsListRequest | PlainMessage<QueryAppsListRequest> | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsListRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsListResponse
 */
export class QueryAppsListResponse extends Message<QueryAppsListResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsListResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 6, name: "page_meta", kind: "message", T: PageMeta},
        {no: 7, name: "apps_list", kind: "message", T: Apps, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: string model_name = 5;
     */
    modelName = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 6;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: repeated api.ws.v1.Apps apps_list = 7;
     */
    appsList: Apps[] = [];

    constructor(data?: PartialMessage<QueryAppsListResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsListResponse {
        return new QueryAppsListResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsListResponse {
        return new QueryAppsListResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsListResponse {
        return new QueryAppsListResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: QueryAppsListResponse | PlainMessage<QueryAppsListResponse> | undefined,
        b: QueryAppsListResponse | PlainMessage<QueryAppsListResponse> | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsListResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppsRequest
 */
export class UpdateAppsRequest extends Message<UpdateAppsRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppsRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "apps", kind: "message", T: Apps},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.Apps apps = 3;
     */
    apps?: Apps;

    constructor(data?: PartialMessage<UpdateAppsRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppsRequest {
        return new UpdateAppsRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsRequest {
        return new UpdateAppsRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsRequest {
        return new UpdateAppsRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateAppsRequest | PlainMessage<UpdateAppsRequest> | undefined,
        b: UpdateAppsRequest | PlainMessage<UpdateAppsRequest> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppsRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppsResponse
 */
export class UpdateAppsResponse extends Message<UpdateAppsResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppsResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<UpdateAppsResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppsResponse {
        return new UpdateAppsResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsResponse {
        return new UpdateAppsResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsResponse {
        return new UpdateAppsResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateAppsResponse | PlainMessage<UpdateAppsResponse> | undefined,
        b: UpdateAppsResponse | PlainMessage<UpdateAppsResponse> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppsResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.CopyAppsRequest
 */
export class CopyAppsRequest extends Message<CopyAppsRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.CopyAppsRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 4, name: "apps", kind: "message", T: Apps, repeated: true},
        {
            no: 5,
            name: "distributor_id",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
        },
        {no: 6, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {
            no: 7,
            name: "categories_ids",
            kind: "scalar",
            T: 5 /* ScalarType.INT32 */,
            repeated: true,
        },
        {
            no: 8,
            name: "price_plans",
            kind: "scalar",
            T: 5 /* ScalarType.INT32 */,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: repeated api.ws.v1.Apps apps = 4;
     */
    apps: Apps[] = [];
    /**
     * @generated from field: string distributor_id = 5;
     */
    distributorId = "";
    /**
     * @generated from field: string model_id = 6;
     */
    modelId = "";
    /**
     * @generated from field: repeated int32 categories_ids = 7;
     */
    categoriesIds: number[] = [];
    /**
     * @generated from field: repeated int32 price_plans = 8;
     */
    pricePlans: number[] = [];

    constructor(data?: PartialMessage<CopyAppsRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): CopyAppsRequest {
        return new CopyAppsRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): CopyAppsRequest {
        return new CopyAppsRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): CopyAppsRequest {
        return new CopyAppsRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: CopyAppsRequest | PlainMessage<CopyAppsRequest> | undefined,
        b: CopyAppsRequest | PlainMessage<CopyAppsRequest> | undefined,
    ): boolean {
        return proto3.util.equals(CopyAppsRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.CopyAppsResponse
 */
export class CopyAppsResponse extends Message<CopyAppsResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.CopyAppsResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {
            no: 5,
            name: "error_messages",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: repeated string error_messages = 5;
     */
    errorMessages: string[] = [];

    constructor(data?: PartialMessage<CopyAppsResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): CopyAppsResponse {
        return new CopyAppsResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): CopyAppsResponse {
        return new CopyAppsResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): CopyAppsResponse {
        return new CopyAppsResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: CopyAppsResponse | PlainMessage<CopyAppsResponse> | undefined,
        b: CopyAppsResponse | PlainMessage<CopyAppsResponse> | undefined,
    ): boolean {
        return proto3.util.equals(CopyAppsResponse, a, b);
    }
}

/**
 * AppUser
 * apps
 *
 * @generated from message api.ws.v1.InsertAppUserRequest
 */
export class InsertAppUserRequest extends Message<InsertAppUserRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppUserRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 3;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<InsertAppUserRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppUserRequest {
        return new InsertAppUserRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppUserRequest {
        return new InsertAppUserRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppUserRequest {
        return new InsertAppUserRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: InsertAppUserRequest | PlainMessage<InsertAppUserRequest> | undefined,
        b: InsertAppUserRequest | PlainMessage<InsertAppUserRequest> | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppUserRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.InsertAppUserResponse
 */
export class InsertAppUserResponse extends Message<InsertAppUserResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppUserResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<InsertAppUserResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppUserResponse {
        return new InsertAppUserResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppUserResponse {
        return new InsertAppUserResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppUserResponse {
        return new InsertAppUserResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: InsertAppUserResponse | PlainMessage<InsertAppUserResponse> | undefined,
        b: InsertAppUserResponse | PlainMessage<InsertAppUserResponse> | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppUserResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppUserListRequest
 */
export class QueryAppUserListRequest extends Message<QueryAppUserListRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppUserListRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "page_meta", kind: "message", T: PageMeta},
        {no: 4, name: "app_user_filter", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 3;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: api.ws.v1.AppUser app_user_filter = 4;
     */
    appUserFilter?: AppUser;

    constructor(data?: PartialMessage<QueryAppUserListRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppUserListRequest {
        return new QueryAppUserListRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppUserListRequest {
        return new QueryAppUserListRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppUserListRequest {
        return new QueryAppUserListRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAppUserListRequest
            | PlainMessage<QueryAppUserListRequest>
            | undefined,
        b:
            | QueryAppUserListRequest
            | PlainMessage<QueryAppUserListRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppUserListRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppUserListResponse
 */
export class QueryAppUserListResponse extends Message<QueryAppUserListResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppUserListResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "page_meta", kind: "message", T: PageMeta},
        {
            no: 6,
            name: "app_user_list",
            kind: "message",
            T: AppUser,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 5;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: repeated api.ws.v1.AppUser app_user_list = 6;
     */
    appUserList: AppUser[] = [];

    constructor(data?: PartialMessage<QueryAppUserListResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppUserListResponse {
        return new QueryAppUserListResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppUserListResponse {
        return new QueryAppUserListResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppUserListResponse {
        return new QueryAppUserListResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAppUserListResponse
            | PlainMessage<QueryAppUserListResponse>
            | undefined,
        b:
            | QueryAppUserListResponse
            | PlainMessage<QueryAppUserListResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppUserListResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppUserRequest
 */
export class UpdateAppUserRequest extends Message<UpdateAppUserRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppUserRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 3;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<UpdateAppUserRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppUserRequest {
        return new UpdateAppUserRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppUserRequest {
        return new UpdateAppUserRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppUserRequest {
        return new UpdateAppUserRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateAppUserRequest | PlainMessage<UpdateAppUserRequest> | undefined,
        b: UpdateAppUserRequest | PlainMessage<UpdateAppUserRequest> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppUserRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppUserResponse
 */
export class UpdateAppUserResponse extends Message<UpdateAppUserResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppUserResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<UpdateAppUserResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppUserResponse {
        return new UpdateAppUserResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppUserResponse {
        return new UpdateAppUserResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppUserResponse {
        return new UpdateAppUserResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateAppUserResponse | PlainMessage<UpdateAppUserResponse> | undefined,
        b: UpdateAppUserResponse | PlainMessage<UpdateAppUserResponse> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppUserResponse, a, b);
    }
}

/**
 * appversion
 *
 * @generated from message api.ws.v1.InsertAppsVersionRequest
 */
export class InsertAppsVersionRequest extends Message<InsertAppsVersionRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppsVersionRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_version", kind: "message", T: AppVersion},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.AppVersion app_version = 3;
     */
    appVersion?: AppVersion;

    constructor(data?: PartialMessage<InsertAppsVersionRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppsVersionRequest {
        return new InsertAppsVersionRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsVersionRequest {
        return new InsertAppsVersionRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsVersionRequest {
        return new InsertAppsVersionRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertAppsVersionRequest
            | PlainMessage<InsertAppsVersionRequest>
            | undefined,
        b:
            | InsertAppsVersionRequest
            | PlainMessage<InsertAppsVersionRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppsVersionRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.InsertAppsVersionResponse
 */
export class InsertAppsVersionResponse extends Message<InsertAppsVersionResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertAppsVersionResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<InsertAppsVersionResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertAppsVersionResponse {
        return new InsertAppsVersionResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsVersionResponse {
        return new InsertAppsVersionResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertAppsVersionResponse {
        return new InsertAppsVersionResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertAppsVersionResponse
            | PlainMessage<InsertAppsVersionResponse>
            | undefined,
        b:
            | InsertAppsVersionResponse
            | PlainMessage<InsertAppsVersionResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertAppsVersionResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsVersionListRequest
 */
export class QueryAppsVersionListRequest extends Message<QueryAppsVersionListRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsVersionListRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 4, name: "page_meta", kind: "message", T: PageMeta},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: string app_id = 3;
     */
    appId = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 4;
     */
    pageMeta?: PageMeta;

    constructor(data?: PartialMessage<QueryAppsVersionListRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsVersionListRequest {
        return new QueryAppsVersionListRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsVersionListRequest {
        return new QueryAppsVersionListRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsVersionListRequest {
        return new QueryAppsVersionListRequest().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryAppsVersionListRequest
            | PlainMessage<QueryAppsVersionListRequest>
            | undefined,
        b:
            | QueryAppsVersionListRequest
            | PlainMessage<QueryAppsVersionListRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsVersionListRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsVersionListResponse
 */
export class QueryAppsVersionListResponse extends Message<QueryAppsVersionListResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsVersionListResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 6, name: "page_meta", kind: "message", T: PageMeta},
        {no: 7, name: "apps", kind: "message", T: AppVersion, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * apk包名
     *
     * @generated from field: string class_name = 5;
     */
    className = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 6;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: repeated api.ws.v1.AppVersion apps = 7;
     */
    apps: AppVersion[] = [];

    constructor(data?: PartialMessage<QueryAppsVersionListResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsVersionListResponse {
        return new QueryAppsVersionListResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsVersionListResponse {
        return new QueryAppsVersionListResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsVersionListResponse {
        return new QueryAppsVersionListResponse().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryAppsVersionListResponse
            | PlainMessage<QueryAppsVersionListResponse>
            | undefined,
        b:
            | QueryAppsVersionListResponse
            | PlainMessage<QueryAppsVersionListResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsVersionListResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppsVersionRequest
 */
export class UpdateAppsVersionRequest extends Message<UpdateAppsVersionRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppsVersionRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_version", kind: "message", T: AppVersion},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.AppVersion app_version = 3;
     */
    appVersion?: AppVersion;

    constructor(data?: PartialMessage<UpdateAppsVersionRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppsVersionRequest {
        return new UpdateAppsVersionRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsVersionRequest {
        return new UpdateAppsVersionRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsVersionRequest {
        return new UpdateAppsVersionRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdateAppsVersionRequest
            | PlainMessage<UpdateAppsVersionRequest>
            | undefined,
        b:
            | UpdateAppsVersionRequest
            | PlainMessage<UpdateAppsVersionRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppsVersionRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateAppsVersionResponse
 */
export class UpdateAppsVersionResponse extends Message<UpdateAppsVersionResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateAppsVersionResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<UpdateAppsVersionResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateAppsVersionResponse {
        return new UpdateAppsVersionResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsVersionResponse {
        return new UpdateAppsVersionResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateAppsVersionResponse {
        return new UpdateAppsVersionResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdateAppsVersionResponse
            | PlainMessage<UpdateAppsVersionResponse>
            | undefined,
        b:
            | UpdateAppsVersionResponse
            | PlainMessage<UpdateAppsVersionResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdateAppsVersionResponse, a, b);
    }
}

/**
 * 盒子端接口
 * 获取Apps分类请求
 *
 * @generated from message api.ws.v1.GetAppsCategoriesRequest
 */
export class GetAppsCategoriesRequest extends Message<GetAppsCategoriesRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsCategoriesRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 1;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<GetAppsCategoriesRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsCategoriesRequest {
        return new GetAppsCategoriesRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsCategoriesRequest {
        return new GetAppsCategoriesRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsCategoriesRequest {
        return new GetAppsCategoriesRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppsCategoriesRequest
            | PlainMessage<GetAppsCategoriesRequest>
            | undefined,
        b:
            | GetAppsCategoriesRequest
            | PlainMessage<GetAppsCategoriesRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsCategoriesRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.GetAppsCategoriesResponse
 */
export class GetAppsCategoriesResponse extends Message<GetAppsCategoriesResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsCategoriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {
            no: 5,
            name: "categories_list",
            kind: "message",
            T: Categories,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.Categories categories_list = 5;
     */
    categoriesList: Categories[] = [];

    constructor(data?: PartialMessage<GetAppsCategoriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsCategoriesResponse {
        return new GetAppsCategoriesResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsCategoriesResponse {
        return new GetAppsCategoriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsCategoriesResponse {
        return new GetAppsCategoriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppsCategoriesResponse
            | PlainMessage<GetAppsCategoriesResponse>
            | undefined,
        b:
            | GetAppsCategoriesResponse
            | PlainMessage<GetAppsCategoriesResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsCategoriesResponse, a, b);
    }
}

/**
 * 获取分类下的apps
 *
 * @generated from message api.ws.v1.GetAppsByCategoriesRequest
 */
export class GetAppsByCategoriesRequest extends Message<GetAppsByCategoriesRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsByCategoriesRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {
            no: 3,
            name: "categories_id",
            kind: "scalar",
            T: 5 /* ScalarType.INT32 */,
        },
        {no: 4, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: int32 categories_id = 3;
     */
    categoriesId = 0;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 4;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<GetAppsByCategoriesRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsByCategoriesRequest {
        return new GetAppsByCategoriesRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByCategoriesRequest {
        return new GetAppsByCategoriesRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByCategoriesRequest {
        return new GetAppsByCategoriesRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppsByCategoriesRequest
            | PlainMessage<GetAppsByCategoriesRequest>
            | undefined,
        b:
            | GetAppsByCategoriesRequest
            | PlainMessage<GetAppsByCategoriesRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsByCategoriesRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.GetAppsByCategoriesResponse
 */
export class GetAppsByCategoriesResponse extends Message<GetAppsByCategoriesResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsByCategoriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 6, name: "apps_list", kind: "message", T: AppInfo, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: string model_name = 5;
     */
    modelName = "";
    /**
     * @generated from field: repeated api.ws.v1.AppInfo apps_list = 6;
     */
    appsList: AppInfo[] = [];

    constructor(data?: PartialMessage<GetAppsByCategoriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsByCategoriesResponse {
        return new GetAppsByCategoriesResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByCategoriesResponse {
        return new GetAppsByCategoriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByCategoriesResponse {
        return new GetAppsByCategoriesResponse().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | GetAppsByCategoriesResponse
            | PlainMessage<GetAppsByCategoriesResponse>
            | undefined,
        b:
            | GetAppsByCategoriesResponse
            | PlainMessage<GetAppsByCategoriesResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsByCategoriesResponse, a, b);
    }
}

/**
 * 获取分类下的apps
 *
 * @generated from message api.ws.v1.GetAppsByClassRequest
 */
export class GetAppsByClassRequest extends Message<GetAppsByClassRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsByClassRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "class_version", kind: "message", T: ClassVersion},
        {no: 2, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: api.ws.v1.ClassVersion class_version = 1;
     */
    classVersion?: ClassVersion;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 2;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<GetAppsByClassRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsByClassRequest {
        return new GetAppsByClassRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByClassRequest {
        return new GetAppsByClassRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByClassRequest {
        return new GetAppsByClassRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: GetAppsByClassRequest | PlainMessage<GetAppsByClassRequest> | undefined,
        b: GetAppsByClassRequest | PlainMessage<GetAppsByClassRequest> | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsByClassRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.GetAppsByClassResponse
 */
export class GetAppsByClassResponse extends Message<GetAppsByClassResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppsByClassResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "apps_list", kind: "message", T: AppInfo, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.AppInfo apps_list = 5;
     */
    appsList: AppInfo[] = [];

    constructor(data?: PartialMessage<GetAppsByClassResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppsByClassResponse {
        return new GetAppsByClassResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByClassResponse {
        return new GetAppsByClassResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppsByClassResponse {
        return new GetAppsByClassResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppsByClassResponse
            | PlainMessage<GetAppsByClassResponse>
            | undefined,
        b:
            | GetAppsByClassResponse
            | PlainMessage<GetAppsByClassResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppsByClassResponse, a, b);
    }
}

/**
 * 模糊查询apps
 *
 * @generated from message api.ws.v1.QueryAppsRequest
 */
export class QueryAppsRequest extends Message<QueryAppsRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "app_user", kind: "message", T: AppUser},
        {no: 4, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 3;
     */
    appUser?: AppUser;
    /**
     * @generated from field: string app_name = 4;
     */
    appName = "";

    constructor(data?: PartialMessage<QueryAppsRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsRequest {
        return new QueryAppsRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsRequest {
        return new QueryAppsRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsRequest {
        return new QueryAppsRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: QueryAppsRequest | PlainMessage<QueryAppsRequest> | undefined,
        b: QueryAppsRequest | PlainMessage<QueryAppsRequest> | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsResponse
 */
export class QueryAppsResponse extends Message<QueryAppsResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "apps_list", kind: "message", T: AppInfo, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.AppInfo apps_list = 5;
     */
    appsList: AppInfo[] = [];

    constructor(data?: PartialMessage<QueryAppsResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsResponse {
        return new QueryAppsResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsResponse {
        return new QueryAppsResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsResponse {
        return new QueryAppsResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: QueryAppsResponse | PlainMessage<QueryAppsResponse> | undefined,
        b: QueryAppsResponse | PlainMessage<QueryAppsResponse> | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsResponse, a, b);
    }
}

/**
 * 获取市场
 * app更新版本信息
 *
 * @generated from message api.ws.v1.QueryAppsNewestVersionRequest
 */
export class QueryAppsNewestVersionRequest extends Message<QueryAppsNewestVersionRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsNewestVersionRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {
            no: 3,
            name: "class_version",
            kind: "message",
            T: ClassVersion,
            repeated: true,
        },
        {no: 4, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: repeated api.ws.v1.ClassVersion class_version = 3;
     */
    classVersion: ClassVersion[] = [];
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 4;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<QueryAppsNewestVersionRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsNewestVersionRequest {
        return new QueryAppsNewestVersionRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsNewestVersionRequest {
        return new QueryAppsNewestVersionRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsNewestVersionRequest {
        return new QueryAppsNewestVersionRequest().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryAppsNewestVersionRequest
            | PlainMessage<QueryAppsNewestVersionRequest>
            | undefined,
        b:
            | QueryAppsNewestVersionRequest
            | PlainMessage<QueryAppsNewestVersionRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsNewestVersionRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAppsNewestVersionResponse
 */
export class QueryAppsNewestVersionResponse extends Message<QueryAppsNewestVersionResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAppsNewestVersionResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "apps_list", kind: "message", T: AppInfo, repeated: true},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.AppInfo apps_list = 5;
     */
    appsList: AppInfo[] = [];

    constructor(data?: PartialMessage<QueryAppsNewestVersionResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAppsNewestVersionResponse {
        return new QueryAppsNewestVersionResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsNewestVersionResponse {
        return new QueryAppsNewestVersionResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAppsNewestVersionResponse {
        return new QueryAppsNewestVersionResponse().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryAppsNewestVersionResponse
            | PlainMessage<QueryAppsNewestVersionResponse>
            | undefined,
        b:
            | QueryAppsNewestVersionResponse
            | PlainMessage<QueryAppsNewestVersionResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAppsNewestVersionResponse, a, b);
    }
}

/**
 * 自升级
 *
 * @generated from message api.ws.v1.UpdateSelfRequest
 */
export class UpdateSelfRequest extends Message<UpdateSelfRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateSelfRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "class_version", kind: "message", T: ClassVersion},
        {no: 4, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.ClassVersion class_version = 3;
     */
    classVersion?: ClassVersion;
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 4;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<UpdateSelfRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateSelfRequest {
        return new UpdateSelfRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateSelfRequest {
        return new UpdateSelfRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateSelfRequest {
        return new UpdateSelfRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateSelfRequest | PlainMessage<UpdateSelfRequest> | undefined,
        b: UpdateSelfRequest | PlainMessage<UpdateSelfRequest> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateSelfRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateSelfResponse
 */
export class UpdateSelfResponse extends Message<UpdateSelfResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateSelfResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "app", kind: "message", T: AppInfo},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: api.ws.v1.AppInfo app = 5;
     */
    app?: AppInfo;

    constructor(data?: PartialMessage<UpdateSelfResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateSelfResponse {
        return new UpdateSelfResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateSelfResponse {
        return new UpdateSelfResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateSelfResponse {
        return new UpdateSelfResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: UpdateSelfResponse | PlainMessage<UpdateSelfResponse> | undefined,
        b: UpdateSelfResponse | PlainMessage<UpdateSelfResponse> | undefined,
    ): boolean {
        return proto3.util.equals(UpdateSelfResponse, a, b);
    }
}

/**
 * Categories
 *
 * @generated from message api.ws.v1.InsertCategoriesRequest
 */
export class InsertCategoriesRequest extends Message<InsertCategoriesRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertCategoriesRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "categories", kind: "message", T: Categories},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.Categories categories = 3;
     */
    categories?: Categories;

    constructor(data?: PartialMessage<InsertCategoriesRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertCategoriesRequest {
        return new InsertCategoriesRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertCategoriesRequest {
        return new InsertCategoriesRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertCategoriesRequest {
        return new InsertCategoriesRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertCategoriesRequest
            | PlainMessage<InsertCategoriesRequest>
            | undefined,
        b:
            | InsertCategoriesRequest
            | PlainMessage<InsertCategoriesRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertCategoriesRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.InsertCategoriesResponse
 */
export class InsertCategoriesResponse extends Message<InsertCategoriesResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertCategoriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<InsertCategoriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertCategoriesResponse {
        return new InsertCategoriesResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertCategoriesResponse {
        return new InsertCategoriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertCategoriesResponse {
        return new InsertCategoriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertCategoriesResponse
            | PlainMessage<InsertCategoriesResponse>
            | undefined,
        b:
            | InsertCategoriesResponse
            | PlainMessage<InsertCategoriesResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertCategoriesResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryCategoriesListRequest
 */
export class QueryCategoriesListRequest extends Message<QueryCategoriesListRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryCategoriesListRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "page_meta", kind: "message", T: PageMeta},
        {no: 4, name: "categories_filter", kind: "message", T: Categories},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 3;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: api.ws.v1.Categories categories_filter = 4;
     */
    categoriesFilter?: Categories;

    constructor(data?: PartialMessage<QueryCategoriesListRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryCategoriesListRequest {
        return new QueryCategoriesListRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryCategoriesListRequest {
        return new QueryCategoriesListRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryCategoriesListRequest {
        return new QueryCategoriesListRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryCategoriesListRequest
            | PlainMessage<QueryCategoriesListRequest>
            | undefined,
        b:
            | QueryCategoriesListRequest
            | PlainMessage<QueryCategoriesListRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryCategoriesListRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryCategoriesListResponse
 */
export class QueryCategoriesListResponse extends Message<QueryCategoriesListResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryCategoriesListResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "page_meta", kind: "message", T: PageMeta},
        {
            no: 6,
            name: "categories_list",
            kind: "message",
            T: Categories,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 5;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: repeated api.ws.v1.Categories categories_list = 6;
     */
    categoriesList: Categories[] = [];

    constructor(data?: PartialMessage<QueryCategoriesListResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryCategoriesListResponse {
        return new QueryCategoriesListResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryCategoriesListResponse {
        return new QueryCategoriesListResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryCategoriesListResponse {
        return new QueryCategoriesListResponse().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryCategoriesListResponse
            | PlainMessage<QueryCategoriesListResponse>
            | undefined,
        b:
            | QueryCategoriesListResponse
            | PlainMessage<QueryCategoriesListResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryCategoriesListResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateCategoriesRequest
 */
export class UpdateCategoriesRequest extends Message<UpdateCategoriesRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateCategoriesRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "categories", kind: "message", T: Categories},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.Categories categories = 3;
     */
    categories?: Categories;

    constructor(data?: PartialMessage<UpdateCategoriesRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateCategoriesRequest {
        return new UpdateCategoriesRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateCategoriesRequest {
        return new UpdateCategoriesRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateCategoriesRequest {
        return new UpdateCategoriesRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdateCategoriesRequest
            | PlainMessage<UpdateCategoriesRequest>
            | undefined,
        b:
            | UpdateCategoriesRequest
            | PlainMessage<UpdateCategoriesRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdateCategoriesRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdateCategoriesResponse
 */
export class UpdateCategoriesResponse extends Message<UpdateCategoriesResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdateCategoriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<UpdateCategoriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdateCategoriesResponse {
        return new UpdateCategoriesResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdateCategoriesResponse {
        return new UpdateCategoriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdateCategoriesResponse {
        return new UpdateCategoriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdateCategoriesResponse
            | PlainMessage<UpdateCategoriesResponse>
            | undefined,
        b:
            | UpdateCategoriesResponse
            | PlainMessage<UpdateCategoriesResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdateCategoriesResponse, a, b);
    }
}

/**
 * PricePlans
 *
 * @generated from message api.ws.v1.InsertPricePlansRequest
 */
export class InsertPricePlansRequest extends Message<InsertPricePlansRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertPricePlansRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "price_plans", kind: "message", T: PricePlans},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.PricePlans price_plans = 3;
     */
    pricePlans?: PricePlans;

    constructor(data?: PartialMessage<InsertPricePlansRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertPricePlansRequest {
        return new InsertPricePlansRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertPricePlansRequest {
        return new InsertPricePlansRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertPricePlansRequest {
        return new InsertPricePlansRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertPricePlansRequest
            | PlainMessage<InsertPricePlansRequest>
            | undefined,
        b:
            | InsertPricePlansRequest
            | PlainMessage<InsertPricePlansRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertPricePlansRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.InsertPricePlansResponse
 */
export class InsertPricePlansResponse extends Message<InsertPricePlansResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.InsertPricePlansResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<InsertPricePlansResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): InsertPricePlansResponse {
        return new InsertPricePlansResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): InsertPricePlansResponse {
        return new InsertPricePlansResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): InsertPricePlansResponse {
        return new InsertPricePlansResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | InsertPricePlansResponse
            | PlainMessage<InsertPricePlansResponse>
            | undefined,
        b:
            | InsertPricePlansResponse
            | PlainMessage<InsertPricePlansResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(InsertPricePlansResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryPricePlansListRequest
 */
export class QueryPricePlansListRequest extends Message<QueryPricePlansListRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryPricePlansListRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "page_meta", kind: "message", T: PageMeta},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 3;
     */
    pageMeta?: PageMeta;

    constructor(data?: PartialMessage<QueryPricePlansListRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryPricePlansListRequest {
        return new QueryPricePlansListRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryPricePlansListRequest {
        return new QueryPricePlansListRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryPricePlansListRequest {
        return new QueryPricePlansListRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryPricePlansListRequest
            | PlainMessage<QueryPricePlansListRequest>
            | undefined,
        b:
            | QueryPricePlansListRequest
            | PlainMessage<QueryPricePlansListRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryPricePlansListRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryPricePlansListResponse
 */
export class QueryPricePlansListResponse extends Message<QueryPricePlansListResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryPricePlansListResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 6, name: "page_meta", kind: "message", T: PageMeta},
        {
            no: 7,
            name: "price_plans",
            kind: "message",
            T: PricePlans,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";
    /**
     * @generated from field: string model_name = 5;
     */
    modelName = "";
    /**
     * @generated from field: api.com.v1.PageMeta page_meta = 6;
     */
    pageMeta?: PageMeta;
    /**
     * @generated from field: repeated api.ws.v1.PricePlans price_plans = 7;
     */
    pricePlans: PricePlans[] = [];

    constructor(data?: PartialMessage<QueryPricePlansListResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryPricePlansListResponse {
        return new QueryPricePlansListResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryPricePlansListResponse {
        return new QueryPricePlansListResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryPricePlansListResponse {
        return new QueryPricePlansListResponse().fromJsonString(
            jsonString,
            options,
        );
    }

    static equals(
        a:
            | QueryPricePlansListResponse
            | PlainMessage<QueryPricePlansListResponse>
            | undefined,
        b:
            | QueryPricePlansListResponse
            | PlainMessage<QueryPricePlansListResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryPricePlansListResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdatePricePlansRequest
 */
export class UpdatePricePlansRequest extends Message<UpdatePricePlansRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdatePricePlansRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "price_plans", kind: "message", T: PricePlans},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: api.ws.v1.PricePlans price_plans = 3;
     */
    pricePlans?: PricePlans;

    constructor(data?: PartialMessage<UpdatePricePlansRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdatePricePlansRequest {
        return new UpdatePricePlansRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdatePricePlansRequest {
        return new UpdatePricePlansRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdatePricePlansRequest {
        return new UpdatePricePlansRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdatePricePlansRequest
            | PlainMessage<UpdatePricePlansRequest>
            | undefined,
        b:
            | UpdatePricePlansRequest
            | PlainMessage<UpdatePricePlansRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdatePricePlansRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.UpdatePricePlansResponse
 */
export class UpdatePricePlansResponse extends Message<UpdatePricePlansResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.UpdatePricePlansResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {
            no: 1,
            name: "transaction_id",
            kind: "scalar",
            T: 3 /* ScalarType.INT64 */,
        },
        {no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */},
        {no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
    ]);
    /**
     * @generated from field: int64 transaction_id = 1;
     */
    transactionId = protoInt64.zero;
    /**
     * @generated from field: int64 session_id = 2;
     */
    sessionId = protoInt64.zero;
    /**
     * @generated from field: bool status = 3;
     */
    status = false;
    /**
     * @generated from field: string message = 4;
     */
    message = "";

    constructor(data?: PartialMessage<UpdatePricePlansResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): UpdatePricePlansResponse {
        return new UpdatePricePlansResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): UpdatePricePlansResponse {
        return new UpdatePricePlansResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): UpdatePricePlansResponse {
        return new UpdatePricePlansResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | UpdatePricePlansResponse
            | PlainMessage<UpdatePricePlansResponse>
            | undefined,
        b:
            | UpdatePricePlansResponse
            | PlainMessage<UpdatePricePlansResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(UpdatePricePlansResponse, a, b);
    }
}

/**
 * AllCategories
 *
 * @generated from message api.ws.v1.QueryAllCategoriesRequest
 */
export class QueryAllCategoriesRequest extends Message<QueryAllCategoriesRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAllCategoriesRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => []);

    constructor(data?: PartialMessage<QueryAllCategoriesRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAllCategoriesRequest {
        return new QueryAllCategoriesRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAllCategoriesRequest {
        return new QueryAllCategoriesRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAllCategoriesRequest {
        return new QueryAllCategoriesRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAllCategoriesRequest
            | PlainMessage<QueryAllCategoriesRequest>
            | undefined,
        b:
            | QueryAllCategoriesRequest
            | PlainMessage<QueryAllCategoriesRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAllCategoriesRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAllCategoriesResponse
 */
export class QueryAllCategoriesResponse extends Message<QueryAllCategoriesResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAllCategoriesResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {
            no: 3,
            name: "categories_label_list",
            kind: "message",
            T: AllCategoriesLabel,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: bool status = 1;
     */
    status = false;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.AllCategoriesLabel categories_label_list = 3;
     */
    categoriesLabelList: AllCategoriesLabel[] = [];

    constructor(data?: PartialMessage<QueryAllCategoriesResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAllCategoriesResponse {
        return new QueryAllCategoriesResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAllCategoriesResponse {
        return new QueryAllCategoriesResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAllCategoriesResponse {
        return new QueryAllCategoriesResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAllCategoriesResponse
            | PlainMessage<QueryAllCategoriesResponse>
            | undefined,
        b:
            | QueryAllCategoriesResponse
            | PlainMessage<QueryAllCategoriesResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAllCategoriesResponse, a, b);
    }
}

/**
 * AllPricePlan
 *
 * @generated from message api.ws.v1.QueryAllPricePlanRequest
 */
export class QueryAllPricePlanRequest extends Message<QueryAllPricePlanRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAllPricePlanRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => []);

    constructor(data?: PartialMessage<QueryAllPricePlanRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAllPricePlanRequest {
        return new QueryAllPricePlanRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAllPricePlanRequest {
        return new QueryAllPricePlanRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAllPricePlanRequest {
        return new QueryAllPricePlanRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAllPricePlanRequest
            | PlainMessage<QueryAllPricePlanRequest>
            | undefined,
        b:
            | QueryAllPricePlanRequest
            | PlainMessage<QueryAllPricePlanRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAllPricePlanRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.QueryAllPricePlanResponse
 */
export class QueryAllPricePlanResponse extends Message<QueryAllPricePlanResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.QueryAllPricePlanResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {
            no: 3,
            name: "price_label_list",
            kind: "message",
            T: AllPricePlanLabel,
            repeated: true,
        },
    ]);
    /**
     * @generated from field: bool status = 1;
     */
    status = false;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: repeated api.ws.v1.AllPricePlanLabel price_label_list = 3;
     */
    priceLabelList: AllPricePlanLabel[] = [];

    constructor(data?: PartialMessage<QueryAllPricePlanResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): QueryAllPricePlanResponse {
        return new QueryAllPricePlanResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): QueryAllPricePlanResponse {
        return new QueryAllPricePlanResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): QueryAllPricePlanResponse {
        return new QueryAllPricePlanResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | QueryAllPricePlanResponse
            | PlainMessage<QueryAllPricePlanResponse>
            | undefined,
        b:
            | QueryAllPricePlanResponse
            | PlainMessage<QueryAllPricePlanResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(QueryAllPricePlanResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.GetAppDownloadUrlRequest
 */
export class GetAppDownloadUrlRequest extends Message<GetAppDownloadUrlRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppDownloadUrlRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "app_user", kind: "message", T: AppUser},
        {no: 2, name: "app_info", kind: "message", T: AppInfo},
    ]);
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 1;
     */
    appUser?: AppUser;
    /**
     * @generated from field: api.ws.v1.AppInfo app_info = 2;
     */
    appInfo?: AppInfo;

    constructor(data?: PartialMessage<GetAppDownloadUrlRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppDownloadUrlRequest {
        return new GetAppDownloadUrlRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppDownloadUrlRequest {
        return new GetAppDownloadUrlRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppDownloadUrlRequest {
        return new GetAppDownloadUrlRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppDownloadUrlRequest
            | PlainMessage<GetAppDownloadUrlRequest>
            | undefined,
        b:
            | GetAppDownloadUrlRequest
            | PlainMessage<GetAppDownloadUrlRequest>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppDownloadUrlRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.GetAppDownloadUrlResponse
 */
export class GetAppDownloadUrlResponse extends Message<GetAppDownloadUrlResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.GetAppDownloadUrlResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 3, name: "app_info", kind: "message", T: AppInfo},
    ]);
    /**
     * @generated from field: bool status = 1;
     */
    status = false;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: api.ws.v1.AppInfo app_info = 3;
     */
    appInfo?: AppInfo;

    constructor(data?: PartialMessage<GetAppDownloadUrlResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): GetAppDownloadUrlResponse {
        return new GetAppDownloadUrlResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): GetAppDownloadUrlResponse {
        return new GetAppDownloadUrlResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): GetAppDownloadUrlResponse {
        return new GetAppDownloadUrlResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a:
            | GetAppDownloadUrlResponse
            | PlainMessage<GetAppDownloadUrlResponse>
            | undefined,
        b:
            | GetAppDownloadUrlResponse
            | PlainMessage<GetAppDownloadUrlResponse>
            | undefined,
    ): boolean {
        return proto3.util.equals(GetAppDownloadUrlResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.AuthAccountRequest
 */
export class AuthAccountRequest extends Message<AuthAccountRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.AuthAccountRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 1;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<AuthAccountRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): AuthAccountRequest {
        return new AuthAccountRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): AuthAccountRequest {
        return new AuthAccountRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): AuthAccountRequest {
        return new AuthAccountRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: AuthAccountRequest | PlainMessage<AuthAccountRequest> | undefined,
        b: AuthAccountRequest | PlainMessage<AuthAccountRequest> | undefined,
    ): boolean {
        return proto3.util.equals(AuthAccountRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.AuthAccountResponse
 */
export class AuthAccountResponse extends Message<AuthAccountResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.AuthAccountResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 3, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: bool status = 1;
     */
    status = false;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 3;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<AuthAccountResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): AuthAccountResponse {
        return new AuthAccountResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): AuthAccountResponse {
        return new AuthAccountResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): AuthAccountResponse {
        return new AuthAccountResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: AuthAccountResponse | PlainMessage<AuthAccountResponse> | undefined,
        b: AuthAccountResponse | PlainMessage<AuthAccountResponse> | undefined,
    ): boolean {
        return proto3.util.equals(AuthAccountResponse, a, b);
    }
}

/**
 * @generated from message api.ws.v1.LoginRequest
 */
export class LoginRequest extends Message<LoginRequest> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.LoginRequest";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 1;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<LoginRequest>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): LoginRequest {
        return new LoginRequest().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): LoginRequest {
        return new LoginRequest().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): LoginRequest {
        return new LoginRequest().fromJsonString(jsonString, options);
    }

    static equals(
        a: LoginRequest | PlainMessage<LoginRequest> | undefined,
        b: LoginRequest | PlainMessage<LoginRequest> | undefined,
    ): boolean {
        return proto3.util.equals(LoginRequest, a, b);
    }
}

/**
 * @generated from message api.ws.v1.LoginResponse
 */
export class LoginResponse extends Message<LoginResponse> {
    static readonly runtime: typeof proto3 = proto3;
    static readonly typeName = "api.ws.v1.LoginResponse";
    static readonly fields: FieldList = proto3.util.newFieldList(() => [
        {no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */},
        {no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */},
        {no: 3, name: "app_user", kind: "message", T: AppUser},
    ]);
    /**
     * @generated from field: bool status = 1;
     */
    status = false;
    /**
     * @generated from field: string message = 2;
     */
    message = "";
    /**
     * @generated from field: api.ws.v1.AppUser app_user = 3;
     */
    appUser?: AppUser;

    constructor(data?: PartialMessage<LoginResponse>) {
        super();
        proto3.util.initPartial(data, this);
    }

    static fromBinary(
        bytes: Uint8Array,
        options?: Partial<BinaryReadOptions>,
    ): LoginResponse {
        return new LoginResponse().fromBinary(bytes, options);
    }

    static fromJson(
        jsonValue: JsonValue,
        options?: Partial<JsonReadOptions>,
    ): LoginResponse {
        return new LoginResponse().fromJson(jsonValue, options);
    }

    static fromJsonString(
        jsonString: string,
        options?: Partial<JsonReadOptions>,
    ): LoginResponse {
        return new LoginResponse().fromJsonString(jsonString, options);
    }

    static equals(
        a: LoginResponse | PlainMessage<LoginResponse> | undefined,
        b: LoginResponse | PlainMessage<LoginResponse> | undefined,
    ): boolean {
        return proto3.util.equals(LoginResponse, a, b);
    }
}
