// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ax/v1/ax.proto (package api.ax.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Distributor, DistributorModelList, FailedRecord, MacActivity, MacActivityFilter, MacApk, MacAuthRecord, MacCityFilter, MacDailyActivity, MacDevice, MacModelCount, Menu, Model, Role, RoleLabel, RoleMenu, ServerConfig, TreeNode, User, UserLabel, UserList } from "./axm_pb.ts";
import { PageMeta } from "../../com/v1/pagemeta_pb.ts";

/**
 * @generated from message api.ax.v1.LoginRequest
 */
export class LoginRequest extends Message<LoginRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string user_name = 3;
   */
  userName = "";

  /**
   * @generated from field: string password = 4;
   */
  password = "";

  constructor(data?: PartialMessage<LoginRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.LoginRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginRequest {
    return new LoginRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginRequest {
    return new LoginRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginRequest {
    return new LoginRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LoginRequest | PlainMessage<LoginRequest> | undefined, b: LoginRequest | PlainMessage<LoginRequest> | undefined): boolean {
    return proto3.util.equals(LoginRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.LoginResponse
 */
export class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 user_id = 5;
   */
  userId = 0;

  /**
   * @generated from field: string user_name = 6;
   */
  userName = "";

  /**
   * @generated from field: int32 role_id = 7;
   */
  roleId = 0;

  /**
   * @generated from field: string token = 8;
   */
  token = "";

  /**
   * @generated from field: string distributor_id = 9;
   */
  distributorId = "";

  constructor(data?: PartialMessage<LoginResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.LoginResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "role_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse {
    return new LoginResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse {
    return new LoginResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse {
    return new LoginResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean {
    return proto3.util.equals(LoginResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UserMenuInfoRequest
 */
export class UserMenuInfoRequest extends Message<UserMenuInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<UserMenuInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UserMenuInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserMenuInfoRequest {
    return new UserMenuInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserMenuInfoRequest {
    return new UserMenuInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserMenuInfoRequest {
    return new UserMenuInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UserMenuInfoRequest | PlainMessage<UserMenuInfoRequest> | undefined, b: UserMenuInfoRequest | PlainMessage<UserMenuInfoRequest> | undefined): boolean {
    return proto3.util.equals(UserMenuInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UserMenuInfoResponse
 */
export class UserMenuInfoResponse extends Message<UserMenuInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.Menu menu_list = 5;
   */
  menuList: Menu[] = [];

  constructor(data?: PartialMessage<UserMenuInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UserMenuInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "menu_list", kind: "message", T: Menu, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserMenuInfoResponse {
    return new UserMenuInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserMenuInfoResponse {
    return new UserMenuInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserMenuInfoResponse {
    return new UserMenuInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UserMenuInfoResponse | PlainMessage<UserMenuInfoResponse> | undefined, b: UserMenuInfoResponse | PlainMessage<UserMenuInfoResponse> | undefined): boolean {
    return proto3.util.equals(UserMenuInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryUserListRequest
 */
export class QueryUserListRequest extends Message<QueryUserListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: string user_name = 4;
   */
  userName = "";

  constructor(data?: PartialMessage<QueryUserListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryUserListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryUserListRequest {
    return new QueryUserListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryUserListRequest {
    return new QueryUserListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryUserListRequest {
    return new QueryUserListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryUserListRequest | PlainMessage<QueryUserListRequest> | undefined, b: QueryUserListRequest | PlainMessage<QueryUserListRequest> | undefined): boolean {
    return proto3.util.equals(QueryUserListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryUserListResponse
 */
export class QueryUserListResponse extends Message<QueryUserListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.User user_list = 6;
   */
  userList: User[] = [];

  constructor(data?: PartialMessage<QueryUserListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryUserListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "user_list", kind: "message", T: User, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryUserListResponse {
    return new QueryUserListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryUserListResponse {
    return new QueryUserListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryUserListResponse {
    return new QueryUserListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryUserListResponse | PlainMessage<QueryUserListResponse> | undefined, b: QueryUserListResponse | PlainMessage<QueryUserListResponse> | undefined): boolean {
    return proto3.util.equals(QueryUserListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertUserRequest
 */
export class InsertUserRequest extends Message<InsertUserRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string user_name = 3;
   */
  userName = "";

  /**
   * @generated from field: string password = 4;
   */
  password = "";

  /**
   * @generated from field: int32 role_id = 5;
   */
  roleId = 0;

  constructor(data?: PartialMessage<InsertUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "role_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertUserRequest {
    return new InsertUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertUserRequest {
    return new InsertUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertUserRequest {
    return new InsertUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertUserRequest | PlainMessage<InsertUserRequest> | undefined, b: InsertUserRequest | PlainMessage<InsertUserRequest> | undefined): boolean {
    return proto3.util.equals(InsertUserRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertUserResponse
 */
export class InsertUserResponse extends Message<InsertUserResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertUserResponse {
    return new InsertUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertUserResponse {
    return new InsertUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertUserResponse {
    return new InsertUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertUserResponse | PlainMessage<InsertUserResponse> | undefined, b: InsertUserResponse | PlainMessage<InsertUserResponse> | undefined): boolean {
    return proto3.util.equals(InsertUserResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateUserRequest
 */
export class UpdateUserRequest extends Message<UpdateUserRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.User user = 3;
   */
  user?: User;

  constructor(data?: PartialMessage<UpdateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined, b: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateUserResponse
 */
export class UpdateUserResponse extends Message<UpdateUserResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined, b: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.ChangePwdRequest
 */
export class ChangePwdRequest extends Message<ChangePwdRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string old_pwd = 3;
   */
  oldPwd = "";

  /**
   * @generated from field: string new_pwd = 4;
   */
  newPwd = "";

  constructor(data?: PartialMessage<ChangePwdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.ChangePwdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "old_pwd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "new_pwd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangePwdRequest {
    return new ChangePwdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangePwdRequest {
    return new ChangePwdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangePwdRequest {
    return new ChangePwdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ChangePwdRequest | PlainMessage<ChangePwdRequest> | undefined, b: ChangePwdRequest | PlainMessage<ChangePwdRequest> | undefined): boolean {
    return proto3.util.equals(ChangePwdRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.ChangePwdResponse
 */
export class ChangePwdResponse extends Message<ChangePwdResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ChangePwdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.ChangePwdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangePwdResponse {
    return new ChangePwdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangePwdResponse {
    return new ChangePwdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangePwdResponse {
    return new ChangePwdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ChangePwdResponse | PlainMessage<ChangePwdResponse> | undefined, b: ChangePwdResponse | PlainMessage<ChangePwdResponse> | undefined): boolean {
    return proto3.util.equals(ChangePwdResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.ResetPwdRequest
 */
export class ResetPwdRequest extends Message<ResetPwdRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.User user = 3;
   */
  user?: User;

  constructor(data?: PartialMessage<ResetPwdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.ResetPwdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPwdRequest {
    return new ResetPwdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPwdRequest {
    return new ResetPwdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPwdRequest {
    return new ResetPwdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPwdRequest | PlainMessage<ResetPwdRequest> | undefined, b: ResetPwdRequest | PlainMessage<ResetPwdRequest> | undefined): boolean {
    return proto3.util.equals(ResetPwdRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.ResetPwdResponse
 */
export class ResetPwdResponse extends Message<ResetPwdResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ResetPwdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.ResetPwdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPwdResponse {
    return new ResetPwdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPwdResponse {
    return new ResetPwdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPwdResponse {
    return new ResetPwdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResetPwdResponse | PlainMessage<ResetPwdResponse> | undefined, b: ResetPwdResponse | PlainMessage<ResetPwdResponse> | undefined): boolean {
    return proto3.util.equals(ResetPwdResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryRoleListRequest
 */
export class QueryRoleListRequest extends Message<QueryRoleListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryRoleListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryRoleListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRoleListRequest {
    return new QueryRoleListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRoleListRequest {
    return new QueryRoleListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRoleListRequest {
    return new QueryRoleListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRoleListRequest | PlainMessage<QueryRoleListRequest> | undefined, b: QueryRoleListRequest | PlainMessage<QueryRoleListRequest> | undefined): boolean {
    return proto3.util.equals(QueryRoleListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryRoleListResponse
 */
export class QueryRoleListResponse extends Message<QueryRoleListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.RoleMenu role_list = 6;
   */
  roleList: RoleMenu[] = [];

  constructor(data?: PartialMessage<QueryRoleListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryRoleListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "role_list", kind: "message", T: RoleMenu, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRoleListResponse {
    return new QueryRoleListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRoleListResponse {
    return new QueryRoleListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRoleListResponse {
    return new QueryRoleListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRoleListResponse | PlainMessage<QueryRoleListResponse> | undefined, b: QueryRoleListResponse | PlainMessage<QueryRoleListResponse> | undefined): boolean {
    return proto3.util.equals(QueryRoleListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllRoleRequest
 */
export class QueryAllRoleRequest extends Message<QueryAllRoleRequest> {
  constructor(data?: PartialMessage<QueryAllRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllRoleRequest {
    return new QueryAllRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllRoleRequest {
    return new QueryAllRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllRoleRequest {
    return new QueryAllRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllRoleRequest | PlainMessage<QueryAllRoleRequest> | undefined, b: QueryAllRoleRequest | PlainMessage<QueryAllRoleRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllRoleRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllRoleResponse
 */
export class QueryAllRoleResponse extends Message<QueryAllRoleResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.RoleLabel role_list = 3;
   */
  roleList: RoleLabel[] = [];

  constructor(data?: PartialMessage<QueryAllRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_list", kind: "message", T: RoleLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllRoleResponse {
    return new QueryAllRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllRoleResponse {
    return new QueryAllRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllRoleResponse {
    return new QueryAllRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllRoleResponse | PlainMessage<QueryAllRoleResponse> | undefined, b: QueryAllRoleResponse | PlainMessage<QueryAllRoleResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllRoleResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertRoleRequest
 */
export class InsertRoleRequest extends Message<InsertRoleRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Role role = 3;
   */
  role?: Role;

  constructor(data?: PartialMessage<InsertRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertRoleRequest {
    return new InsertRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertRoleRequest {
    return new InsertRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertRoleRequest {
    return new InsertRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertRoleRequest | PlainMessage<InsertRoleRequest> | undefined, b: InsertRoleRequest | PlainMessage<InsertRoleRequest> | undefined): boolean {
    return proto3.util.equals(InsertRoleRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertRoleResponse
 */
export class InsertRoleResponse extends Message<InsertRoleResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertRoleResponse {
    return new InsertRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertRoleResponse {
    return new InsertRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertRoleResponse {
    return new InsertRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertRoleResponse | PlainMessage<InsertRoleResponse> | undefined, b: InsertRoleResponse | PlainMessage<InsertRoleResponse> | undefined): boolean {
    return proto3.util.equals(InsertRoleResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateRoleRequest
 */
export class UpdateRoleRequest extends Message<UpdateRoleRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Role role = 3;
   */
  role?: Role;

  constructor(data?: PartialMessage<UpdateRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleRequest | PlainMessage<UpdateRoleRequest> | undefined, b: UpdateRoleRequest | PlainMessage<UpdateRoleRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRoleRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateRoleResponse
 */
export class UpdateRoleResponse extends Message<UpdateRoleResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleResponse | PlainMessage<UpdateRoleResponse> | undefined, b: UpdateRoleResponse | PlainMessage<UpdateRoleResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRoleResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteRoleRequest
 */
export class DeleteRoleRequest extends Message<DeleteRoleRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 role_id = 3;
   */
  roleId = 0;

  constructor(data?: PartialMessage<DeleteRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "role_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined, b: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRoleRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteRoleResponse
 */
export class DeleteRoleResponse extends Message<DeleteRoleResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleResponse | PlainMessage<DeleteRoleResponse> | undefined, b: DeleteRoleResponse | PlainMessage<DeleteRoleResponse> | undefined): boolean {
    return proto3.util.equals(DeleteRoleResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateRoleMenuRequest
 */
export class UpdateRoleMenuRequest extends Message<UpdateRoleMenuRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 role_id = 3;
   */
  roleId = 0;

  /**
   * @generated from field: repeated api.ax.v1.Menu menu_list = 4;
   */
  menuList: Menu[] = [];

  constructor(data?: PartialMessage<UpdateRoleMenuRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateRoleMenuRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "role_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "menu_list", kind: "message", T: Menu, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleMenuRequest {
    return new UpdateRoleMenuRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleMenuRequest {
    return new UpdateRoleMenuRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleMenuRequest {
    return new UpdateRoleMenuRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleMenuRequest | PlainMessage<UpdateRoleMenuRequest> | undefined, b: UpdateRoleMenuRequest | PlainMessage<UpdateRoleMenuRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRoleMenuRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateRoleMenuResponse
 */
export class UpdateRoleMenuResponse extends Message<UpdateRoleMenuResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateRoleMenuResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateRoleMenuResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleMenuResponse {
    return new UpdateRoleMenuResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleMenuResponse {
    return new UpdateRoleMenuResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleMenuResponse {
    return new UpdateRoleMenuResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleMenuResponse | PlainMessage<UpdateRoleMenuResponse> | undefined, b: UpdateRoleMenuResponse | PlainMessage<UpdateRoleMenuResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRoleMenuResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMenuRequest
 */
export class QueryAllMenuRequest extends Message<QueryAllMenuRequest> {
  constructor(data?: PartialMessage<QueryAllMenuRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMenuRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMenuRequest {
    return new QueryAllMenuRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMenuRequest {
    return new QueryAllMenuRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMenuRequest {
    return new QueryAllMenuRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMenuRequest | PlainMessage<QueryAllMenuRequest> | undefined, b: QueryAllMenuRequest | PlainMessage<QueryAllMenuRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMenuRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMenuResponse
 */
export class QueryAllMenuResponse extends Message<QueryAllMenuResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.Menu menu_list = 3;
   */
  menuList: Menu[] = [];

  constructor(data?: PartialMessage<QueryAllMenuResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMenuResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "menu_list", kind: "message", T: Menu, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMenuResponse {
    return new QueryAllMenuResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMenuResponse {
    return new QueryAllMenuResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMenuResponse {
    return new QueryAllMenuResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMenuResponse | PlainMessage<QueryAllMenuResponse> | undefined, b: QueryAllMenuResponse | PlainMessage<QueryAllMenuResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMenuResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryMenuListRequest
 */
export class QueryMenuListRequest extends Message<QueryMenuListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryMenuListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryMenuListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMenuListRequest {
    return new QueryMenuListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMenuListRequest {
    return new QueryMenuListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMenuListRequest {
    return new QueryMenuListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMenuListRequest | PlainMessage<QueryMenuListRequest> | undefined, b: QueryMenuListRequest | PlainMessage<QueryMenuListRequest> | undefined): boolean {
    return proto3.util.equals(QueryMenuListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryMenuListResponse
 */
export class QueryMenuListResponse extends Message<QueryMenuListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.Menu menu_list = 6;
   */
  menuList: Menu[] = [];

  constructor(data?: PartialMessage<QueryMenuListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryMenuListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "menu_list", kind: "message", T: Menu, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMenuListResponse {
    return new QueryMenuListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMenuListResponse {
    return new QueryMenuListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMenuListResponse {
    return new QueryMenuListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMenuListResponse | PlainMessage<QueryMenuListResponse> | undefined, b: QueryMenuListResponse | PlainMessage<QueryMenuListResponse> | undefined): boolean {
    return proto3.util.equals(QueryMenuListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertMenuRequest
 */
export class InsertMenuRequest extends Message<InsertMenuRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Menu menu = 3;
   */
  menu?: Menu;

  constructor(data?: PartialMessage<InsertMenuRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertMenuRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "menu", kind: "message", T: Menu },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMenuRequest {
    return new InsertMenuRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMenuRequest {
    return new InsertMenuRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMenuRequest {
    return new InsertMenuRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMenuRequest | PlainMessage<InsertMenuRequest> | undefined, b: InsertMenuRequest | PlainMessage<InsertMenuRequest> | undefined): boolean {
    return proto3.util.equals(InsertMenuRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertMenuResponse
 */
export class InsertMenuResponse extends Message<InsertMenuResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertMenuResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertMenuResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMenuResponse {
    return new InsertMenuResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMenuResponse {
    return new InsertMenuResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMenuResponse {
    return new InsertMenuResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMenuResponse | PlainMessage<InsertMenuResponse> | undefined, b: InsertMenuResponse | PlainMessage<InsertMenuResponse> | undefined): boolean {
    return proto3.util.equals(InsertMenuResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteMenuRequest
 */
export class DeleteMenuRequest extends Message<DeleteMenuRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 menu_id = 3;
   */
  menuId = 0;

  constructor(data?: PartialMessage<DeleteMenuRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteMenuRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "menu_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteMenuRequest {
    return new DeleteMenuRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteMenuRequest {
    return new DeleteMenuRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteMenuRequest {
    return new DeleteMenuRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteMenuRequest | PlainMessage<DeleteMenuRequest> | undefined, b: DeleteMenuRequest | PlainMessage<DeleteMenuRequest> | undefined): boolean {
    return proto3.util.equals(DeleteMenuRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteMenuResponse
 */
export class DeleteMenuResponse extends Message<DeleteMenuResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteMenuResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteMenuResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteMenuResponse {
    return new DeleteMenuResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteMenuResponse {
    return new DeleteMenuResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteMenuResponse {
    return new DeleteMenuResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteMenuResponse | PlainMessage<DeleteMenuResponse> | undefined, b: DeleteMenuResponse | PlainMessage<DeleteMenuResponse> | undefined): boolean {
    return proto3.util.equals(DeleteMenuResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateMenuRequest
 */
export class UpdateMenuRequest extends Message<UpdateMenuRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Menu menu = 3;
   */
  menu?: Menu;

  constructor(data?: PartialMessage<UpdateMenuRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateMenuRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "menu", kind: "message", T: Menu },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMenuRequest {
    return new UpdateMenuRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMenuRequest {
    return new UpdateMenuRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMenuRequest {
    return new UpdateMenuRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMenuRequest | PlainMessage<UpdateMenuRequest> | undefined, b: UpdateMenuRequest | PlainMessage<UpdateMenuRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMenuRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateMenuResponse
 */
export class UpdateMenuResponse extends Message<UpdateMenuResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateMenuResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateMenuResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMenuResponse {
    return new UpdateMenuResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMenuResponse {
    return new UpdateMenuResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMenuResponse {
    return new UpdateMenuResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMenuResponse | PlainMessage<UpdateMenuResponse> | undefined, b: UpdateMenuResponse | PlainMessage<UpdateMenuResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMenuResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryUserDistributorRequest
 */
export class QueryUserDistributorRequest extends Message<QueryUserDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  constructor(data?: PartialMessage<QueryUserDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryUserDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryUserDistributorRequest {
    return new QueryUserDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryUserDistributorRequest {
    return new QueryUserDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryUserDistributorRequest {
    return new QueryUserDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryUserDistributorRequest | PlainMessage<QueryUserDistributorRequest> | undefined, b: QueryUserDistributorRequest | PlainMessage<QueryUserDistributorRequest> | undefined): boolean {
    return proto3.util.equals(QueryUserDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryUserDistributorResponse
 */
export class QueryUserDistributorResponse extends Message<QueryUserDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 user_num = 5;
   */
  userNum = 0;

  /**
   * @generated from field: repeated api.ax.v1.User user_list = 6;
   */
  userList: User[] = [];

  constructor(data?: PartialMessage<QueryUserDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryUserDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "user_list", kind: "message", T: User, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryUserDistributorResponse {
    return new QueryUserDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryUserDistributorResponse {
    return new QueryUserDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryUserDistributorResponse {
    return new QueryUserDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryUserDistributorResponse | PlainMessage<QueryUserDistributorResponse> | undefined, b: QueryUserDistributorResponse | PlainMessage<QueryUserDistributorResponse> | undefined): boolean {
    return proto3.util.equals(QueryUserDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateUserDistributorRequest
 */
export class UpdateUserDistributorRequest extends Message<UpdateUserDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: repeated int32 user_ids = 4;
   */
  userIds: number[] = [];

  constructor(data?: PartialMessage<UpdateUserDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateUserDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDistributorRequest {
    return new UpdateUserDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDistributorRequest {
    return new UpdateUserDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDistributorRequest {
    return new UpdateUserDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDistributorRequest | PlainMessage<UpdateUserDistributorRequest> | undefined, b: UpdateUserDistributorRequest | PlainMessage<UpdateUserDistributorRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateUserDistributorResponse
 */
export class UpdateUserDistributorResponse extends Message<UpdateUserDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateUserDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateUserDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDistributorResponse {
    return new UpdateUserDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDistributorResponse {
    return new UpdateUserDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDistributorResponse {
    return new UpdateUserDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserDistributorResponse | PlainMessage<UpdateUserDistributorResponse> | undefined, b: UpdateUserDistributorResponse | PlainMessage<UpdateUserDistributorResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllUserRequest
 */
export class QueryAllUserRequest extends Message<QueryAllUserRequest> {
  constructor(data?: PartialMessage<QueryAllUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserRequest {
    return new QueryAllUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserRequest {
    return new QueryAllUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserRequest {
    return new QueryAllUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserRequest | PlainMessage<QueryAllUserRequest> | undefined, b: QueryAllUserRequest | PlainMessage<QueryAllUserRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllUserRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllUserResponse
 */
export class QueryAllUserResponse extends Message<QueryAllUserResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.UserLabel user_list = 3;
   */
  userList: UserLabel[] = [];

  constructor(data?: PartialMessage<QueryAllUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_list", kind: "message", T: UserLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserResponse {
    return new QueryAllUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserResponse {
    return new QueryAllUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserResponse {
    return new QueryAllUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserResponse | PlainMessage<QueryAllUserResponse> | undefined, b: QueryAllUserResponse | PlainMessage<QueryAllUserResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllUserResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllUserV2Request
 */
export class QueryAllUserV2Request extends Message<QueryAllUserV2Request> {
  constructor(data?: PartialMessage<QueryAllUserV2Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllUserV2Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserV2Request {
    return new QueryAllUserV2Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserV2Request {
    return new QueryAllUserV2Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserV2Request {
    return new QueryAllUserV2Request().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserV2Request | PlainMessage<QueryAllUserV2Request> | undefined, b: QueryAllUserV2Request | PlainMessage<QueryAllUserV2Request> | undefined): boolean {
    return proto3.util.equals(QueryAllUserV2Request, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllUserV2Response
 */
export class QueryAllUserV2Response extends Message<QueryAllUserV2Response> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.UserList user_list = 3;
   */
  userList: UserList[] = [];

  constructor(data?: PartialMessage<QueryAllUserV2Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllUserV2Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_list", kind: "message", T: UserList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserV2Response {
    return new QueryAllUserV2Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserV2Response {
    return new QueryAllUserV2Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserV2Response {
    return new QueryAllUserV2Response().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserV2Response | PlainMessage<QueryAllUserV2Response> | undefined, b: QueryAllUserV2Response | PlainMessage<QueryAllUserV2Response> | undefined): boolean {
    return proto3.util.equals(QueryAllUserV2Response, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryDistributorListRequest
 */
export class QueryDistributorListRequest extends Message<QueryDistributorListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: string distributor_id = 4;
   */
  distributorId = "";

  constructor(data?: PartialMessage<QueryDistributorListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryDistributorListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDistributorListRequest {
    return new QueryDistributorListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDistributorListRequest {
    return new QueryDistributorListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDistributorListRequest {
    return new QueryDistributorListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryDistributorListRequest | PlainMessage<QueryDistributorListRequest> | undefined, b: QueryDistributorListRequest | PlainMessage<QueryDistributorListRequest> | undefined): boolean {
    return proto3.util.equals(QueryDistributorListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryDistributorListResponse
 */
export class QueryDistributorListResponse extends Message<QueryDistributorListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.TreeNode distributor_list = 6;
   */
  distributorList: TreeNode[] = [];

  constructor(data?: PartialMessage<QueryDistributorListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryDistributorListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "distributor_list", kind: "message", T: TreeNode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDistributorListResponse {
    return new QueryDistributorListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDistributorListResponse {
    return new QueryDistributorListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDistributorListResponse {
    return new QueryDistributorListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryDistributorListResponse | PlainMessage<QueryDistributorListResponse> | undefined, b: QueryDistributorListResponse | PlainMessage<QueryDistributorListResponse> | undefined): boolean {
    return proto3.util.equals(QueryDistributorListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertDistributorRequest
 */
export class InsertDistributorRequest extends Message<InsertDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Distributor distributor = 3;
   */
  distributor?: Distributor;

  constructor(data?: PartialMessage<InsertDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor", kind: "message", T: Distributor },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertDistributorRequest {
    return new InsertDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertDistributorRequest {
    return new InsertDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertDistributorRequest {
    return new InsertDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertDistributorRequest | PlainMessage<InsertDistributorRequest> | undefined, b: InsertDistributorRequest | PlainMessage<InsertDistributorRequest> | undefined): boolean {
    return proto3.util.equals(InsertDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertDistributorResponse
 */
export class InsertDistributorResponse extends Message<InsertDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertDistributorResponse {
    return new InsertDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertDistributorResponse {
    return new InsertDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertDistributorResponse {
    return new InsertDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertDistributorResponse | PlainMessage<InsertDistributorResponse> | undefined, b: InsertDistributorResponse | PlainMessage<InsertDistributorResponse> | undefined): boolean {
    return proto3.util.equals(InsertDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateDistributorRequest
 */
export class UpdateDistributorRequest extends Message<UpdateDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Distributor distributor = 3;
   */
  distributor?: Distributor;

  constructor(data?: PartialMessage<UpdateDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor", kind: "message", T: Distributor },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDistributorRequest {
    return new UpdateDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDistributorRequest {
    return new UpdateDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDistributorRequest {
    return new UpdateDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDistributorRequest | PlainMessage<UpdateDistributorRequest> | undefined, b: UpdateDistributorRequest | PlainMessage<UpdateDistributorRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateDistributorResponse
 */
export class UpdateDistributorResponse extends Message<UpdateDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDistributorResponse {
    return new UpdateDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDistributorResponse {
    return new UpdateDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDistributorResponse {
    return new UpdateDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDistributorResponse | PlainMessage<UpdateDistributorResponse> | undefined, b: UpdateDistributorResponse | PlainMessage<UpdateDistributorResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryModelListRequest
 */
export class QueryModelListRequest extends Message<QueryModelListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: string model_id = 4;
   */
  modelId = "";

  constructor(data?: PartialMessage<QueryModelListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryModelListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryModelListRequest {
    return new QueryModelListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryModelListRequest {
    return new QueryModelListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryModelListRequest {
    return new QueryModelListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryModelListRequest | PlainMessage<QueryModelListRequest> | undefined, b: QueryModelListRequest | PlainMessage<QueryModelListRequest> | undefined): boolean {
    return proto3.util.equals(QueryModelListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryModelListResponse
 */
export class QueryModelListResponse extends Message<QueryModelListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.TreeNode model_list = 6;
   */
  modelList: TreeNode[] = [];

  constructor(data?: PartialMessage<QueryModelListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryModelListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "model_list", kind: "message", T: TreeNode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryModelListResponse {
    return new QueryModelListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryModelListResponse {
    return new QueryModelListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryModelListResponse {
    return new QueryModelListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryModelListResponse | PlainMessage<QueryModelListResponse> | undefined, b: QueryModelListResponse | PlainMessage<QueryModelListResponse> | undefined): boolean {
    return proto3.util.equals(QueryModelListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertModelRequest
 */
export class InsertModelRequest extends Message<InsertModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Model model = 3;
   */
  model?: Model;

  constructor(data?: PartialMessage<InsertModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertModelRequest {
    return new InsertModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertModelRequest {
    return new InsertModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertModelRequest {
    return new InsertModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertModelRequest | PlainMessage<InsertModelRequest> | undefined, b: InsertModelRequest | PlainMessage<InsertModelRequest> | undefined): boolean {
    return proto3.util.equals(InsertModelRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertModelResponse
 */
export class InsertModelResponse extends Message<InsertModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertModelResponse {
    return new InsertModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertModelResponse {
    return new InsertModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertModelResponse {
    return new InsertModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertModelResponse | PlainMessage<InsertModelResponse> | undefined, b: InsertModelResponse | PlainMessage<InsertModelResponse> | undefined): boolean {
    return proto3.util.equals(InsertModelResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateModelRequest
 */
export class UpdateModelRequest extends Message<UpdateModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.Model model = 3;
   */
  model?: Model;

  constructor(data?: PartialMessage<UpdateModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateModelRequest {
    return new UpdateModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateModelRequest {
    return new UpdateModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateModelRequest {
    return new UpdateModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateModelRequest | PlainMessage<UpdateModelRequest> | undefined, b: UpdateModelRequest | PlainMessage<UpdateModelRequest> | undefined): boolean {
    return proto3.util.equals(UpdateModelRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateModelResponse
 */
export class UpdateModelResponse extends Message<UpdateModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateModelResponse {
    return new UpdateModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateModelResponse {
    return new UpdateModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateModelResponse {
    return new UpdateModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateModelResponse | PlainMessage<UpdateModelResponse> | undefined, b: UpdateModelResponse | PlainMessage<UpdateModelResponse> | undefined): boolean {
    return proto3.util.equals(UpdateModelResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllDistributorRequest
 */
export class QueryAllDistributorRequest extends Message<QueryAllDistributorRequest> {
  constructor(data?: PartialMessage<QueryAllDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDistributorRequest {
    return new QueryAllDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDistributorRequest {
    return new QueryAllDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDistributorRequest {
    return new QueryAllDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDistributorRequest | PlainMessage<QueryAllDistributorRequest> | undefined, b: QueryAllDistributorRequest | PlainMessage<QueryAllDistributorRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllDistributorResponse
 */
export class QueryAllDistributorResponse extends Message<QueryAllDistributorResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.TreeNode tree = 3;
   */
  tree: TreeNode[] = [];

  constructor(data?: PartialMessage<QueryAllDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tree", kind: "message", T: TreeNode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDistributorResponse {
    return new QueryAllDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDistributorResponse {
    return new QueryAllDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDistributorResponse {
    return new QueryAllDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDistributorResponse | PlainMessage<QueryAllDistributorResponse> | undefined, b: QueryAllDistributorResponse | PlainMessage<QueryAllDistributorResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllModelRequest
 */
export class QueryAllModelRequest extends Message<QueryAllModelRequest> {
  /**
   * 0 所有 1 盒子  2电视机
   *
   * @generated from field: int32 type = 1;
   */
  type = 0;

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  constructor(data?: PartialMessage<QueryAllModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllModelRequest {
    return new QueryAllModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllModelRequest {
    return new QueryAllModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllModelRequest {
    return new QueryAllModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllModelRequest | PlainMessage<QueryAllModelRequest> | undefined, b: QueryAllModelRequest | PlainMessage<QueryAllModelRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllModelRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllModelResponse
 */
export class QueryAllModelResponse extends Message<QueryAllModelResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.TreeNode tree = 3;
   */
  tree: TreeNode[] = [];

  constructor(data?: PartialMessage<QueryAllModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tree", kind: "message", T: TreeNode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllModelResponse {
    return new QueryAllModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllModelResponse {
    return new QueryAllModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllModelResponse {
    return new QueryAllModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllModelResponse | PlainMessage<QueryAllModelResponse> | undefined, b: QueryAllModelResponse | PlainMessage<QueryAllModelResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllModelResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateDistributorModelRequest
 */
export class UpdateDistributorModelRequest extends Message<UpdateDistributorModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: repeated string model_id = 4;
   */
  modelId: string[] = [];

  constructor(data?: PartialMessage<UpdateDistributorModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateDistributorModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDistributorModelRequest {
    return new UpdateDistributorModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDistributorModelRequest {
    return new UpdateDistributorModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDistributorModelRequest {
    return new UpdateDistributorModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDistributorModelRequest | PlainMessage<UpdateDistributorModelRequest> | undefined, b: UpdateDistributorModelRequest | PlainMessage<UpdateDistributorModelRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDistributorModelRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateDistributorModelResponse
 */
export class UpdateDistributorModelResponse extends Message<UpdateDistributorModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateDistributorModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateDistributorModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDistributorModelResponse {
    return new UpdateDistributorModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDistributorModelResponse {
    return new UpdateDistributorModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDistributorModelResponse {
    return new UpdateDistributorModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDistributorModelResponse | PlainMessage<UpdateDistributorModelResponse> | undefined, b: UpdateDistributorModelResponse | PlainMessage<UpdateDistributorModelResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDistributorModelResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryFailedRecordListRequest
 */
export class QueryFailedRecordListRequest extends Message<QueryFailedRecordListRequest> {
  /**
   * @generated from field: api.ax.v1.FailedRecord failed_record = 1;
   */
  failedRecord?: FailedRecord;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 2;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryFailedRecordListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryFailedRecordListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "failed_record", kind: "message", T: FailedRecord },
    { no: 2, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFailedRecordListRequest {
    return new QueryFailedRecordListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFailedRecordListRequest {
    return new QueryFailedRecordListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFailedRecordListRequest {
    return new QueryFailedRecordListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryFailedRecordListRequest | PlainMessage<QueryFailedRecordListRequest> | undefined, b: QueryFailedRecordListRequest | PlainMessage<QueryFailedRecordListRequest> | undefined): boolean {
    return proto3.util.equals(QueryFailedRecordListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryFailedRecordListResponse
 */
export class QueryFailedRecordListResponse extends Message<QueryFailedRecordListResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.FailedRecord failed_record_list = 4;
   */
  failedRecordList: FailedRecord[] = [];

  constructor(data?: PartialMessage<QueryFailedRecordListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryFailedRecordListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "failed_record_list", kind: "message", T: FailedRecord, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFailedRecordListResponse {
    return new QueryFailedRecordListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFailedRecordListResponse {
    return new QueryFailedRecordListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFailedRecordListResponse {
    return new QueryFailedRecordListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryFailedRecordListResponse | PlainMessage<QueryFailedRecordListResponse> | undefined, b: QueryFailedRecordListResponse | PlainMessage<QueryFailedRecordListResponse> | undefined): boolean {
    return proto3.util.equals(QueryFailedRecordListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryServerConfigListRequest
 */
export class QueryServerConfigListRequest extends Message<QueryServerConfigListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryServerConfigListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryServerConfigListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryServerConfigListRequest {
    return new QueryServerConfigListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryServerConfigListRequest {
    return new QueryServerConfigListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryServerConfigListRequest {
    return new QueryServerConfigListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryServerConfigListRequest | PlainMessage<QueryServerConfigListRequest> | undefined, b: QueryServerConfigListRequest | PlainMessage<QueryServerConfigListRequest> | undefined): boolean {
    return proto3.util.equals(QueryServerConfigListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryServerConfigListResponse
 */
export class QueryServerConfigListResponse extends Message<QueryServerConfigListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.ServerConfig server_config_list = 6;
   */
  serverConfigList: ServerConfig[] = [];

  constructor(data?: PartialMessage<QueryServerConfigListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryServerConfigListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "server_config_list", kind: "message", T: ServerConfig, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryServerConfigListResponse {
    return new QueryServerConfigListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryServerConfigListResponse {
    return new QueryServerConfigListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryServerConfigListResponse {
    return new QueryServerConfigListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryServerConfigListResponse | PlainMessage<QueryServerConfigListResponse> | undefined, b: QueryServerConfigListResponse | PlainMessage<QueryServerConfigListResponse> | undefined): boolean {
    return proto3.util.equals(QueryServerConfigListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertServerConfigRequest
 */
export class InsertServerConfigRequest extends Message<InsertServerConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.ServerConfig server_config = 3;
   */
  serverConfig?: ServerConfig;

  constructor(data?: PartialMessage<InsertServerConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertServerConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "server_config", kind: "message", T: ServerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertServerConfigRequest {
    return new InsertServerConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertServerConfigRequest {
    return new InsertServerConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertServerConfigRequest {
    return new InsertServerConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertServerConfigRequest | PlainMessage<InsertServerConfigRequest> | undefined, b: InsertServerConfigRequest | PlainMessage<InsertServerConfigRequest> | undefined): boolean {
    return proto3.util.equals(InsertServerConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.InsertServerConfigResponse
 */
export class InsertServerConfigResponse extends Message<InsertServerConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertServerConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.InsertServerConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertServerConfigResponse {
    return new InsertServerConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertServerConfigResponse {
    return new InsertServerConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertServerConfigResponse {
    return new InsertServerConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertServerConfigResponse | PlainMessage<InsertServerConfigResponse> | undefined, b: InsertServerConfigResponse | PlainMessage<InsertServerConfigResponse> | undefined): boolean {
    return proto3.util.equals(InsertServerConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateServerConfigRequest
 */
export class UpdateServerConfigRequest extends Message<UpdateServerConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.ServerConfig server_config = 3;
   */
  serverConfig?: ServerConfig;

  constructor(data?: PartialMessage<UpdateServerConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateServerConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "server_config", kind: "message", T: ServerConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServerConfigRequest {
    return new UpdateServerConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServerConfigRequest {
    return new UpdateServerConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServerConfigRequest {
    return new UpdateServerConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateServerConfigRequest | PlainMessage<UpdateServerConfigRequest> | undefined, b: UpdateServerConfigRequest | PlainMessage<UpdateServerConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateServerConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.UpdateServerConfigResponse
 */
export class UpdateServerConfigResponse extends Message<UpdateServerConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateServerConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.UpdateServerConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServerConfigResponse {
    return new UpdateServerConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServerConfigResponse {
    return new UpdateServerConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServerConfigResponse {
    return new UpdateServerConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateServerConfigResponse | PlainMessage<UpdateServerConfigResponse> | undefined, b: UpdateServerConfigResponse | PlainMessage<UpdateServerConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateServerConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteServerConfigRequest
 */
export class DeleteServerConfigRequest extends Message<DeleteServerConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 server_config_id = 3;
   */
  serverConfigId: number[] = [];

  constructor(data?: PartialMessage<DeleteServerConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteServerConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "server_config_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServerConfigRequest {
    return new DeleteServerConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServerConfigRequest {
    return new DeleteServerConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServerConfigRequest {
    return new DeleteServerConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteServerConfigRequest | PlainMessage<DeleteServerConfigRequest> | undefined, b: DeleteServerConfigRequest | PlainMessage<DeleteServerConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteServerConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.DeleteServerConfigResponse
 */
export class DeleteServerConfigResponse extends Message<DeleteServerConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteServerConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.DeleteServerConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServerConfigResponse {
    return new DeleteServerConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServerConfigResponse {
    return new DeleteServerConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServerConfigResponse {
    return new DeleteServerConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteServerConfigResponse | PlainMessage<DeleteServerConfigResponse> | undefined, b: DeleteServerConfigResponse | PlainMessage<DeleteServerConfigResponse> | undefined): boolean {
    return proto3.util.equals(DeleteServerConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllDistributorModelRequest
 */
export class QueryAllDistributorModelRequest extends Message<QueryAllDistributorModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllDistributorModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllDistributorModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDistributorModelRequest {
    return new QueryAllDistributorModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDistributorModelRequest {
    return new QueryAllDistributorModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDistributorModelRequest {
    return new QueryAllDistributorModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDistributorModelRequest | PlainMessage<QueryAllDistributorModelRequest> | undefined, b: QueryAllDistributorModelRequest | PlainMessage<QueryAllDistributorModelRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllDistributorModelRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllDistributorModelResponse
 */
export class QueryAllDistributorModelResponse extends Message<QueryAllDistributorModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ax.v1.DistributorModelList list = 5;
   */
  list: DistributorModelList[] = [];

  constructor(data?: PartialMessage<QueryAllDistributorModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllDistributorModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "list", kind: "message", T: DistributorModelList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDistributorModelResponse {
    return new QueryAllDistributorModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDistributorModelResponse {
    return new QueryAllDistributorModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDistributorModelResponse {
    return new QueryAllDistributorModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDistributorModelResponse | PlainMessage<QueryAllDistributorModelResponse> | undefined, b: QueryAllDistributorModelResponse | PlainMessage<QueryAllDistributorModelResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllDistributorModelResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacDeviceListRequest
 */
export class QueryAllMacDeviceListRequest extends Message<QueryAllMacDeviceListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacDevice mac_device_filter = 3;
   */
  macDeviceFilter?: MacDevice;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryAllMacDeviceListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacDeviceListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_device_filter", kind: "message", T: MacDevice },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacDeviceListRequest {
    return new QueryAllMacDeviceListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacDeviceListRequest {
    return new QueryAllMacDeviceListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacDeviceListRequest {
    return new QueryAllMacDeviceListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacDeviceListRequest | PlainMessage<QueryAllMacDeviceListRequest> | undefined, b: QueryAllMacDeviceListRequest | PlainMessage<QueryAllMacDeviceListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMacDeviceListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacDeviceListResponse
 */
export class QueryAllMacDeviceListResponse extends Message<QueryAllMacDeviceListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.MacDevice mac_device_list = 6;
   */
  macDeviceList: MacDevice[] = [];

  constructor(data?: PartialMessage<QueryAllMacDeviceListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacDeviceListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "mac_device_list", kind: "message", T: MacDevice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacDeviceListResponse {
    return new QueryAllMacDeviceListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacDeviceListResponse {
    return new QueryAllMacDeviceListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacDeviceListResponse {
    return new QueryAllMacDeviceListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacDeviceListResponse | PlainMessage<QueryAllMacDeviceListResponse> | undefined, b: QueryAllMacDeviceListResponse | PlainMessage<QueryAllMacDeviceListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMacDeviceListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacApkListRequest
 */
export class QueryAllMacApkListRequest extends Message<QueryAllMacApkListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacApk mac_apk_filter = 3;
   */
  macApkFilter?: MacApk;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryAllMacApkListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacApkListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_apk_filter", kind: "message", T: MacApk },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacApkListRequest {
    return new QueryAllMacApkListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacApkListRequest {
    return new QueryAllMacApkListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacApkListRequest {
    return new QueryAllMacApkListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacApkListRequest | PlainMessage<QueryAllMacApkListRequest> | undefined, b: QueryAllMacApkListRequest | PlainMessage<QueryAllMacApkListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMacApkListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacApkListResponse
 */
export class QueryAllMacApkListResponse extends Message<QueryAllMacApkListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.MacApk mac_apk_list = 6;
   */
  macApkList: MacApk[] = [];

  constructor(data?: PartialMessage<QueryAllMacApkListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacApkListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "mac_apk_list", kind: "message", T: MacApk, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacApkListResponse {
    return new QueryAllMacApkListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacApkListResponse {
    return new QueryAllMacApkListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacApkListResponse {
    return new QueryAllMacApkListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacApkListResponse | PlainMessage<QueryAllMacApkListResponse> | undefined, b: QueryAllMacApkListResponse | PlainMessage<QueryAllMacApkListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMacApkListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryActivityListRequest
 */
export class QueryActivityListRequest extends Message<QueryActivityListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacActivityFilter mac_activity_filter = 3;
   */
  macActivityFilter?: MacActivityFilter;

  constructor(data?: PartialMessage<QueryActivityListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryActivityListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_activity_filter", kind: "message", T: MacActivityFilter },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryActivityListRequest {
    return new QueryActivityListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryActivityListRequest {
    return new QueryActivityListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryActivityListRequest {
    return new QueryActivityListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryActivityListRequest | PlainMessage<QueryActivityListRequest> | undefined, b: QueryActivityListRequest | PlainMessage<QueryActivityListRequest> | undefined): boolean {
    return proto3.util.equals(QueryActivityListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryActivityListResponse
 */
export class QueryActivityListResponse extends Message<QueryActivityListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 total = 5;
   */
  total = 0;

  /**
   * @generated from field: repeated api.ax.v1.MacDailyActivity mac_activity_list = 6;
   */
  macActivityList: MacDailyActivity[] = [];

  constructor(data?: PartialMessage<QueryActivityListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryActivityListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "mac_activity_list", kind: "message", T: MacDailyActivity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryActivityListResponse {
    return new QueryActivityListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryActivityListResponse {
    return new QueryActivityListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryActivityListResponse {
    return new QueryActivityListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryActivityListResponse | PlainMessage<QueryActivityListResponse> | undefined, b: QueryActivityListResponse | PlainMessage<QueryActivityListResponse> | undefined): boolean {
    return proto3.util.equals(QueryActivityListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacCityRequest
 */
export class QueryAllMacCityRequest extends Message<QueryAllMacCityRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacCityFilter mac_city_filter = 3;
   */
  macCityFilter?: MacCityFilter;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryAllMacCityRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacCityRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_city_filter", kind: "message", T: MacCityFilter },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacCityRequest {
    return new QueryAllMacCityRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacCityRequest {
    return new QueryAllMacCityRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacCityRequest {
    return new QueryAllMacCityRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacCityRequest | PlainMessage<QueryAllMacCityRequest> | undefined, b: QueryAllMacCityRequest | PlainMessage<QueryAllMacCityRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMacCityRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacCityResponse
 */
export class QueryAllMacCityResponse extends Message<QueryAllMacCityResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.MacActivity mac_activity_list = 6;
   */
  macActivityList: MacActivity[] = [];

  constructor(data?: PartialMessage<QueryAllMacCityResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacCityResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "mac_activity_list", kind: "message", T: MacActivity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacCityResponse {
    return new QueryAllMacCityResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacCityResponse {
    return new QueryAllMacCityResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacCityResponse {
    return new QueryAllMacCityResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacCityResponse | PlainMessage<QueryAllMacCityResponse> | undefined, b: QueryAllMacCityResponse | PlainMessage<QueryAllMacCityResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMacCityResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacAuthRecordListRequest
 */
export class QueryAllMacAuthRecordListRequest extends Message<QueryAllMacAuthRecordListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacAuthRecord mac_auth_filter = 3;
   */
  macAuthFilter?: MacAuthRecord;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryAllMacAuthRecordListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacAuthRecordListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_auth_filter", kind: "message", T: MacAuthRecord },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacAuthRecordListRequest {
    return new QueryAllMacAuthRecordListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacAuthRecordListRequest {
    return new QueryAllMacAuthRecordListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacAuthRecordListRequest {
    return new QueryAllMacAuthRecordListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacAuthRecordListRequest | PlainMessage<QueryAllMacAuthRecordListRequest> | undefined, b: QueryAllMacAuthRecordListRequest | PlainMessage<QueryAllMacAuthRecordListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMacAuthRecordListRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryAllMacAuthRecordListResponse
 */
export class QueryAllMacAuthRecordListResponse extends Message<QueryAllMacAuthRecordListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ax.v1.MacAuthRecord mac_auth_list = 6;
   */
  macAuthList: MacAuthRecord[] = [];

  constructor(data?: PartialMessage<QueryAllMacAuthRecordListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryAllMacAuthRecordListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "mac_auth_list", kind: "message", T: MacAuthRecord, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMacAuthRecordListResponse {
    return new QueryAllMacAuthRecordListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMacAuthRecordListResponse {
    return new QueryAllMacAuthRecordListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMacAuthRecordListResponse {
    return new QueryAllMacAuthRecordListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMacAuthRecordListResponse | PlainMessage<QueryAllMacAuthRecordListResponse> | undefined, b: QueryAllMacAuthRecordListResponse | PlainMessage<QueryAllMacAuthRecordListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMacAuthRecordListResponse, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryModelCountRequest
 */
export class QueryModelCountRequest extends Message<QueryModelCountRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ax.v1.MacActivityFilter mac_activity_filter = 3;
   */
  macActivityFilter?: MacActivityFilter;

  constructor(data?: PartialMessage<QueryModelCountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryModelCountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_activity_filter", kind: "message", T: MacActivityFilter },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryModelCountRequest {
    return new QueryModelCountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryModelCountRequest {
    return new QueryModelCountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryModelCountRequest {
    return new QueryModelCountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryModelCountRequest | PlainMessage<QueryModelCountRequest> | undefined, b: QueryModelCountRequest | PlainMessage<QueryModelCountRequest> | undefined): boolean {
    return proto3.util.equals(QueryModelCountRequest, a, b);
  }
}

/**
 * @generated from message api.ax.v1.QueryModelCountResponse
 */
export class QueryModelCountResponse extends Message<QueryModelCountResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 total = 5;
   */
  total = 0;

  /**
   * @generated from field: repeated api.ax.v1.MacModelCount mac_activity_list = 6;
   */
  macActivityList: MacModelCount[] = [];

  constructor(data?: PartialMessage<QueryModelCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ax.v1.QueryModelCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "mac_activity_list", kind: "message", T: MacModelCount, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryModelCountResponse {
    return new QueryModelCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryModelCountResponse {
    return new QueryModelCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryModelCountResponse {
    return new QueryModelCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryModelCountResponse | PlainMessage<QueryModelCountResponse> | undefined, b: QueryModelCountResponse | PlainMessage<QueryModelCountResponse> | undefined): boolean {
    return proto3.util.equals(QueryModelCountResponse, a, b);
  }
}

