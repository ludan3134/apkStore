// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ta/v1/tas.proto (package api.ta.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { PageMeta } from "../../com/v1/pagemeta_pb.ts";
import { Agreement, Category, CategoryLabel, ClassInfo, ClassLabel, DistributorModelFilter, DistributorModelList, DownloadConfig, RecommendApk, Region, Video } from "./tam_pb.ts";

/**
 * @generated from message api.ta.v1.QueryAgreementListRequest
 */
export class QueryAgreementListRequest extends Message<QueryAgreementListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ta.v1.DistributorModelFilter filter = 4;
   */
  filter?: DistributorModelFilter;

  constructor(data?: PartialMessage<QueryAgreementListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAgreementListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "filter", kind: "message", T: DistributorModelFilter },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAgreementListRequest {
    return new QueryAgreementListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAgreementListRequest {
    return new QueryAgreementListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAgreementListRequest {
    return new QueryAgreementListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAgreementListRequest | PlainMessage<QueryAgreementListRequest> | undefined, b: QueryAgreementListRequest | PlainMessage<QueryAgreementListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAgreementListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryAgreementListResponse
 */
export class QueryAgreementListResponse extends Message<QueryAgreementListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.Agreement agreement_list = 6;
   */
  agreementList: Agreement[] = [];

  constructor(data?: PartialMessage<QueryAgreementListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAgreementListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "agreement_list", kind: "message", T: Agreement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAgreementListResponse {
    return new QueryAgreementListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAgreementListResponse {
    return new QueryAgreementListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAgreementListResponse {
    return new QueryAgreementListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAgreementListResponse | PlainMessage<QueryAgreementListResponse> | undefined, b: QueryAgreementListResponse | PlainMessage<QueryAgreementListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAgreementListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertAgreementRequest
 */
export class InsertAgreementRequest extends Message<InsertAgreementRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.Agreement agreement = 3;
   */
  agreement?: Agreement;

  constructor(data?: PartialMessage<InsertAgreementRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertAgreementRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "agreement", kind: "message", T: Agreement },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertAgreementRequest {
    return new InsertAgreementRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertAgreementRequest {
    return new InsertAgreementRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertAgreementRequest {
    return new InsertAgreementRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertAgreementRequest | PlainMessage<InsertAgreementRequest> | undefined, b: InsertAgreementRequest | PlainMessage<InsertAgreementRequest> | undefined): boolean {
    return proto3.util.equals(InsertAgreementRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertAgreementResponse
 */
export class InsertAgreementResponse extends Message<InsertAgreementResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertAgreementResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertAgreementResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertAgreementResponse {
    return new InsertAgreementResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertAgreementResponse {
    return new InsertAgreementResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertAgreementResponse {
    return new InsertAgreementResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertAgreementResponse | PlainMessage<InsertAgreementResponse> | undefined, b: InsertAgreementResponse | PlainMessage<InsertAgreementResponse> | undefined): boolean {
    return proto3.util.equals(InsertAgreementResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateAgreementRequest
 */
export class UpdateAgreementRequest extends Message<UpdateAgreementRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.Agreement agreement = 3;
   */
  agreement?: Agreement;

  constructor(data?: PartialMessage<UpdateAgreementRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateAgreementRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "agreement", kind: "message", T: Agreement },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAgreementRequest {
    return new UpdateAgreementRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAgreementRequest {
    return new UpdateAgreementRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAgreementRequest {
    return new UpdateAgreementRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAgreementRequest | PlainMessage<UpdateAgreementRequest> | undefined, b: UpdateAgreementRequest | PlainMessage<UpdateAgreementRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAgreementRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateAgreementResponse
 */
export class UpdateAgreementResponse extends Message<UpdateAgreementResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateAgreementResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateAgreementResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAgreementResponse {
    return new UpdateAgreementResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAgreementResponse {
    return new UpdateAgreementResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAgreementResponse {
    return new UpdateAgreementResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAgreementResponse | PlainMessage<UpdateAgreementResponse> | undefined, b: UpdateAgreementResponse | PlainMessage<UpdateAgreementResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAgreementResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryClassListRequest
 */
export class QueryClassListRequest extends Message<QueryClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ta.v1.DistributorModelFilter filter = 4;
   */
  filter?: DistributorModelFilter;

  constructor(data?: PartialMessage<QueryClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "filter", kind: "message", T: DistributorModelFilter },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassListRequest | PlainMessage<QueryClassListRequest> | undefined, b: QueryClassListRequest | PlainMessage<QueryClassListRequest> | undefined): boolean {
    return proto3.util.equals(QueryClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryClassListResponse
 */
export class QueryClassListResponse extends Message<QueryClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.ClassInfo class_list = 6;
   */
  classList: ClassInfo[] = [];

  constructor(data?: PartialMessage<QueryClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "class_list", kind: "message", T: ClassInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassListResponse | PlainMessage<QueryClassListResponse> | undefined, b: QueryClassListResponse | PlainMessage<QueryClassListResponse> | undefined): boolean {
    return proto3.util.equals(QueryClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertClassRequest
 */
export class InsertClassRequest extends Message<InsertClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.ClassInfo class = 3;
   */
  class?: ClassInfo;

  constructor(data?: PartialMessage<InsertClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "message", T: ClassInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassRequest | PlainMessage<InsertClassRequest> | undefined, b: InsertClassRequest | PlainMessage<InsertClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertClassRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertClassResponse
 */
export class InsertClassResponse extends Message<InsertClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassResponse | PlainMessage<InsertClassResponse> | undefined, b: InsertClassResponse | PlainMessage<InsertClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertClassResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateClassRequest
 */
export class UpdateClassRequest extends Message<UpdateClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.ClassInfo class = 3;
   */
  class?: ClassInfo;

  constructor(data?: PartialMessage<UpdateClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "message", T: ClassInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassRequest | PlainMessage<UpdateClassRequest> | undefined, b: UpdateClassRequest | PlainMessage<UpdateClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClassRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateClassResponse
 */
export class UpdateClassResponse extends Message<UpdateClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassResponse | PlainMessage<UpdateClassResponse> | undefined, b: UpdateClassResponse | PlainMessage<UpdateClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateClassResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetRecommendsRequest
 */
export class GetRecommendsRequest extends Message<GetRecommendsRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string class = 3;
   */
  class = "";

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string distributor_id = 5;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 6;
   */
  modelName = "";

  /**
   * @generated from field: string version = 7;
   */
  version = "";

  constructor(data?: PartialMessage<GetRecommendsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetRecommendsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecommendsRequest {
    return new GetRecommendsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecommendsRequest {
    return new GetRecommendsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecommendsRequest {
    return new GetRecommendsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRecommendsRequest | PlainMessage<GetRecommendsRequest> | undefined, b: GetRecommendsRequest | PlainMessage<GetRecommendsRequest> | undefined): boolean {
    return proto3.util.equals(GetRecommendsRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetRecommendsResponse
 */
export class GetRecommendsResponse extends Message<GetRecommendsResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: string version = 6;
   */
  version = "";

  constructor(data?: PartialMessage<GetRecommendsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetRecommendsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecommendsResponse {
    return new GetRecommendsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecommendsResponse {
    return new GetRecommendsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecommendsResponse {
    return new GetRecommendsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRecommendsResponse | PlainMessage<GetRecommendsResponse> | undefined, b: GetRecommendsResponse | PlainMessage<GetRecommendsResponse> | undefined): boolean {
    return proto3.util.equals(GetRecommendsResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetVideoRequest
 */
export class GetVideoRequest extends Message<GetVideoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 video_id = 3;
   */
  videoId = 0;

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string distributor_id = 5;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 6;
   */
  modelName = "";

  constructor(data?: PartialMessage<GetVideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetVideoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "video_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVideoRequest {
    return new GetVideoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVideoRequest {
    return new GetVideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVideoRequest {
    return new GetVideoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVideoRequest | PlainMessage<GetVideoRequest> | undefined, b: GetVideoRequest | PlainMessage<GetVideoRequest> | undefined): boolean {
    return proto3.util.equals(GetVideoRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetVideoResponse
 */
export class GetVideoResponse extends Message<GetVideoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetVideoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetVideoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVideoResponse {
    return new GetVideoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVideoResponse {
    return new GetVideoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVideoResponse {
    return new GetVideoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVideoResponse | PlainMessage<GetVideoResponse> | undefined, b: GetVideoResponse | PlainMessage<GetVideoResponse> | undefined): boolean {
    return proto3.util.equals(GetVideoResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetSearchRequest
 */
export class GetSearchRequest extends Message<GetSearchRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string keyword = 3;
   */
  keyword = "";

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string distributor_id = 5;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 6;
   */
  modelName = "";

  /**
   * @generated from field: string port_type = 7;
   */
  portType = "";

  constructor(data?: PartialMessage<GetSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "port_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSearchRequest {
    return new GetSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSearchRequest {
    return new GetSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSearchRequest {
    return new GetSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSearchRequest | PlainMessage<GetSearchRequest> | undefined, b: GetSearchRequest | PlainMessage<GetSearchRequest> | undefined): boolean {
    return proto3.util.equals(GetSearchRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetSearchResponse
 */
export class GetSearchResponse extends Message<GetSearchResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetSearchResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetSearchResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSearchResponse {
    return new GetSearchResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSearchResponse {
    return new GetSearchResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSearchResponse {
    return new GetSearchResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSearchResponse | PlainMessage<GetSearchResponse> | undefined, b: GetSearchResponse | PlainMessage<GetSearchResponse> | undefined): boolean {
    return proto3.util.equals(GetSearchResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetAgreementRequest
 */
export class GetAgreementRequest extends Message<GetAgreementRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string lang = 3;
   */
  lang = "";

  /**
   * @generated from field: string distributor_id = 4;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 5;
   */
  modelName = "";

  constructor(data?: PartialMessage<GetAgreementRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetAgreementRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAgreementRequest {
    return new GetAgreementRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAgreementRequest {
    return new GetAgreementRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAgreementRequest {
    return new GetAgreementRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAgreementRequest | PlainMessage<GetAgreementRequest> | undefined, b: GetAgreementRequest | PlainMessage<GetAgreementRequest> | undefined): boolean {
    return proto3.util.equals(GetAgreementRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetAgreementResponse
 */
export class GetAgreementResponse extends Message<GetAgreementResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetAgreementResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetAgreementResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAgreementResponse {
    return new GetAgreementResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAgreementResponse {
    return new GetAgreementResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAgreementResponse {
    return new GetAgreementResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAgreementResponse | PlainMessage<GetAgreementResponse> | undefined, b: GetAgreementResponse | PlainMessage<GetAgreementResponse> | undefined): boolean {
    return proto3.util.equals(GetAgreementResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetVideosByCategoryRequest
 */
export class GetVideosByCategoryRequest extends Message<GetVideosByCategoryRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string class = 3;
   */
  class = "";

  /**
   * @generated from field: string category = 4;
   */
  category = "";

  /**
   * @generated from field: string lang = 5;
   */
  lang = "";

  /**
   * @generated from field: string distributor_id = 6;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 7;
   */
  modelName = "";

  constructor(data?: PartialMessage<GetVideosByCategoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetVideosByCategoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVideosByCategoryRequest {
    return new GetVideosByCategoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVideosByCategoryRequest {
    return new GetVideosByCategoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVideosByCategoryRequest {
    return new GetVideosByCategoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVideosByCategoryRequest | PlainMessage<GetVideosByCategoryRequest> | undefined, b: GetVideosByCategoryRequest | PlainMessage<GetVideosByCategoryRequest> | undefined): boolean {
    return proto3.util.equals(GetVideosByCategoryRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.GetVideosByCategoryResponse
 */
export class GetVideosByCategoryResponse extends Message<GetVideosByCategoryResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetVideosByCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.GetVideosByCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVideosByCategoryResponse {
    return new GetVideosByCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVideosByCategoryResponse {
    return new GetVideosByCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVideosByCategoryResponse {
    return new GetVideosByCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVideosByCategoryResponse | PlainMessage<GetVideosByCategoryResponse> | undefined, b: GetVideosByCategoryResponse | PlainMessage<GetVideosByCategoryResponse> | undefined): boolean {
    return proto3.util.equals(GetVideosByCategoryResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryVideoListRequest
 */
export class QueryVideoListRequest extends Message<QueryVideoListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ta.v1.Video video = 4;
   */
  video?: Video;

  constructor(data?: PartialMessage<QueryVideoListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryVideoListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "video", kind: "message", T: Video },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVideoListRequest {
    return new QueryVideoListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVideoListRequest {
    return new QueryVideoListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVideoListRequest {
    return new QueryVideoListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVideoListRequest | PlainMessage<QueryVideoListRequest> | undefined, b: QueryVideoListRequest | PlainMessage<QueryVideoListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVideoListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryVideoListResponse
 */
export class QueryVideoListResponse extends Message<QueryVideoListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.Video video_list = 6;
   */
  videoList: Video[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVideoListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryVideoListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "video_list", kind: "message", T: Video, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVideoListResponse {
    return new QueryVideoListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVideoListResponse {
    return new QueryVideoListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVideoListResponse {
    return new QueryVideoListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVideoListResponse | PlainMessage<QueryVideoListResponse> | undefined, b: QueryVideoListResponse | PlainMessage<QueryVideoListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVideoListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertVideoRequest
 */
export class InsertVideoRequest extends Message<InsertVideoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.Video video = 3;
   */
  video?: Video;

  constructor(data?: PartialMessage<InsertVideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertVideoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "video", kind: "message", T: Video },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVideoRequest {
    return new InsertVideoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVideoRequest {
    return new InsertVideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVideoRequest {
    return new InsertVideoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVideoRequest | PlainMessage<InsertVideoRequest> | undefined, b: InsertVideoRequest | PlainMessage<InsertVideoRequest> | undefined): boolean {
    return proto3.util.equals(InsertVideoRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertVideoResponse
 */
export class InsertVideoResponse extends Message<InsertVideoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVideoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertVideoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVideoResponse {
    return new InsertVideoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVideoResponse {
    return new InsertVideoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVideoResponse {
    return new InsertVideoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVideoResponse | PlainMessage<InsertVideoResponse> | undefined, b: InsertVideoResponse | PlainMessage<InsertVideoResponse> | undefined): boolean {
    return proto3.util.equals(InsertVideoResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateVideoRequest
 */
export class UpdateVideoRequest extends Message<UpdateVideoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.Video video = 3;
   */
  video?: Video;

  constructor(data?: PartialMessage<UpdateVideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateVideoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "video", kind: "message", T: Video },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVideoRequest {
    return new UpdateVideoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVideoRequest {
    return new UpdateVideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVideoRequest {
    return new UpdateVideoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVideoRequest | PlainMessage<UpdateVideoRequest> | undefined, b: UpdateVideoRequest | PlainMessage<UpdateVideoRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVideoRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateVideoResponse
 */
export class UpdateVideoResponse extends Message<UpdateVideoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVideoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateVideoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVideoResponse {
    return new UpdateVideoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVideoResponse {
    return new UpdateVideoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVideoResponse {
    return new UpdateVideoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVideoResponse | PlainMessage<UpdateVideoResponse> | undefined, b: UpdateVideoResponse | PlainMessage<UpdateVideoResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVideoResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DeleteVideoRequest
 */
export class DeleteVideoRequest extends Message<DeleteVideoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 id = 3;
   */
  id = 0;

  /**
   * @generated from field: string distributor_id = 4;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 5;
   */
  modelId = "";

  constructor(data?: PartialMessage<DeleteVideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DeleteVideoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVideoRequest {
    return new DeleteVideoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVideoRequest {
    return new DeleteVideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVideoRequest {
    return new DeleteVideoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVideoRequest | PlainMessage<DeleteVideoRequest> | undefined, b: DeleteVideoRequest | PlainMessage<DeleteVideoRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVideoRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DeleteVideoResponse
 */
export class DeleteVideoResponse extends Message<DeleteVideoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<DeleteVideoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DeleteVideoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVideoResponse {
    return new DeleteVideoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVideoResponse {
    return new DeleteVideoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVideoResponse {
    return new DeleteVideoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVideoResponse | PlainMessage<DeleteVideoResponse> | undefined, b: DeleteVideoResponse | PlainMessage<DeleteVideoResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVideoResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryRecommendApkListRequest
 */
export class QueryRecommendApkListRequest extends Message<QueryRecommendApkListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ta.v1.RecommendApk recommend_apk = 4;
   */
  recommendApk?: RecommendApk;

  constructor(data?: PartialMessage<QueryRecommendApkListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryRecommendApkListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "recommend_apk", kind: "message", T: RecommendApk },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRecommendApkListRequest {
    return new QueryRecommendApkListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRecommendApkListRequest {
    return new QueryRecommendApkListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRecommendApkListRequest {
    return new QueryRecommendApkListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRecommendApkListRequest | PlainMessage<QueryRecommendApkListRequest> | undefined, b: QueryRecommendApkListRequest | PlainMessage<QueryRecommendApkListRequest> | undefined): boolean {
    return proto3.util.equals(QueryRecommendApkListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryRecommendApkListResponse
 */
export class QueryRecommendApkListResponse extends Message<QueryRecommendApkListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.RecommendApk recommend_apk_list = 6;
   */
  recommendApkList: RecommendApk[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryRecommendApkListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryRecommendApkListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "recommend_apk_list", kind: "message", T: RecommendApk, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRecommendApkListResponse {
    return new QueryRecommendApkListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRecommendApkListResponse {
    return new QueryRecommendApkListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRecommendApkListResponse {
    return new QueryRecommendApkListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRecommendApkListResponse | PlainMessage<QueryRecommendApkListResponse> | undefined, b: QueryRecommendApkListResponse | PlainMessage<QueryRecommendApkListResponse> | undefined): boolean {
    return proto3.util.equals(QueryRecommendApkListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertRecommendApkRequest
 */
export class InsertRecommendApkRequest extends Message<InsertRecommendApkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.RecommendApk recommend_apk = 3;
   */
  recommendApk?: RecommendApk;

  constructor(data?: PartialMessage<InsertRecommendApkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertRecommendApkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "recommend_apk", kind: "message", T: RecommendApk },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertRecommendApkRequest {
    return new InsertRecommendApkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertRecommendApkRequest {
    return new InsertRecommendApkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertRecommendApkRequest {
    return new InsertRecommendApkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertRecommendApkRequest | PlainMessage<InsertRecommendApkRequest> | undefined, b: InsertRecommendApkRequest | PlainMessage<InsertRecommendApkRequest> | undefined): boolean {
    return proto3.util.equals(InsertRecommendApkRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertRecommendApkResponse
 */
export class InsertRecommendApkResponse extends Message<InsertRecommendApkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertRecommendApkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertRecommendApkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertRecommendApkResponse {
    return new InsertRecommendApkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertRecommendApkResponse {
    return new InsertRecommendApkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertRecommendApkResponse {
    return new InsertRecommendApkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertRecommendApkResponse | PlainMessage<InsertRecommendApkResponse> | undefined, b: InsertRecommendApkResponse | PlainMessage<InsertRecommendApkResponse> | undefined): boolean {
    return proto3.util.equals(InsertRecommendApkResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateRecommendApkRequest
 */
export class UpdateRecommendApkRequest extends Message<UpdateRecommendApkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.RecommendApk recommend_apk = 3;
   */
  recommendApk?: RecommendApk;

  constructor(data?: PartialMessage<UpdateRecommendApkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateRecommendApkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "recommend_apk", kind: "message", T: RecommendApk },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRecommendApkRequest {
    return new UpdateRecommendApkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRecommendApkRequest {
    return new UpdateRecommendApkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRecommendApkRequest {
    return new UpdateRecommendApkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRecommendApkRequest | PlainMessage<UpdateRecommendApkRequest> | undefined, b: UpdateRecommendApkRequest | PlainMessage<UpdateRecommendApkRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRecommendApkRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateRecommendApkResponse
 */
export class UpdateRecommendApkResponse extends Message<UpdateRecommendApkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateRecommendApkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateRecommendApkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRecommendApkResponse {
    return new UpdateRecommendApkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRecommendApkResponse {
    return new UpdateRecommendApkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRecommendApkResponse {
    return new UpdateRecommendApkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRecommendApkResponse | PlainMessage<UpdateRecommendApkResponse> | undefined, b: UpdateRecommendApkResponse | PlainMessage<UpdateRecommendApkResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRecommendApkResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryCategoryListRequest
 */
export class QueryCategoryListRequest extends Message<QueryCategoryListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ta.v1.Category category = 4;
   */
  category?: Category;

  constructor(data?: PartialMessage<QueryCategoryListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryCategoryListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "category", kind: "message", T: Category },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryCategoryListRequest {
    return new QueryCategoryListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryCategoryListRequest {
    return new QueryCategoryListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryCategoryListRequest {
    return new QueryCategoryListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryCategoryListRequest | PlainMessage<QueryCategoryListRequest> | undefined, b: QueryCategoryListRequest | PlainMessage<QueryCategoryListRequest> | undefined): boolean {
    return proto3.util.equals(QueryCategoryListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryCategoryListResponse
 */
export class QueryCategoryListResponse extends Message<QueryCategoryListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.Category category_list = 6;
   */
  categoryList: Category[] = [];

  constructor(data?: PartialMessage<QueryCategoryListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryCategoryListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "category_list", kind: "message", T: Category, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryCategoryListResponse {
    return new QueryCategoryListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryCategoryListResponse {
    return new QueryCategoryListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryCategoryListResponse {
    return new QueryCategoryListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryCategoryListResponse | PlainMessage<QueryCategoryListResponse> | undefined, b: QueryCategoryListResponse | PlainMessage<QueryCategoryListResponse> | undefined): boolean {
    return proto3.util.equals(QueryCategoryListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryRegionListRequest
 */
export class QueryRegionListRequest extends Message<QueryRegionListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryRegionListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryRegionListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRegionListRequest {
    return new QueryRegionListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRegionListRequest {
    return new QueryRegionListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRegionListRequest {
    return new QueryRegionListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRegionListRequest | PlainMessage<QueryRegionListRequest> | undefined, b: QueryRegionListRequest | PlainMessage<QueryRegionListRequest> | undefined): boolean {
    return proto3.util.equals(QueryRegionListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryRegionListResponse
 */
export class QueryRegionListResponse extends Message<QueryRegionListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.Region region_list = 6;
   */
  regionList: Region[] = [];

  constructor(data?: PartialMessage<QueryRegionListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryRegionListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "region_list", kind: "message", T: Region, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRegionListResponse {
    return new QueryRegionListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRegionListResponse {
    return new QueryRegionListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRegionListResponse {
    return new QueryRegionListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRegionListResponse | PlainMessage<QueryRegionListResponse> | undefined, b: QueryRegionListResponse | PlainMessage<QueryRegionListResponse> | undefined): boolean {
    return proto3.util.equals(QueryRegionListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryDownloadConfigListRequest
 */
export class QueryDownloadConfigListRequest extends Message<QueryDownloadConfigListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryDownloadConfigListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryDownloadConfigListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDownloadConfigListRequest {
    return new QueryDownloadConfigListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDownloadConfigListRequest {
    return new QueryDownloadConfigListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDownloadConfigListRequest {
    return new QueryDownloadConfigListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryDownloadConfigListRequest | PlainMessage<QueryDownloadConfigListRequest> | undefined, b: QueryDownloadConfigListRequest | PlainMessage<QueryDownloadConfigListRequest> | undefined): boolean {
    return proto3.util.equals(QueryDownloadConfigListRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryDownloadConfigListResponse
 */
export class QueryDownloadConfigListResponse extends Message<QueryDownloadConfigListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ta.v1.DownloadConfig download_config_list = 6;
   */
  downloadConfigList: DownloadConfig[] = [];

  constructor(data?: PartialMessage<QueryDownloadConfigListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryDownloadConfigListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "download_config_list", kind: "message", T: DownloadConfig, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDownloadConfigListResponse {
    return new QueryDownloadConfigListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDownloadConfigListResponse {
    return new QueryDownloadConfigListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDownloadConfigListResponse {
    return new QueryDownloadConfigListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryDownloadConfigListResponse | PlainMessage<QueryDownloadConfigListResponse> | undefined, b: QueryDownloadConfigListResponse | PlainMessage<QueryDownloadConfigListResponse> | undefined): boolean {
    return proto3.util.equals(QueryDownloadConfigListResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertDownloadConfigRequest
 */
export class InsertDownloadConfigRequest extends Message<InsertDownloadConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.DownloadConfig download_config = 3;
   */
  downloadConfig?: DownloadConfig;

  constructor(data?: PartialMessage<InsertDownloadConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertDownloadConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "download_config", kind: "message", T: DownloadConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertDownloadConfigRequest {
    return new InsertDownloadConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertDownloadConfigRequest {
    return new InsertDownloadConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertDownloadConfigRequest {
    return new InsertDownloadConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertDownloadConfigRequest | PlainMessage<InsertDownloadConfigRequest> | undefined, b: InsertDownloadConfigRequest | PlainMessage<InsertDownloadConfigRequest> | undefined): boolean {
    return proto3.util.equals(InsertDownloadConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.InsertDownloadConfigResponse
 */
export class InsertDownloadConfigResponse extends Message<InsertDownloadConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertDownloadConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.InsertDownloadConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertDownloadConfigResponse {
    return new InsertDownloadConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertDownloadConfigResponse {
    return new InsertDownloadConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertDownloadConfigResponse {
    return new InsertDownloadConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertDownloadConfigResponse | PlainMessage<InsertDownloadConfigResponse> | undefined, b: InsertDownloadConfigResponse | PlainMessage<InsertDownloadConfigResponse> | undefined): boolean {
    return proto3.util.equals(InsertDownloadConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateDownloadConfigRequest
 */
export class UpdateDownloadConfigRequest extends Message<UpdateDownloadConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ta.v1.DownloadConfig download_config = 3;
   */
  downloadConfig?: DownloadConfig;

  constructor(data?: PartialMessage<UpdateDownloadConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateDownloadConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "download_config", kind: "message", T: DownloadConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDownloadConfigRequest {
    return new UpdateDownloadConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDownloadConfigRequest {
    return new UpdateDownloadConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDownloadConfigRequest {
    return new UpdateDownloadConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDownloadConfigRequest | PlainMessage<UpdateDownloadConfigRequest> | undefined, b: UpdateDownloadConfigRequest | PlainMessage<UpdateDownloadConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDownloadConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.UpdateDownloadConfigResponse
 */
export class UpdateDownloadConfigResponse extends Message<UpdateDownloadConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateDownloadConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.UpdateDownloadConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDownloadConfigResponse {
    return new UpdateDownloadConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDownloadConfigResponse {
    return new UpdateDownloadConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDownloadConfigResponse {
    return new UpdateDownloadConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDownloadConfigResponse | PlainMessage<UpdateDownloadConfigResponse> | undefined, b: UpdateDownloadConfigResponse | PlainMessage<UpdateDownloadConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDownloadConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DeleteDownloadConfigRequest
 */
export class DeleteDownloadConfigRequest extends Message<DeleteDownloadConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 id = 3;
   */
  id = 0;

  constructor(data?: PartialMessage<DeleteDownloadConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DeleteDownloadConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDownloadConfigRequest {
    return new DeleteDownloadConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDownloadConfigRequest {
    return new DeleteDownloadConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDownloadConfigRequest {
    return new DeleteDownloadConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteDownloadConfigRequest | PlainMessage<DeleteDownloadConfigRequest> | undefined, b: DeleteDownloadConfigRequest | PlainMessage<DeleteDownloadConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteDownloadConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DeleteDownloadConfigResponse
 */
export class DeleteDownloadConfigResponse extends Message<DeleteDownloadConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteDownloadConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DeleteDownloadConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDownloadConfigResponse {
    return new DeleteDownloadConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDownloadConfigResponse {
    return new DeleteDownloadConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDownloadConfigResponse {
    return new DeleteDownloadConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteDownloadConfigResponse | PlainMessage<DeleteDownloadConfigResponse> | undefined, b: DeleteDownloadConfigResponse | PlainMessage<DeleteDownloadConfigResponse> | undefined): boolean {
    return proto3.util.equals(DeleteDownloadConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.ParseYoutubeRequest
 */
export class ParseYoutubeRequest extends Message<ParseYoutubeRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string video_id = 3;
   */
  videoId = "";

  /**
   * @generated from field: string language = 4;
   */
  language = "";

  constructor(data?: PartialMessage<ParseYoutubeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.ParseYoutubeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "video_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseYoutubeRequest {
    return new ParseYoutubeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseYoutubeRequest {
    return new ParseYoutubeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseYoutubeRequest {
    return new ParseYoutubeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ParseYoutubeRequest | PlainMessage<ParseYoutubeRequest> | undefined, b: ParseYoutubeRequest | PlainMessage<ParseYoutubeRequest> | undefined): boolean {
    return proto3.util.equals(ParseYoutubeRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.ParseYoutubeResponse
 */
export class ParseYoutubeResponse extends Message<ParseYoutubeResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.ta.v1.Video video = 5;
   */
  video?: Video;

  constructor(data?: PartialMessage<ParseYoutubeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.ParseYoutubeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "video", kind: "message", T: Video },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseYoutubeResponse {
    return new ParseYoutubeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseYoutubeResponse {
    return new ParseYoutubeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseYoutubeResponse {
    return new ParseYoutubeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ParseYoutubeResponse | PlainMessage<ParseYoutubeResponse> | undefined, b: ParseYoutubeResponse | PlainMessage<ParseYoutubeResponse> | undefined): boolean {
    return proto3.util.equals(ParseYoutubeResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryAllClassRequest
 */
export class QueryAllClassRequest extends Message<QueryAllClassRequest> {
  /**
   * @generated from field: string lang = 1;
   */
  lang = "";

  constructor(data?: PartialMessage<QueryAllClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAllClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllClassRequest {
    return new QueryAllClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllClassRequest {
    return new QueryAllClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllClassRequest {
    return new QueryAllClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllClassRequest | PlainMessage<QueryAllClassRequest> | undefined, b: QueryAllClassRequest | PlainMessage<QueryAllClassRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllClassRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryAllClassResponse
 */
export class QueryAllClassResponse extends Message<QueryAllClassResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ta.v1.ClassLabel class_list = 3;
   */
  classList: ClassLabel[] = [];

  constructor(data?: PartialMessage<QueryAllClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAllClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "class_list", kind: "message", T: ClassLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllClassResponse {
    return new QueryAllClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllClassResponse {
    return new QueryAllClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllClassResponse {
    return new QueryAllClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllClassResponse | PlainMessage<QueryAllClassResponse> | undefined, b: QueryAllClassResponse | PlainMessage<QueryAllClassResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllClassResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryAllCategoryRequest
 */
export class QueryAllCategoryRequest extends Message<QueryAllCategoryRequest> {
  /**
   * @generated from field: int32 class_id = 1;
   */
  classId = 0;

  /**
   * @generated from field: string lang = 2;
   */
  lang = "";

  constructor(data?: PartialMessage<QueryAllCategoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAllCategoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllCategoryRequest {
    return new QueryAllCategoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllCategoryRequest {
    return new QueryAllCategoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllCategoryRequest {
    return new QueryAllCategoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllCategoryRequest | PlainMessage<QueryAllCategoryRequest> | undefined, b: QueryAllCategoryRequest | PlainMessage<QueryAllCategoryRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllCategoryRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryAllCategoryResponse
 */
export class QueryAllCategoryResponse extends Message<QueryAllCategoryResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ta.v1.CategoryLabel category_list = 3;
   */
  categoryList: CategoryLabel[] = [];

  constructor(data?: PartialMessage<QueryAllCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryAllCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "category_list", kind: "message", T: CategoryLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllCategoryResponse {
    return new QueryAllCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllCategoryResponse {
    return new QueryAllCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllCategoryResponse {
    return new QueryAllCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllCategoryResponse | PlainMessage<QueryAllCategoryResponse> | undefined, b: QueryAllCategoryResponse | PlainMessage<QueryAllCategoryResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllCategoryResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryBindDistributorModelRequest
 */
export class QueryBindDistributorModelRequest extends Message<QueryBindDistributorModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * 1 协议 2 选项 3 推荐apk 4 视频
   *
   * @generated from field: int32 query_type = 3;
   */
  queryType = 0;

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  constructor(data?: PartialMessage<QueryBindDistributorModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryBindDistributorModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "query_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBindDistributorModelRequest {
    return new QueryBindDistributorModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBindDistributorModelRequest {
    return new QueryBindDistributorModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBindDistributorModelRequest {
    return new QueryBindDistributorModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBindDistributorModelRequest | PlainMessage<QueryBindDistributorModelRequest> | undefined, b: QueryBindDistributorModelRequest | PlainMessage<QueryBindDistributorModelRequest> | undefined): boolean {
    return proto3.util.equals(QueryBindDistributorModelRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.QueryBindDistributorModelResponse
 */
export class QueryBindDistributorModelResponse extends Message<QueryBindDistributorModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ta.v1.DistributorModelList list = 5;
   */
  list: DistributorModelList[] = [];

  constructor(data?: PartialMessage<QueryBindDistributorModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.QueryBindDistributorModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "list", kind: "message", T: DistributorModelList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBindDistributorModelResponse {
    return new QueryBindDistributorModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBindDistributorModelResponse {
    return new QueryBindDistributorModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBindDistributorModelResponse {
    return new QueryBindDistributorModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBindDistributorModelResponse | PlainMessage<QueryBindDistributorModelResponse> | undefined, b: QueryBindDistributorModelResponse | PlainMessage<QueryBindDistributorModelResponse> | undefined): boolean {
    return proto3.util.equals(QueryBindDistributorModelResponse, a, b);
  }
}

/**
 * @generated from message api.ta.v1.BindDistributorModelRequest
 */
export class BindDistributorModelRequest extends Message<BindDistributorModelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 query_type = 3;
   */
  queryType = 0;

  /**
   * @generated from field: int32 id = 4;
   */
  id = 0;

  /**
   * @generated from field: repeated api.ta.v1.DistributorModelList list = 5;
   */
  list: DistributorModelList[] = [];

  constructor(data?: PartialMessage<BindDistributorModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.BindDistributorModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "query_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "list", kind: "message", T: DistributorModelList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindDistributorModelRequest {
    return new BindDistributorModelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindDistributorModelRequest {
    return new BindDistributorModelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindDistributorModelRequest {
    return new BindDistributorModelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BindDistributorModelRequest | PlainMessage<BindDistributorModelRequest> | undefined, b: BindDistributorModelRequest | PlainMessage<BindDistributorModelRequest> | undefined): boolean {
    return proto3.util.equals(BindDistributorModelRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.BindDistributorModelResponse
 */
export class BindDistributorModelResponse extends Message<BindDistributorModelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<BindDistributorModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.BindDistributorModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindDistributorModelResponse {
    return new BindDistributorModelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindDistributorModelResponse {
    return new BindDistributorModelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindDistributorModelResponse {
    return new BindDistributorModelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BindDistributorModelResponse | PlainMessage<BindDistributorModelResponse> | undefined, b: BindDistributorModelResponse | PlainMessage<BindDistributorModelResponse> | undefined): boolean {
    return proto3.util.equals(BindDistributorModelResponse, a, b);
  }
}

