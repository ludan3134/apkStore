// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ux/v1/auth.proto (package api.ux.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from enum api.ux.v1.AuthRole
 */
export enum AuthRole {
  /**
   * @generated from enum value: AUTH_ROLE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTH_ROLE_ADMIN = 1;
   */
  ADMIN = 1,

  /**
   * @generated from enum value: AUTH_ROLE_USER = 2;
   */
  USER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AuthRole)
proto3.util.setEnumType(AuthRole, "api.ux.v1.AuthRole", [
  { no: 0, name: "AUTH_ROLE_UNSPECIFIED" },
  { no: 1, name: "AUTH_ROLE_ADMIN" },
  { no: 2, name: "AUTH_ROLE_USER" },
]);

/**
 * @generated from message api.ux.v1.AuthUser
 */
export class AuthUser extends Message<AuthUser> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string user_name = 2;
   */
  userName = "";

  /**
   * @generated from field: string password = 4;
   */
  password = "";

  /**
   * @generated from field: string access_token = 3;
   */
  accessToken = "";

  /**
   * @generated from field: bool is_active = 5;
   */
  isActive = false;

  /**
   * @generated from field: api.ux.v1.AuthRole role = 6;
   */
  role = AuthRole.UNSPECIFIED;

  /**
   * @generated from field: string expire_date = 7;
   */
  expireDate = "";

  /**
   * @generated from field: string created_at = 8;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 9;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<AuthUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.AuthUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "role", kind: "enum", T: proto3.getEnumType(AuthRole) },
    { no: 7, name: "expire_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthUser {
    return new AuthUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthUser {
    return new AuthUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthUser {
    return new AuthUser().fromJsonString(jsonString, options);
  }

  static equals(a: AuthUser | PlainMessage<AuthUser> | undefined, b: AuthUser | PlainMessage<AuthUser> | undefined): boolean {
    return proto3.util.equals(AuthUser, a, b);
  }
}

/**
 * @generated from message api.ux.v1.SignInRequest
 */
export class SignInRequest extends Message<SignInRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 area_id = 3;
   */
  areaId = 0;

  /**
   * @generated from field: string user_name = 5;
   */
  userName = "";

  /**
   * @generated from field: string password = 6;
   */
  password = "";

  /**
   * @generated from field: string access_token = 7;
   */
  accessToken = "";

  constructor(data?: PartialMessage<SignInRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.SignInRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInRequest {
    return new SignInRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignInRequest | PlainMessage<SignInRequest> | undefined, b: SignInRequest | PlainMessage<SignInRequest> | undefined): boolean {
    return proto3.util.equals(SignInRequest, a, b);
  }
}

/**
 * @generated from message api.ux.v1.SignInResponse
 */
export class SignInResponse extends Message<SignInResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 status_code = 3;
   */
  statusCode = 0;

  /**
   * @generated from field: int32 area_id = 4;
   */
  areaId = 0;

  /**
   * @generated from field: bool status = 5;
   */
  status = false;

  /**
   * @generated from field: string msg = 6;
   */
  msg = "";

  /**
   * @generated from field: string access_token = 7;
   */
  accessToken = "";

  /**
   * @generated from field: string refresh_token = 8;
   */
  refreshToken = "";

  constructor(data?: PartialMessage<SignInResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.SignInResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInResponse {
    return new SignInResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignInResponse | PlainMessage<SignInResponse> | undefined, b: SignInResponse | PlainMessage<SignInResponse> | undefined): boolean {
    return proto3.util.equals(SignInResponse, a, b);
  }
}

/**
 * @generated from message api.ux.v1.QueryAuthListRequest
 */
export class QueryAuthListRequest extends Message<QueryAuthListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 area_id = 3;
   */
  areaId = 0;

  constructor(data?: PartialMessage<QueryAuthListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.QueryAuthListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAuthListRequest {
    return new QueryAuthListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAuthListRequest {
    return new QueryAuthListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAuthListRequest {
    return new QueryAuthListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAuthListRequest | PlainMessage<QueryAuthListRequest> | undefined, b: QueryAuthListRequest | PlainMessage<QueryAuthListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAuthListRequest, a, b);
  }
}

/**
 * @generated from message api.ux.v1.QueryAuthListResponse
 */
export class QueryAuthListResponse extends Message<QueryAuthListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 status_code = 3;
   */
  statusCode = 0;

  /**
   * @generated from field: int32 area_id = 4;
   */
  areaId = 0;

  /**
   * @generated from field: bool status = 5;
   */
  status = false;

  /**
   * @generated from field: string msg = 6;
   */
  msg = "";

  /**
   * @generated from field: repeated api.ux.v1.AuthUser auth_user_list = 7;
   */
  authUserList: AuthUser[] = [];

  constructor(data?: PartialMessage<QueryAuthListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.QueryAuthListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "auth_user_list", kind: "message", T: AuthUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAuthListResponse {
    return new QueryAuthListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAuthListResponse {
    return new QueryAuthListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAuthListResponse {
    return new QueryAuthListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAuthListResponse | PlainMessage<QueryAuthListResponse> | undefined, b: QueryAuthListResponse | PlainMessage<QueryAuthListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAuthListResponse, a, b);
  }
}

/**
 * @generated from message api.ux.v1.UpdateAuthListRequest
 */
export class UpdateAuthListRequest extends Message<UpdateAuthListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 area_id = 3;
   */
  areaId = 0;

  /**
   * @generated from field: repeated api.ux.v1.AuthUser auth_user_list = 4;
   */
  authUserList: AuthUser[] = [];

  constructor(data?: PartialMessage<UpdateAuthListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.UpdateAuthListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "auth_user_list", kind: "message", T: AuthUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAuthListRequest {
    return new UpdateAuthListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAuthListRequest {
    return new UpdateAuthListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAuthListRequest {
    return new UpdateAuthListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAuthListRequest | PlainMessage<UpdateAuthListRequest> | undefined, b: UpdateAuthListRequest | PlainMessage<UpdateAuthListRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAuthListRequest, a, b);
  }
}

/**
 * @generated from message api.ux.v1.UpdateAuthListResponse
 */
export class UpdateAuthListResponse extends Message<UpdateAuthListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 status_code = 3;
   */
  statusCode = 0;

  /**
   * @generated from field: int32 area_id = 4;
   */
  areaId = 0;

  /**
   * @generated from field: bool status = 5;
   */
  status = false;

  /**
   * @generated from field: string msg = 6;
   */
  msg = "";

  /**
   * @generated from field: repeated api.ux.v1.AuthUser auth_user_list = 7;
   */
  authUserList: AuthUser[] = [];

  constructor(data?: PartialMessage<UpdateAuthListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ux.v1.UpdateAuthListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "area_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "auth_user_list", kind: "message", T: AuthUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAuthListResponse {
    return new UpdateAuthListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAuthListResponse {
    return new UpdateAuthListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAuthListResponse {
    return new UpdateAuthListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAuthListResponse | PlainMessage<UpdateAuthListResponse> | undefined, b: UpdateAuthListResponse | PlainMessage<UpdateAuthListResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAuthListResponse, a, b);
  }
}

