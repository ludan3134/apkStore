// a3 服务采用的模型, 清除所有不必要字段

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/psm/v1/psm.proto (package api.psm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from enum api.psm.v1.LotStatus
 */
export enum LotStatus {
  /**
   * 初始状态, 没有使用
   *
   * @generated from enum value: LOT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 可编辑
   *
   * @generated from enum value: LOT_STATUS_EDITABLE = 1;
   */
  EDITABLE = 1,

  /**
   * 确认不再修改
   *
   * @generated from enum value: LOT_STATUS_CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * 进入生产流程
   *
   * @generated from enum value: LOT_STATUS_READY = 3;
   */
  READY = 3,

  /**
   * 正在处理
   *
   * @generated from enum value: LOT_STATUS_PROCESSING = 4;
   */
  PROCESSING = 4,

  /**
   * 处理完毕
   *
   * @generated from enum value: LOT_STATUS_PROCESSED = 5;
   */
  PROCESSED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(LotStatus)
proto3.util.setEnumType(LotStatus, "api.psm.v1.LotStatus", [
  { no: 0, name: "LOT_STATUS_UNSPECIFIED" },
  { no: 1, name: "LOT_STATUS_EDITABLE" },
  { no: 2, name: "LOT_STATUS_CONFIRMED" },
  { no: 3, name: "LOT_STATUS_READY" },
  { no: 4, name: "LOT_STATUS_PROCESSING" },
  { no: 5, name: "LOT_STATUS_PROCESSED" },
]);

/**
 * *
 * 默认为0,
 * 0: 未使用
 * 1:可能要修改
 * 2: 确认不再修改
 * 3: 要求生成 mac / serial
 *  4: 正在处理
 *  5: 已经生成完毕,
 * 6:处理失败
 * 7: 准备导出
 * 8: 导出成功
 * 9: 嵌入 a3 准备测试
 *
 * @generated from enum api.psm.v1.MSSStatus
 */
export enum MSSStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: MSS_STATUS_UNSPECIFIED = 0;
   */
  MSS_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MSS_STATUS_EDITABLE = 1;
   */
  MSS_STATUS_EDITABLE = 1,

  /**
   * @generated from enum value: MSS_STATUS_CONFIRMED = 2;
   */
  MSS_STATUS_CONFIRMED = 2,

  /**
   * 准备生成 mac / serial
   *
   * @generated from enum value: MSS_STATUS_READY = 3;
   */
  MSS_STATUS_READY = 3,

  /**
   * 正在处理
   *
   * @generated from enum value: MSS_STATUS_PROCESSING = 4;
   */
  MSS_STATUS_PROCESSING = 4,

  /**
   * 处理完毕, 成功
   *
   * @generated from enum value: MSS_STATUS_PROCESSED = 5;
   */
  MSS_STATUS_PROCESSED = 5,

  /**
   * 操作失败
   *
   * @generated from enum value: MSS_STATUS_FAILED = 6;
   */
  MSS_STATUS_FAILED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(MSSStatus)
proto3.util.setEnumType(MSSStatus, "api.psm.v1.MSSStatus", [
  { no: 0, name: "MSS_STATUS_UNSPECIFIED" },
  { no: 1, name: "MSS_STATUS_EDITABLE" },
  { no: 2, name: "MSS_STATUS_CONFIRMED" },
  { no: 3, name: "MSS_STATUS_READY" },
  { no: 4, name: "MSS_STATUS_PROCESSING" },
  { no: 5, name: "MSS_STATUS_PROCESSED" },
  { no: 6, name: "MSS_STATUS_FAILED" },
]);

/**
 * @generated from enum api.psm.v1.TwStatus
 */
export enum TwStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: TW_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 预设
   *
   * @generated from enum value: TW_STATUS_PRESET = 1;
   */
  PRESET = 1,

  /**
   * 确认不再修改
   *
   * @generated from enum value: TW_STATUS_CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * 可以进入生产测试流程
   *
   * @generated from enum value: TW_STATUS_READY = 3;
   */
  READY = 3,

  /**
   * 正在处理, 即正在测试中
   *
   * @generated from enum value: TW_STATUS_PROCESSING = 4;
   */
  PROCESSING = 4,

  /**
   * 处理完毕, 可以导出
   *
   * @generated from enum value: TW_STATUS_PROCESSED = 5;
   */
  PROCESSED = 5,

  /**
   * 处理失败
   *
   * @generated from enum value: TW_STATUS_FAILED = 6;
   */
  FAILED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(TwStatus)
proto3.util.setEnumType(TwStatus, "api.psm.v1.TwStatus", [
  { no: 0, name: "TW_STATUS_UNSPECIFIED" },
  { no: 1, name: "TW_STATUS_PRESET" },
  { no: 2, name: "TW_STATUS_CONFIRMED" },
  { no: 3, name: "TW_STATUS_READY" },
  { no: 4, name: "TW_STATUS_PROCESSING" },
  { no: 5, name: "TW_STATUS_PROCESSED" },
  { no: 6, name: "TW_STATUS_FAILED" },
]);

/**
 * @generated from enum api.psm.v1.TestType
 */
export enum TestType {
  /**
   * 初始状态
   *
   * @generated from enum value: TEST_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 功能性测试
   *
   * @generated from enum value: TEST_TYPE_FUNCTIONAL = 1;
   */
  FUNCTIONAL = 1,

  /**
   * 稳定性测试/老化测试
   *
   * @generated from enum value: TEST_TYPE_ROBUST = 2;
   */
  ROBUST = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TestType)
proto3.util.setEnumType(TestType, "api.psm.v1.TestType", [
  { no: 0, name: "TEST_TYPE_UNSPECIFIED" },
  { no: 1, name: "TEST_TYPE_FUNCTIONAL" },
  { no: 2, name: "TEST_TYPE_ROBUST" },
]);

/**
 * 单个测试类型的测试结果
 *
 * @generated from enum api.psm.v1.TestStatus
 */
export enum TestStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: TEST_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 等待测试
   *
   * @generated from enum value: TEST_STATUS_WAITING = 1;
   */
  WAITING = 1,

  /**
   * 正在测试
   *
   * @generated from enum value: TEST_STATUS_TESTING = 2;
   */
  TESTING = 2,

  /**
   * 测试成功
   *
   * @generated from enum value: TEST_STATUS_SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * 测试失败
   *
   * @generated from enum value: TEST_STATUS_FAILED = 4;
   */
  FAILED = 4,

  /**
   * 重新测试
   *
   * @generated from enum value: TEST_STATUS_RETEST = 5;
   */
  RETEST = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(TestStatus)
proto3.util.setEnumType(TestStatus, "api.psm.v1.TestStatus", [
  { no: 0, name: "TEST_STATUS_UNSPECIFIED" },
  { no: 1, name: "TEST_STATUS_WAITING" },
  { no: 2, name: "TEST_STATUS_TESTING" },
  { no: 3, name: "TEST_STATUS_SUCCESS" },
  { no: 4, name: "TEST_STATUS_FAILED" },
  { no: 5, name: "TEST_STATUS_RETEST" },
]);

/**
 * 测试结果判定
 *
 * @generated from enum api.psm.v1.QaStatus
 */
export enum QaStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: QA_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 等待测试
   *
   * @generated from enum value: QA_STATUS_WAITING = 1;
   */
  WAITING = 1,

  /**
   * 测试成功
   *
   * @generated from enum value: QA_STATUS_SUCCESS = 2;
   */
  SUCCESS = 2,

  /**
   * 测试失败
   *
   * @generated from enum value: QA_STATUS_FAILED = 3;
   */
  FAILED = 3,

  /**
   * 重新测试
   *
   * @generated from enum value: QA_STATUS_RETEST = 4;
   */
  RETEST = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(QaStatus)
proto3.util.setEnumType(QaStatus, "api.psm.v1.QaStatus", [
  { no: 0, name: "QA_STATUS_UNSPECIFIED" },
  { no: 1, name: "QA_STATUS_WAITING" },
  { no: 2, name: "QA_STATUS_SUCCESS" },
  { no: 3, name: "QA_STATUS_FAILED" },
  { no: 4, name: "QA_STATUS_RETEST" },
]);

/**
 * @generated from enum api.psm.v1.BoxStatus
 */
export enum BoxStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: BOX_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BOX_STATUS_EDITABLE = 1;
   */
  EDITABLE = 1,

  /**
   * @generated from enum value: BOX_STATUS_CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * 准备生成 boxing_record
   *
   * @generated from enum value: BOX_STATUS_READY = 3;
   */
  READY = 3,

  /**
   * 正在处理
   *
   * @generated from enum value: BOX_STATUS_PROCESSING = 4;
   */
  PROCESSING = 4,

  /**
   * 处理完毕, 成功
   *
   * @generated from enum value: BOX_STATUS_PROCESSED = 5;
   */
  PROCESSED = 5,

  /**
   * 操作失败
   *
   * @generated from enum value: BOX_STATUS_FAILED = 6;
   */
  FAILED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(BoxStatus)
proto3.util.setEnumType(BoxStatus, "api.psm.v1.BoxStatus", [
  { no: 0, name: "BOX_STATUS_UNSPECIFIED" },
  { no: 1, name: "BOX_STATUS_EDITABLE" },
  { no: 2, name: "BOX_STATUS_CONFIRMED" },
  { no: 3, name: "BOX_STATUS_READY" },
  { no: 4, name: "BOX_STATUS_PROCESSING" },
  { no: 5, name: "BOX_STATUS_PROCESSED" },
  { no: 6, name: "BOX_STATUS_FAILED" },
]);

/**
 * *
 * id bigint default testing.snow_id(11) not null primary key,
 * lot_id bigint default 0 not null,
 * setting_id bigint default 0 not null
 * constraint box_setting_id_fk
 * references testing.box_setting
 * on update restrict
 * on delete restrict,
 * box_identity varchar(255) default 'nil'::character varying not null,
 * sequence integer default 0 not null,
 * actual_total integer default 0 not null,
 * status int2 default '0',
 * created_at timestamp default now(),
 * updated_at timestamp default now()
 *
 * @generated from enum api.psm.v1.BoxingStatus
 */
export enum BoxingStatus {
  /**
   * 初始状态
   *
   * @generated from enum value: BOXING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BOXING_STATUS_READY = 1;
   */
  READY = 1,

  /**
   * 正在处理
   *
   * @generated from enum value: BOXING_STATUS_PROCESSING = 2;
   */
  PROCESSING = 2,

  /**
   * 处理完毕, 成功
   *
   * @generated from enum value: BOXING_STATUS_PROCESSED = 3;
   */
  PROCESSED = 3,

  /**
   * 操作失败
   *
   * @generated from enum value: BOXING_STATUS_FAILED = 4;
   */
  FAILED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(BoxingStatus)
proto3.util.setEnumType(BoxingStatus, "api.psm.v1.BoxingStatus", [
  { no: 0, name: "BOXING_STATUS_UNSPECIFIED" },
  { no: 1, name: "BOXING_STATUS_READY" },
  { no: 2, name: "BOXING_STATUS_PROCESSING" },
  { no: 3, name: "BOXING_STATUS_PROCESSED" },
  { no: 4, name: "BOXING_STATUS_FAILED" },
]);

/**
 * @generated from message api.psm.v1.Distributor
 */
export class Distributor extends Message<Distributor> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string identity = 2;
   */
  identity = "";

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt = "";

  /**
   * @generated from field: string description = 6;
   */
  description = "";

  /**
   * @generated from field: string note = 7;
   */
  note = "";

  /**
   * @generated from field: string regional = 8;
   */
  regional = "";

  /**
   * @generated from field: string phone_address = 9;
   */
  phoneAddress = "";

  /**
   * @generated from field: bool is_deleted = 10;
   */
  isDeleted = false;

  /**
   * @generated from field: bool is_active = 11;
   */
  isActive = false;

  constructor(data?: PartialMessage<Distributor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.Distributor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "regional", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "phone_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "is_deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Distributor {
    return new Distributor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Distributor {
    return new Distributor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Distributor {
    return new Distributor().fromJsonString(jsonString, options);
  }

  static equals(a: Distributor | PlainMessage<Distributor> | undefined, b: Distributor | PlainMessage<Distributor> | undefined): boolean {
    return proto3.util.equals(Distributor, a, b);
  }
}

/**
 * @generated from message api.psm.v1.Lot
 */
export class Lot extends Message<Lot> {
  /**
   * 批次id, 注意, 该 id 必须设置为非空并且全局唯一
   *
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * 分销商id
   *
   * @generated from field: int64 distributor_id = 2;
   */
  distributorId = protoInt64.zero;

  /**
   * 用于追踪批次的来源
   *
   * @generated from field: int32 tracing_id = 3;
   */
  tracingId = 0;

  /**
   * 状态
   *
   * @generated from field: api.psm.v1.LotStatus status = 4;
   */
  status = LotStatus.UNSPECIFIED;

  /**
   * 计划总数
   *
   * @generated from field: int32 planed_total = 5;
   */
  planedTotal = 0;

  /**
   * 实际总数
   *
   * @generated from field: int32 actual_total = 6;
   */
  actualTotal = 0;

  /**
   * 批次序号
   *
   * @generated from field: int32 lot_seq = 7;
   */
  lotSeq = 0;

  /**
   * 批次名称
   *
   * @generated from field: string title = 8;
   */
  title = "";

  /**
   * 创建时间
   *
   * @generated from field: string created_at = 9;
   */
  createdAt = "";

  /**
   * 更新时间
   *
   * @generated from field: string updated_at = 10;
   */
  updatedAt = "";

  /**
   * 描述
   *
   * @generated from field: string description = 11;
   */
  description = "";

  /**
   * 追踪备注
   *
   * @generated from field: string tracing_note = 12;
   */
  tracingNote = "";

  constructor(data?: PartialMessage<Lot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.Lot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "tracing_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(LotStatus) },
    { no: 5, name: "planed_total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "actual_total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "lot_seq", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "tracing_note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Lot {
    return new Lot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Lot {
    return new Lot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Lot {
    return new Lot().fromJsonString(jsonString, options);
  }

  static equals(a: Lot | PlainMessage<Lot> | undefined, b: Lot | PlainMessage<Lot> | undefined): boolean {
    return proto3.util.equals(Lot, a, b);
  }
}

/**
 * @generated from message api.psm.v1.MacSerialSetting
 */
export class MacSerialSetting extends Message<MacSerialSetting> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.MSSStatus status = 3;
   */
  status = MSSStatus.MSS_STATUS_UNSPECIFIED;

  /**
   * @generated from field: int32 amount = 4;
   */
  amount = 0;

  /**
   * @generated from field: string title = 5;
   */
  title = "";

  /**
   * @generated from field: string mac_prefix = 6;
   */
  macPrefix = "";

  /**
   * @generated from field: string created_at = 7;
   */
  createdAt = "";

  /**
   * 更新时间
   *
   * @generated from field: string updated_at = 8;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<MacSerialSetting>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.MacSerialSetting";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(MSSStatus) },
    { no: 4, name: "amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "mac_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MacSerialSetting {
    return new MacSerialSetting().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MacSerialSetting {
    return new MacSerialSetting().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MacSerialSetting {
    return new MacSerialSetting().fromJsonString(jsonString, options);
  }

  static equals(a: MacSerialSetting | PlainMessage<MacSerialSetting> | undefined, b: MacSerialSetting | PlainMessage<MacSerialSetting> | undefined): boolean {
    return proto3.util.equals(MacSerialSetting, a, b);
  }
}

/**
 * @generated from message api.psm.v1.MacSerial
 */
export class MacSerial extends Message<MacSerial> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 setting_id = 3;
   */
  settingId = protoInt64.zero;

  /**
   * @generated from field: string mac_string = 4;
   */
  macString = "";

  /**
   * @generated from field: string serial = 5;
   */
  serial = "";

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  constructor(data?: PartialMessage<MacSerial>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.MacSerial";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "serial", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MacSerial {
    return new MacSerial().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MacSerial {
    return new MacSerial().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MacSerial {
    return new MacSerial().fromJsonString(jsonString, options);
  }

  static equals(a: MacSerial | PlainMessage<MacSerial> | undefined, b: MacSerial | PlainMessage<MacSerial> | undefined): boolean {
    return proto3.util.equals(MacSerial, a, b);
  }
}

/**
 * @generated from message api.psm.v1.ActiveCode
 */
export class ActiveCode extends Message<ActiveCode> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string active_code = 2;
   */
  activeCode = "";

  /**
   * @generated from field: int64 distributor_id = 4;
   */
  distributorId = protoInt64.zero;

  /**
   * @generated from field: bool is_used = 5;
   */
  isUsed = false;

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 7;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<ActiveCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.ActiveCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "active_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "is_used", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActiveCode {
    return new ActiveCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActiveCode {
    return new ActiveCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActiveCode {
    return new ActiveCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActiveCode | PlainMessage<ActiveCode> | undefined, b: ActiveCode | PlainMessage<ActiveCode> | undefined): boolean {
    return proto3.util.equals(ActiveCode, a, b);
  }
}

/**
 * @generated from message api.psm.v1.TerminalWare
 */
export class TerminalWare extends Message<TerminalWare> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 distributor_id = 2;
   */
  distributorId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.TwStatus status = 4;
   */
  status = TwStatus.UNSPECIFIED;

  /**
   * @generated from field: string mac_string = 5;
   */
  macString = "";

  /**
   * @generated from field: string active_code = 6;
   */
  activeCode = "";

  /**
   * @generated from field: string serial = 7;
   */
  serial = "";

  /**
   * @generated from field: string chip_identity = 8;
   */
  chipIdentity = "";

  /**
   * @generated from field: string updated_at = 9;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<TerminalWare>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.TerminalWare";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(TwStatus) },
    { no: 5, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "active_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "serial", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TerminalWare {
    return new TerminalWare().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TerminalWare {
    return new TerminalWare().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TerminalWare {
    return new TerminalWare().fromJsonString(jsonString, options);
  }

  static equals(a: TerminalWare | PlainMessage<TerminalWare> | undefined, b: TerminalWare | PlainMessage<TerminalWare> | undefined): boolean {
    return proto3.util.equals(TerminalWare, a, b);
  }
}

/**
 * *
 * id bigint default testing.snow_id(19),
 * account_id bigint default 0 not null,
 * lot_id bigint default 0 not null,
 * status int2 default '0',
 * qa_status int2 default '0',
 * testing_type int2 not null default '0',
 * testing_title varchar(255) not null default 'nil',
 * testing_content varchar(255) not null default 'nil',
 * testing_result varchar(255) not null default 'nil',
 * testing_duration integer not null default 0,
 * created_at timestamp not null default now(),
 * updated_at timestamp not null default now()
 *
 * @generated from message api.psm.v1.TestingRecord
 */
export class TestingRecord extends Message<TestingRecord> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 account_id = 3;
   */
  accountId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.TestType testing_type = 4;
   */
  testingType = TestType.UNSPECIFIED;

  /**
   * @generated from field: api.psm.v1.TestStatus status = 5;
   */
  status = TestStatus.UNSPECIFIED;

  /**
   * @generated from field: api.psm.v1.QaStatus qa_status = 6;
   */
  qaStatus = QaStatus.UNSPECIFIED;

  /**
   * 测试时长
   *
   * @generated from field: int32 testing_duration = 7;
   */
  testingDuration = 0;

  /**
   * @generated from field: string testing_title = 8;
   */
  testingTitle = "";

  /**
   * @generated from field: string testing_content = 9;
   */
  testingContent = "";

  /**
   * @generated from field: string testing_result = 10;
   */
  testingResult = "";

  /**
   * @generated from field: string created_at = 11;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 12;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<TestingRecord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.TestingRecord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "account_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "testing_type", kind: "enum", T: proto3.getEnumType(TestType) },
    { no: 5, name: "status", kind: "enum", T: proto3.getEnumType(TestStatus) },
    { no: 6, name: "qa_status", kind: "enum", T: proto3.getEnumType(QaStatus) },
    { no: 7, name: "testing_duration", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "testing_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "testing_content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "testing_result", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestingRecord {
    return new TestingRecord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestingRecord {
    return new TestingRecord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestingRecord {
    return new TestingRecord().fromJsonString(jsonString, options);
  }

  static equals(a: TestingRecord | PlainMessage<TestingRecord> | undefined, b: TestingRecord | PlainMessage<TestingRecord> | undefined): boolean {
    return proto3.util.equals(TestingRecord, a, b);
  }
}

/**
 * @generated from message api.psm.v1.TestingFilter
 */
export class TestingFilter extends Message<TestingFilter> {
  /**
   * @generated from field: int64 lot_id = 1;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.TestType testing_type = 2;
   */
  testingType = TestType.UNSPECIFIED;

  /**
   * @generated from field: api.psm.v1.TestStatus status = 3;
   */
  status = TestStatus.UNSPECIFIED;

  /**
   * @generated from field: api.psm.v1.QaStatus qa_status = 4;
   */
  qaStatus = QaStatus.UNSPECIFIED;

  constructor(data?: PartialMessage<TestingFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.TestingFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "testing_type", kind: "enum", T: proto3.getEnumType(TestType) },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(TestStatus) },
    { no: 4, name: "qa_status", kind: "enum", T: proto3.getEnumType(QaStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestingFilter {
    return new TestingFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestingFilter {
    return new TestingFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestingFilter {
    return new TestingFilter().fromJsonString(jsonString, options);
  }

  static equals(a: TestingFilter | PlainMessage<TestingFilter> | undefined, b: TestingFilter | PlainMessage<TestingFilter> | undefined): boolean {
    return proto3.util.equals(TestingFilter, a, b);
  }
}

/**
 * apk 测试上报 POST 数据
 *
 * @generated from message api.psm.v1.TestingReport
 */
export class TestingReport extends Message<TestingReport> {
  /**
   * @generated from field: int64 tid = 1;
   */
  tid = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.TestType testing_type = 2;
   */
  testingType = TestType.UNSPECIFIED;

  /**
   * @generated from field: api.psm.v1.TestStatus status = 3;
   */
  status = TestStatus.UNSPECIFIED;

  /**
   * 测试时长
   *
   * @generated from field: int32 testing_duration = 4;
   */
  testingDuration = 0;

  /**
   * @generated from field: string testing_title = 5;
   */
  testingTitle = "";

  /**
   * @generated from field: string testing_content = 6;
   */
  testingContent = "";

  /**
   * @generated from field: string testing_result = 7;
   */
  testingResult = "";

  /**
   * embed-a3 返回的 testing URL ( portal ) 附带的 token
   *
   * @generated from field: string token = 8;
   */
  token = "";

  constructor(data?: PartialMessage<TestingReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.TestingReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "testing_type", kind: "enum", T: proto3.getEnumType(TestType) },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(TestStatus) },
    { no: 4, name: "testing_duration", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "testing_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "testing_content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "testing_result", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestingReport {
    return new TestingReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestingReport {
    return new TestingReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestingReport {
    return new TestingReport().fromJsonString(jsonString, options);
  }

  static equals(a: TestingReport | PlainMessage<TestingReport> | undefined, b: TestingReport | PlainMessage<TestingReport> | undefined): boolean {
    return proto3.util.equals(TestingReport, a, b);
  }
}

/**
 * @generated from message api.psm.v1.ScanGun
 */
export class ScanGun extends Message<ScanGun> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string updated_at = 3;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<ScanGun>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.ScanGun";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanGun {
    return new ScanGun().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanGun {
    return new ScanGun().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanGun {
    return new ScanGun().fromJsonString(jsonString, options);
  }

  static equals(a: ScanGun | PlainMessage<ScanGun> | undefined, b: ScanGun | PlainMessage<ScanGun> | undefined): boolean {
    return proto3.util.equals(ScanGun, a, b);
  }
}

/**
 * *
 * id bigint default testing.snow_id(11) not null primary key,
 * lot_id bigint default 0 not null,
 * status int2 default 0 not null,
 * title varchar(255) default 'nil'::character varying not null,
 * prefix varchar(16) default to_char((current_date)::timestamp with time zone,'yyyymmdd'::text) not null,
 * total_per_box integer default 10 not null,
 * total_stb integer default 1000 not null,
 * sequence_start_at integer default 0 not null,
 * created_at timestamp default now(),
 * updated_at timestamp default now()
 *
 * @generated from message api.psm.v1.BoxSetting
 */
export class BoxSetting extends Message<BoxSetting> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.BoxStatus status = 3;
   */
  status = BoxStatus.UNSPECIFIED;

  /**
   * @generated from field: int32 total_per_box = 4;
   */
  totalPerBox = 0;

  /**
   * @generated from field: int32 sequence_start_at = 5;
   */
  sequenceStartAt = 0;

  /**
   * @generated from field: int32 total_stb = 6;
   */
  totalStb = 0;

  /**
   * @generated from field: string title = 7;
   */
  title = "";

  /**
   * @generated from field: string prefix = 8;
   */
  prefix = "";

  /**
   * @generated from field: string created_at = 9;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 10;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<BoxSetting>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.BoxSetting";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(BoxStatus) },
    { no: 4, name: "total_per_box", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "sequence_start_at", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "total_stb", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoxSetting {
    return new BoxSetting().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoxSetting {
    return new BoxSetting().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoxSetting {
    return new BoxSetting().fromJsonString(jsonString, options);
  }

  static equals(a: BoxSetting | PlainMessage<BoxSetting> | undefined, b: BoxSetting | PlainMessage<BoxSetting> | undefined): boolean {
    return proto3.util.equals(BoxSetting, a, b);
  }
}

/**
 * @generated from message api.psm.v1.BoxRecord
 */
export class BoxRecord extends Message<BoxRecord> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 setting_id = 3;
   */
  settingId = protoInt64.zero;

  /**
   * @generated from field: int32 actual_total = 4;
   */
  actualTotal = 0;

  /**
   * @generated from field: int32 sequence = 5;
   */
  sequence = 0;

  /**
   * @generated from field: api.psm.v1.BoxingStatus status = 6;
   */
  status = BoxingStatus.UNSPECIFIED;

  /**
   * @generated from field: string box_identity = 8;
   */
  boxIdentity = "";

  /**
   * @generated from field: string created_at = 9;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 10;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<BoxRecord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.BoxRecord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "actual_total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "sequence", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(BoxingStatus) },
    { no: 8, name: "box_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoxRecord {
    return new BoxRecord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoxRecord {
    return new BoxRecord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoxRecord {
    return new BoxRecord().fromJsonString(jsonString, options);
  }

  static equals(a: BoxRecord | PlainMessage<BoxRecord> | undefined, b: BoxRecord | PlainMessage<BoxRecord> | undefined): boolean {
    return proto3.util.equals(BoxRecord, a, b);
  }
}

/**
 * *
 * id bigint default testing.snow_id(11) not null primary key,
 * lot_id bigint default 0 not null,
 * box_id bigint default 0 not null
 * constraint crating_mapping_box_id_fk
 * references testing.box_record
 * on update restrict
 * on delete restrict,
 * stb_id bigint default 0 not null,
 * gun_id bigint default 0 not null
 * constraint crating_mapping_scan_gun_id_fk
 * references testing.scan_gun_record
 * on update restrict
 * on delete restrict,
 * status int2 default '0',
 * sequence integer default 0 not null,
 * created_at timestamp default now(),
 * updated_at timestamp default now()
 *
 * @generated from message api.psm.v1.BoxStbMapping
 */
export class BoxStbMapping extends Message<BoxStbMapping> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 2;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 box_id = 3;
   */
  boxId = protoInt64.zero;

  /**
   * @generated from field: int64 stb_id = 4;
   */
  stbId = protoInt64.zero;

  /**
   * @generated from field: int64 gun_id = 5;
   */
  gunId = protoInt64.zero;

  /**
   * @generated from field: int32 status = 6;
   */
  status = 0;

  /**
   * @generated from field: int32 sequence = 7;
   */
  sequence = 0;

  /**
   * @generated from field: string created_at = 8;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 9;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<BoxStbMapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.psm.v1.BoxStbMapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "box_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "stb_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "gun_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "sequence", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoxStbMapping {
    return new BoxStbMapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoxStbMapping {
    return new BoxStbMapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoxStbMapping {
    return new BoxStbMapping().fromJsonString(jsonString, options);
  }

  static equals(a: BoxStbMapping | PlainMessage<BoxStbMapping> | undefined, b: BoxStbMapping | PlainMessage<BoxStbMapping> | undefined): boolean {
    return proto3.util.equals(BoxStbMapping, a, b);
  }
}

