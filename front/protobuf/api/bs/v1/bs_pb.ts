// as 服务, 即是 a3 的 grpc 服务

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/bs/v1/bs.proto (package api.bs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { PageMeta } from "../../com/v1/pagemeta_pb.ts";
import { BoxRecord, BoxSetting, BoxStbMapping, ScanGun } from "../../psm/v1/psm_pb.ts";

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.CountBoxStbMappingRequest
 */
export class CountBoxStbMappingRequest extends Message<CountBoxStbMappingRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  constructor(data?: PartialMessage<CountBoxStbMappingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.CountBoxStbMappingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountBoxStbMappingRequest {
    return new CountBoxStbMappingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountBoxStbMappingRequest {
    return new CountBoxStbMappingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountBoxStbMappingRequest {
    return new CountBoxStbMappingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CountBoxStbMappingRequest | PlainMessage<CountBoxStbMappingRequest> | undefined, b: CountBoxStbMappingRequest | PlainMessage<CountBoxStbMappingRequest> | undefined): boolean {
    return proto3.util.equals(CountBoxStbMappingRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.CountBoxStbMappingResponse
 */
export class CountBoxStbMappingResponse extends Message<CountBoxStbMappingResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int64 lot_id = 5;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int32 total = 6;
   */
  total = 0;

  constructor(data?: PartialMessage<CountBoxStbMappingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.CountBoxStbMappingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountBoxStbMappingResponse {
    return new CountBoxStbMappingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountBoxStbMappingResponse {
    return new CountBoxStbMappingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountBoxStbMappingResponse {
    return new CountBoxStbMappingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CountBoxStbMappingResponse | PlainMessage<CountBoxStbMappingResponse> | undefined, b: CountBoxStbMappingResponse | PlainMessage<CountBoxStbMappingResponse> | undefined): boolean {
    return proto3.util.equals(CountBoxStbMappingResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.CountBoxSettingRequest
 */
export class CountBoxSettingRequest extends Message<CountBoxSettingRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<CountBoxSettingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.CountBoxSettingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountBoxSettingRequest {
    return new CountBoxSettingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountBoxSettingRequest {
    return new CountBoxSettingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountBoxSettingRequest {
    return new CountBoxSettingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CountBoxSettingRequest | PlainMessage<CountBoxSettingRequest> | undefined, b: CountBoxSettingRequest | PlainMessage<CountBoxSettingRequest> | undefined): boolean {
    return proto3.util.equals(CountBoxSettingRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.CountBoxSettingResponse
 */
export class CountBoxSettingResponse extends Message<CountBoxSettingResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: bool status = 4;
   */
  status = false;

  /**
   * @generated from field: string message = 5;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 6;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<CountBoxSettingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.CountBoxSettingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountBoxSettingResponse {
    return new CountBoxSettingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountBoxSettingResponse {
    return new CountBoxSettingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountBoxSettingResponse {
    return new CountBoxSettingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CountBoxSettingResponse | PlainMessage<CountBoxSettingResponse> | undefined, b: CountBoxSettingResponse | PlainMessage<CountBoxSettingResponse> | undefined): boolean {
    return proto3.util.equals(CountBoxSettingResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.UpsertBoxSettingRequest
 */
export class UpsertBoxSettingRequest extends Message<UpsertBoxSettingRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.psm.v1.BoxSetting box_setting = 4;
   */
  boxSetting?: BoxSetting;

  constructor(data?: PartialMessage<UpsertBoxSettingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertBoxSettingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "box_setting", kind: "message", T: BoxSetting },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertBoxSettingRequest {
    return new UpsertBoxSettingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertBoxSettingRequest {
    return new UpsertBoxSettingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertBoxSettingRequest {
    return new UpsertBoxSettingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertBoxSettingRequest | PlainMessage<UpsertBoxSettingRequest> | undefined, b: UpsertBoxSettingRequest | PlainMessage<UpsertBoxSettingRequest> | undefined): boolean {
    return proto3.util.equals(UpsertBoxSettingRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.UpsertBoxSettingResponse
 */
export class UpsertBoxSettingResponse extends Message<UpsertBoxSettingResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.psm.v1.BoxSetting box_setting = 5;
   */
  boxSetting?: BoxSetting;

  constructor(data?: PartialMessage<UpsertBoxSettingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertBoxSettingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "box_setting", kind: "message", T: BoxSetting },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertBoxSettingResponse {
    return new UpsertBoxSettingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertBoxSettingResponse {
    return new UpsertBoxSettingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertBoxSettingResponse {
    return new UpsertBoxSettingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertBoxSettingResponse | PlainMessage<UpsertBoxSettingResponse> | undefined, b: UpsertBoxSettingResponse | PlainMessage<UpsertBoxSettingResponse> | undefined): boolean {
    return proto3.util.equals(UpsertBoxSettingResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.QueryBoxSettingListRequest
 */
export class QueryBoxSettingListRequest extends Message<QueryBoxSettingListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryBoxSettingListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxSettingListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxSettingListRequest {
    return new QueryBoxSettingListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxSettingListRequest {
    return new QueryBoxSettingListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxSettingListRequest {
    return new QueryBoxSettingListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxSettingListRequest | PlainMessage<QueryBoxSettingListRequest> | undefined, b: QueryBoxSettingListRequest | PlainMessage<QueryBoxSettingListRequest> | undefined): boolean {
    return proto3.util.equals(QueryBoxSettingListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.QueryBoxSettingListResponse
 */
export class QueryBoxSettingListResponse extends Message<QueryBoxSettingListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int64 lot_id = 5;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 6;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.psm.v1.BoxSetting box_setting_list = 7;
   */
  boxSettingList: BoxSetting[] = [];

  constructor(data?: PartialMessage<QueryBoxSettingListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxSettingListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "page_meta", kind: "message", T: PageMeta },
    { no: 7, name: "box_setting_list", kind: "message", T: BoxSetting, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxSettingListResponse {
    return new QueryBoxSettingListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxSettingListResponse {
    return new QueryBoxSettingListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxSettingListResponse {
    return new QueryBoxSettingListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxSettingListResponse | PlainMessage<QueryBoxSettingListResponse> | undefined, b: QueryBoxSettingListResponse | PlainMessage<QueryBoxSettingListResponse> | undefined): boolean {
    return proto3.util.equals(QueryBoxSettingListResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.QueryBoxRecordListRequest
 */
export class QueryBoxRecordListRequest extends Message<QueryBoxRecordListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 crating_setting_id = 4;
   */
  cratingSettingId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryBoxRecordListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxRecordListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "crating_setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxRecordListRequest {
    return new QueryBoxRecordListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxRecordListRequest {
    return new QueryBoxRecordListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxRecordListRequest {
    return new QueryBoxRecordListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxRecordListRequest | PlainMessage<QueryBoxRecordListRequest> | undefined, b: QueryBoxRecordListRequest | PlainMessage<QueryBoxRecordListRequest> | undefined): boolean {
    return proto3.util.equals(QueryBoxRecordListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.QueryBoxRecordListResponse
 */
export class QueryBoxRecordListResponse extends Message<QueryBoxRecordListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: int64 crating_setting_id = 4;
   */
  cratingSettingId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 5;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: string message = 6;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 7;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.psm.v1.BoxRecord box_record_list = 8;
   */
  boxRecordList: BoxRecord[] = [];

  constructor(data?: PartialMessage<QueryBoxRecordListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxRecordListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "crating_setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "page_meta", kind: "message", T: PageMeta },
    { no: 8, name: "box_record_list", kind: "message", T: BoxRecord, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxRecordListResponse {
    return new QueryBoxRecordListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxRecordListResponse {
    return new QueryBoxRecordListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxRecordListResponse {
    return new QueryBoxRecordListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxRecordListResponse | PlainMessage<QueryBoxRecordListResponse> | undefined, b: QueryBoxRecordListResponse | PlainMessage<QueryBoxRecordListResponse> | undefined): boolean {
    return proto3.util.equals(QueryBoxRecordListResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.UpsertBoxStbMappingListRequest
 */
export class UpsertBoxStbMappingListRequest extends Message<UpsertBoxStbMappingListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated api.psm.v1.BoxStbMapping box_stb_mapping_list = 4;
   */
  boxStbMappingList: BoxStbMapping[] = [];

  constructor(data?: PartialMessage<UpsertBoxStbMappingListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertBoxStbMappingListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "box_stb_mapping_list", kind: "message", T: BoxStbMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertBoxStbMappingListRequest {
    return new UpsertBoxStbMappingListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertBoxStbMappingListRequest {
    return new UpsertBoxStbMappingListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertBoxStbMappingListRequest {
    return new UpsertBoxStbMappingListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertBoxStbMappingListRequest | PlainMessage<UpsertBoxStbMappingListRequest> | undefined, b: UpsertBoxStbMappingListRequest | PlainMessage<UpsertBoxStbMappingListRequest> | undefined): boolean {
    return proto3.util.equals(UpsertBoxStbMappingListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.UpsertBoxStbMappingListResponse
 */
export class UpsertBoxStbMappingListResponse extends Message<UpsertBoxStbMappingListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.psm.v1.BoxStbMapping box_stb_mapping_list = 5;
   */
  boxStbMappingList: BoxStbMapping[] = [];

  constructor(data?: PartialMessage<UpsertBoxStbMappingListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertBoxStbMappingListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "box_stb_mapping_list", kind: "message", T: BoxStbMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertBoxStbMappingListResponse {
    return new UpsertBoxStbMappingListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertBoxStbMappingListResponse {
    return new UpsertBoxStbMappingListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertBoxStbMappingListResponse {
    return new UpsertBoxStbMappingListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertBoxStbMappingListResponse | PlainMessage<UpsertBoxStbMappingListResponse> | undefined, b: UpsertBoxStbMappingListResponse | PlainMessage<UpsertBoxStbMappingListResponse> | undefined): boolean {
    return proto3.util.equals(UpsertBoxStbMappingListResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.QueryBoxStbMappingListRequest
 */
export class QueryBoxStbMappingListRequest extends Message<QueryBoxStbMappingListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int64 crating_setting_id = 4;
   */
  cratingSettingId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryBoxStbMappingListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxStbMappingListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "crating_setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxStbMappingListRequest {
    return new QueryBoxStbMappingListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxStbMappingListRequest {
    return new QueryBoxStbMappingListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxStbMappingListRequest {
    return new QueryBoxStbMappingListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxStbMappingListRequest | PlainMessage<QueryBoxStbMappingListRequest> | undefined, b: QueryBoxStbMappingListRequest | PlainMessage<QueryBoxStbMappingListRequest> | undefined): boolean {
    return proto3.util.equals(QueryBoxStbMappingListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.QueryBoxStbMappingListResponse
 */
export class QueryBoxStbMappingListResponse extends Message<QueryBoxStbMappingListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: int64 crating_setting_id = 4;
   */
  cratingSettingId = protoInt64.zero;

  /**
   * @generated from field: string message = 5;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 6;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.psm.v1.BoxStbMapping box_stb_mapping_list = 7;
   */
  boxStbMappingList: BoxStbMapping[] = [];

  constructor(data?: PartialMessage<QueryBoxStbMappingListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryBoxStbMappingListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "crating_setting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "page_meta", kind: "message", T: PageMeta },
    { no: 7, name: "box_stb_mapping_list", kind: "message", T: BoxStbMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBoxStbMappingListResponse {
    return new QueryBoxStbMappingListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBoxStbMappingListResponse {
    return new QueryBoxStbMappingListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBoxStbMappingListResponse {
    return new QueryBoxStbMappingListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBoxStbMappingListResponse | PlainMessage<QueryBoxStbMappingListResponse> | undefined, b: QueryBoxStbMappingListResponse | PlainMessage<QueryBoxStbMappingListResponse> | undefined): boolean {
    return proto3.util.equals(QueryBoxStbMappingListResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.UpsertScanGunListRequest
 */
export class UpsertScanGunListRequest extends Message<UpsertScanGunListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated api.psm.v1.ScanGun scan_gun_list = 4;
   */
  scanGunList: ScanGun[] = [];

  constructor(data?: PartialMessage<UpsertScanGunListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertScanGunListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "scan_gun_list", kind: "message", T: ScanGun, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertScanGunListRequest {
    return new UpsertScanGunListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertScanGunListRequest {
    return new UpsertScanGunListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertScanGunListRequest {
    return new UpsertScanGunListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertScanGunListRequest | PlainMessage<UpsertScanGunListRequest> | undefined, b: UpsertScanGunListRequest | PlainMessage<UpsertScanGunListRequest> | undefined): boolean {
    return proto3.util.equals(UpsertScanGunListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.UpsertScanGunListResponse
 */
export class UpsertScanGunListResponse extends Message<UpsertScanGunListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.psm.v1.ScanGun scan_gun_list = 5;
   */
  scanGunList: ScanGun[] = [];

  constructor(data?: PartialMessage<UpsertScanGunListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.UpsertScanGunListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scan_gun_list", kind: "message", T: ScanGun, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertScanGunListResponse {
    return new UpsertScanGunListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertScanGunListResponse {
    return new UpsertScanGunListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertScanGunListResponse {
    return new UpsertScanGunListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpsertScanGunListResponse | PlainMessage<UpsertScanGunListResponse> | undefined, b: UpsertScanGunListResponse | PlainMessage<UpsertScanGunListResponse> | undefined): boolean {
    return proto3.util.equals(UpsertScanGunListResponse, a, b);
  }
}

/**
 * ----------------------------------------------------------------------------------------------------------------------
 *
 * @generated from message api.bs.v1.QueryScanGunListRequest
 */
export class QueryScanGunListRequest extends Message<QueryScanGunListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 4;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryScanGunListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryScanGunListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryScanGunListRequest {
    return new QueryScanGunListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryScanGunListRequest {
    return new QueryScanGunListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryScanGunListRequest {
    return new QueryScanGunListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryScanGunListRequest | PlainMessage<QueryScanGunListRequest> | undefined, b: QueryScanGunListRequest | PlainMessage<QueryScanGunListRequest> | undefined): boolean {
    return proto3.util.equals(QueryScanGunListRequest, a, b);
  }
}

/**
 * @generated from message api.bs.v1.QueryScanGunListResponse
 */
export class QueryScanGunListResponse extends Message<QueryScanGunListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.psm.v1.ScanGun scan_gun_list = 6;
   */
  scanGunList: ScanGun[] = [];

  constructor(data?: PartialMessage<QueryScanGunListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.bs.v1.QueryScanGunListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "scan_gun_list", kind: "message", T: ScanGun, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryScanGunListResponse {
    return new QueryScanGunListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryScanGunListResponse {
    return new QueryScanGunListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryScanGunListResponse {
    return new QueryScanGunListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryScanGunListResponse | PlainMessage<QueryScanGunListResponse> | undefined, b: QueryScanGunListResponse | PlainMessage<QueryScanGunListResponse> | undefined): boolean {
    return proto3.util.equals(QueryScanGunListResponse, a, b);
  }
}

