// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ta/v1/tam.proto (package api.ta.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message api.ta.v1.RecommendsRequest
 */
export class RecommendsRequest extends Message<RecommendsRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string class = 3;
   */
  class = "";

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string sign = 5;
   */
  sign = "";

  /**
   * @generated from field: string model_name = 6;
   */
  modelName = "";

  /**
   * @generated from field: string version = 7;
   */
  version = "";

  constructor(data?: PartialMessage<RecommendsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.RecommendsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecommendsRequest {
    return new RecommendsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecommendsRequest {
    return new RecommendsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecommendsRequest {
    return new RecommendsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RecommendsRequest | PlainMessage<RecommendsRequest> | undefined, b: RecommendsRequest | PlainMessage<RecommendsRequest> | undefined): boolean {
    return proto3.util.equals(RecommendsRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.VideoRequest
 */
export class VideoRequest extends Message<VideoRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: int32 video_id = 3;
   */
  videoId = 0;

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string sign = 5;
   */
  sign = "";

  /**
   * @generated from field: string model_name = 6;
   */
  modelName = "";

  constructor(data?: PartialMessage<VideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.VideoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "video_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoRequest {
    return new VideoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoRequest {
    return new VideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoRequest {
    return new VideoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VideoRequest | PlainMessage<VideoRequest> | undefined, b: VideoRequest | PlainMessage<VideoRequest> | undefined): boolean {
    return proto3.util.equals(VideoRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.SearchRequest
 */
export class SearchRequest extends Message<SearchRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string keyword = 3;
   */
  keyword = "";

  /**
   * @generated from field: string lang = 4;
   */
  lang = "";

  /**
   * @generated from field: string model_name = 5;
   */
  modelName = "";

  /**
   * @generated from field: string sign = 6;
   */
  sign = "";

  constructor(data?: PartialMessage<SearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.SearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest {
    return new SearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest {
    return new SearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest {
    return new SearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchRequest | PlainMessage<SearchRequest> | undefined, b: SearchRequest | PlainMessage<SearchRequest> | undefined): boolean {
    return proto3.util.equals(SearchRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.AgreementRequest
 */
export class AgreementRequest extends Message<AgreementRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string lang = 3;
   */
  lang = "";

  /**
   * @generated from field: string sign = 4;
   */
  sign = "";

  /**
   * @generated from field: string model_name = 5;
   */
  modelName = "";

  constructor(data?: PartialMessage<AgreementRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.AgreementRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgreementRequest {
    return new AgreementRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgreementRequest {
    return new AgreementRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgreementRequest {
    return new AgreementRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AgreementRequest | PlainMessage<AgreementRequest> | undefined, b: AgreementRequest | PlainMessage<AgreementRequest> | undefined): boolean {
    return proto3.util.equals(AgreementRequest, a, b);
  }
}

/**
 * @generated from message api.ta.v1.VideoCategoryRequest
 */
export class VideoCategoryRequest extends Message<VideoCategoryRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string class = 3;
   */
  class = "";

  /**
   * @generated from field: string category = 4;
   */
  category = "";

  /**
   * @generated from field: string lang = 5;
   */
  lang = "";

  /**
   * @generated from field: string sign = 6;
   */
  sign = "";

  /**
   * @generated from field: string model_name = 7;
   */
  modelName = "";

  constructor(data?: PartialMessage<VideoCategoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.VideoCategoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VideoCategoryRequest {
    return new VideoCategoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VideoCategoryRequest {
    return new VideoCategoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VideoCategoryRequest {
    return new VideoCategoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VideoCategoryRequest | PlainMessage<VideoCategoryRequest> | undefined, b: VideoCategoryRequest | PlainMessage<VideoCategoryRequest> | undefined): boolean {
    return proto3.util.equals(VideoCategoryRequest, a, b);
  }
}

/**
 * 协议隐私
 *
 * @generated from message api.ta.v1.Agreement
 */
export class Agreement extends Message<Agreement> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 标题
   *
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * 正文
   *
   * @generated from field: string content = 3;
   */
  content = "";

  /**
   * 更新时间
   *
   * @generated from field: string update_at = 4;
   */
  updateAt = "";

  /**
   * 是否删除 false 未删除 true 已删除
   *
   * @generated from field: bool deleted = 5;
   */
  deleted = false;

  /**
   * 语言
   *
   * @generated from field: string lang = 6;
   */
  lang = "";

  /**
   * 类型  1 协议   2 隐私
   *
   * @generated from field: int32 type = 7;
   */
  type = 0;

  /**
   * 是否启用  true 已启用  false 未启用
   *
   * @generated from field: bool is_use = 8;
   */
  isUse = false;

  constructor(data?: PartialMessage<Agreement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.Agreement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "update_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Agreement {
    return new Agreement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Agreement {
    return new Agreement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Agreement {
    return new Agreement().fromJsonString(jsonString, options);
  }

  static equals(a: Agreement | PlainMessage<Agreement> | undefined, b: Agreement | PlainMessage<Agreement> | undefined): boolean {
    return proto3.util.equals(Agreement, a, b);
  }
}

/**
 * 分类
 *
 * @generated from message api.ta.v1.Category
 */
export class Category extends Message<Category> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 名称
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * 中文名
   *
   * @generated from field: string zh_name = 3;
   */
  zhName = "";

  /**
   * 排序
   *
   * @generated from field: int32 sort = 4;
   */
  sort = 0;

  /**
   * 选项id
   *
   * @generated from field: int32 class_id = 5;
   */
  classId = 0;

  /**
   * 选项
   *
   * @generated from field: string class_name = 6;
   */
  className = "";

  /**
   * @generated from field: map<string, string> multi_lang = 7;
   */
  multiLang: { [key: string]: string } = {};

  /**
   * @generated from field: map<string, string> class_multi_lang = 8;
   */
  classMultiLang: { [key: string]: string } = {};

  constructor(data?: PartialMessage<Category>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.Category";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "multi_lang", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 8, name: "class_multi_lang", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Category {
    return new Category().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Category {
    return new Category().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Category {
    return new Category().fromJsonString(jsonString, options);
  }

  static equals(a: Category | PlainMessage<Category> | undefined, b: Category | PlainMessage<Category> | undefined): boolean {
    return proto3.util.equals(Category, a, b);
  }
}

/**
 * @generated from message api.ta.v1.CategoryLabel
 */
export class CategoryLabel extends Message<CategoryLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  /**
   * @generated from field: int32 class_id = 3;
   */
  classId = 0;

  constructor(data?: PartialMessage<CategoryLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.CategoryLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryLabel {
    return new CategoryLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryLabel {
    return new CategoryLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryLabel {
    return new CategoryLabel().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryLabel | PlainMessage<CategoryLabel> | undefined, b: CategoryLabel | PlainMessage<CategoryLabel> | undefined): boolean {
    return proto3.util.equals(CategoryLabel, a, b);
  }
}

/**
 * 选项
 *
 * @generated from message api.ta.v1.ClassInfo
 */
export class ClassInfo extends Message<ClassInfo> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 名称
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * 中文名
   *
   * @generated from field: string zh_name = 3;
   */
  zhName = "";

  /**
   * 排序
   *
   * @generated from field: int32 sort = 4;
   */
  sort = 0;

  /**
   * 顶部标题
   *
   * @generated from field: string top_title = 5;
   */
  topTitle = "";

  /**
   * 中部标题
   *
   * @generated from field: string middle_title = 6;
   */
  middleTitle = "";

  /**
   * 底部标题
   *
   * @generated from field: string bottom_title = 7;
   */
  bottomTitle = "";

  constructor(data?: PartialMessage<ClassInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.ClassInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "top_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "middle_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "bottom_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassInfo {
    return new ClassInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassInfo {
    return new ClassInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassInfo {
    return new ClassInfo().fromJsonString(jsonString, options);
  }

  static equals(a: ClassInfo | PlainMessage<ClassInfo> | undefined, b: ClassInfo | PlainMessage<ClassInfo> | undefined): boolean {
    return proto3.util.equals(ClassInfo, a, b);
  }
}

/**
 * @generated from message api.ta.v1.ClassLabel
 */
export class ClassLabel extends Message<ClassLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  constructor(data?: PartialMessage<ClassLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.ClassLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassLabel {
    return new ClassLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassLabel {
    return new ClassLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassLabel {
    return new ClassLabel().fromJsonString(jsonString, options);
  }

  static equals(a: ClassLabel | PlainMessage<ClassLabel> | undefined, b: ClassLabel | PlainMessage<ClassLabel> | undefined): boolean {
    return proto3.util.equals(ClassLabel, a, b);
  }
}

/**
 * app推荐
 *
 * @generated from message api.ta.v1.RecommendApk
 */
export class RecommendApk extends Message<RecommendApk> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 图片
   *
   * @generated from field: string img = 2;
   */
  img = "";

  /**
   * 包名
   *
   * @generated from field: string package_name = 3;
   */
  packageName = "";

  /**
   * 名称
   *
   * @generated from field: string app_name = 4;
   */
  appName = "";

  /**
   * 排序
   *
   * @generated from field: int32 sort = 5;
   */
  sort = 0;

  /**
   * 选项id
   *
   * @generated from field: int32 class_id = 6;
   */
  classId = 0;

  /**
   * 语言
   *
   * @generated from field: string lang = 7;
   */
  lang = "";

  /**
   * 选项
   *
   * @generated from field: string class_name = 8;
   */
  className = "";

  /**
   * 更新时间
   *
   * @generated from field: string update_at = 9;
   */
  updateAt = "";

  /**
   * 是否删除 false 未删除 true 已删除
   *
   * @generated from field: bool deleted = 10;
   */
  deleted = false;

  /**
   * @generated from field: string distributor_id = 11;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 12;
   */
  modelId = "";

  constructor(data?: PartialMessage<RecommendApk>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.RecommendApk";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "img", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "package_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "update_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecommendApk {
    return new RecommendApk().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecommendApk {
    return new RecommendApk().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecommendApk {
    return new RecommendApk().fromJsonString(jsonString, options);
  }

  static equals(a: RecommendApk | PlainMessage<RecommendApk> | undefined, b: RecommendApk | PlainMessage<RecommendApk> | undefined): boolean {
    return proto3.util.equals(RecommendApk, a, b);
  }
}

/**
 * 视频
 *
 * @generated from message api.ta.v1.Video
 */
export class Video extends Message<Video> {
  /**
   * 
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 标题
   *
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * 简介
   *
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * 发布年份
   *
   * @generated from field: string published_at = 4;
   */
  publishedAt = "";

  /**
   * 时长
   *
   * @generated from field: string duration = 5;
   */
  duration = "";

  /**
   * 浏览量
   *
   * @generated from field: string view_count = 6;
   */
  viewCount = "";

  /**
   * 图片地址
   *
   * @generated from field: string img = 7;
   */
  img = "";

  /**
   * 来源
   *
   * @generated from field: string source = 8;
   */
  source = "";

  /**
   * youtube 视频 id
   *
   * @generated from field: string video_id = 9;
   */
  videoId = "";

  /**
   * youtube地址
   *
   * @generated from field: string url = 10;
   */
  url = "";

  /**
   * 分类id
   *
   * @generated from field: int32 category_id = 11;
   */
  categoryId = 0;

  /**
   * 排序
   *
   * @generated from field: int32 sort = 12;
   */
  sort = 0;

  /**
   * 是否推荐 0 否 1是
   *
   * @generated from field: int32 is_recommended = 13;
   */
  isRecommended = 0;

  /**
   * 选项id
   *
   * @generated from field: int32 class_id = 14;
   */
  classId = 0;

  /**
   * 地区
   *
   * @generated from field: string region_code = 15;
   */
  regionCode = "";

  /**
   * 语言
   *
   * @generated from field: string hl = 16;
   */
  hl = "";

  /**
   * 视频默认语言
   *
   * @generated from field: string default_language = 17;
   */
  defaultLanguage = "";

  /**
   * 视频默认音轨语言
   *
   * @generated from field: string default_audio_language = 18;
   */
  defaultAudioLanguage = "";

  /**
   * 分类
   *
   * @generated from field: string category_name = 19;
   */
  categoryName = "";

  /**
   * 选项
   *
   * @generated from field: string class_name = 20;
   */
  className = "";

  /**
   * @generated from field: string distributor_id = 21;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 22;
   */
  modelId = "";

  constructor(data?: PartialMessage<Video>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.Video";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "published_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "duration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "view_count", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "img", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "video_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "category_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "is_recommended", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "region_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "hl", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "default_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "default_audio_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "category_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Video {
    return new Video().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Video {
    return new Video().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Video {
    return new Video().fromJsonString(jsonString, options);
  }

  static equals(a: Video | PlainMessage<Video> | undefined, b: Video | PlainMessage<Video> | undefined): boolean {
    return proto3.util.equals(Video, a, b);
  }
}

/**
 * 地区语言
 *
 * @generated from message api.ta.v1.Region
 */
export class Region extends Message<Region> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 名称
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * 中文名
   *
   * @generated from field: string zh_name = 3;
   */
  zhName = "";

  /**
   * 地区代码
   *
   * @generated from field: string code = 4;
   */
  code = "";

  /**
   * 语言
   *
   * @generated from field: string language = 5;
   */
  language = "";

  constructor(data?: PartialMessage<Region>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.Region";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Region {
    return new Region().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Region {
    return new Region().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Region {
    return new Region().fromJsonString(jsonString, options);
  }

  static equals(a: Region | PlainMessage<Region> | undefined, b: Region | PlainMessage<Region> | undefined): boolean {
    return proto3.util.equals(Region, a, b);
  }
}

/**
 * 资源下载配置
 *
 * @generated from message api.ta.v1.DownloadConfig
 */
export class DownloadConfig extends Message<DownloadConfig> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * url
   *
   * @generated from field: string domain = 2;
   */
  domain = "";

  constructor(data?: PartialMessage<DownloadConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DownloadConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownloadConfig {
    return new DownloadConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownloadConfig {
    return new DownloadConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownloadConfig {
    return new DownloadConfig().fromJsonString(jsonString, options);
  }

  static equals(a: DownloadConfig | PlainMessage<DownloadConfig> | undefined, b: DownloadConfig | PlainMessage<DownloadConfig> | undefined): boolean {
    return proto3.util.equals(DownloadConfig, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DistributorModelList
 */
export class DistributorModelList extends Message<DistributorModelList> {
  /**
   * @generated from field: string distributor_id = 1;
   */
  distributorId = "";

  /**
   * @generated from field: repeated string model_id = 2;
   */
  modelId: string[] = [];

  constructor(data?: PartialMessage<DistributorModelList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DistributorModelList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributorModelList {
    return new DistributorModelList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributorModelList {
    return new DistributorModelList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributorModelList {
    return new DistributorModelList().fromJsonString(jsonString, options);
  }

  static equals(a: DistributorModelList | PlainMessage<DistributorModelList> | undefined, b: DistributorModelList | PlainMessage<DistributorModelList> | undefined): boolean {
    return proto3.util.equals(DistributorModelList, a, b);
  }
}

/**
 * @generated from message api.ta.v1.DistributorModelFilter
 */
export class DistributorModelFilter extends Message<DistributorModelFilter> {
  /**
   * @generated from field: string distributor_id = 1;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 2;
   */
  modelId = "";

  constructor(data?: PartialMessage<DistributorModelFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ta.v1.DistributorModelFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributorModelFilter {
    return new DistributorModelFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributorModelFilter {
    return new DistributorModelFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributorModelFilter {
    return new DistributorModelFilter().fromJsonString(jsonString, options);
  }

  static equals(a: DistributorModelFilter | PlainMessage<DistributorModelFilter> | undefined, b: DistributorModelFilter | PlainMessage<DistributorModelFilter> | undefined): boolean {
    return proto3.util.equals(DistributorModelFilter, a, b);
  }
}

