// a3 服务采用的模型, 清除所有不必要字段

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/asm/v1/asm.proto (package api.asm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message api.asm.v1.Distributor
 */
export class Distributor extends Message<Distributor> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string identity = 2;
   */
  identity = "";

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt = "";

  constructor(data?: PartialMessage<Distributor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Distributor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Distributor {
    return new Distributor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Distributor {
    return new Distributor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Distributor {
    return new Distributor().fromJsonString(jsonString, options);
  }

  static equals(a: Distributor | PlainMessage<Distributor> | undefined, b: Distributor | PlainMessage<Distributor> | undefined): boolean {
    return proto3.util.equals(Distributor, a, b);
  }
}

/**
 * @generated from message api.asm.v1.Lot
 */
export class Lot extends Message<Lot> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  /**
   * @generated from field: string trace_id = 3;
   */
  traceId = "";

  /**
   * @generated from field: string title = 4;
   */
  title = "";

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt = "";

  /**
   * @generated from field: string distributor_name = 6;
   */
  distributorName = "";

  constructor(data?: PartialMessage<Lot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Lot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "trace_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Lot {
    return new Lot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Lot {
    return new Lot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Lot {
    return new Lot().fromJsonString(jsonString, options);
  }

  static equals(a: Lot | PlainMessage<Lot> | undefined, b: Lot | PlainMessage<Lot> | undefined): boolean {
    return proto3.util.equals(Lot, a, b);
  }
}

/**
 * @generated from message api.asm.v1.ImportTerminal
 */
export class ImportTerminal extends Message<ImportTerminal> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 distributor_id = 2;
   */
  distributorId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: bool is_used = 4;
   */
  isUsed = false;

  /**
   * @generated from field: string distributor_identity = 5;
   */
  distributorIdentity = "";

  /**
   * @generated from field: string mac_string = 6;
   */
  macString = "";

  /**
   * @generated from field: string active_code = 7;
   */
  activeCode = "";

  /**
   * @generated from field: string serial = 8;
   */
  serial = "";

  /**
   * @generated from field: string chip_identity = 9;
   */
  chipIdentity = "";

  /**
   * @generated from field: string updated_at = 10;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<ImportTerminal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.ImportTerminal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "is_used", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "distributor_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "active_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "serial", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportTerminal {
    return new ImportTerminal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportTerminal {
    return new ImportTerminal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportTerminal {
    return new ImportTerminal().fromJsonString(jsonString, options);
  }

  static equals(a: ImportTerminal | PlainMessage<ImportTerminal> | undefined, b: ImportTerminal | PlainMessage<ImportTerminal> | undefined): boolean {
    return proto3.util.equals(ImportTerminal, a, b);
  }
}

/**
 * @generated from message api.asm.v1.Terminal
 */
export class Terminal extends Message<Terminal> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 distributor_id = 2;
   */
  distributorId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 box_id = 4;
   */
  boxId = protoInt64.zero;

  /**
   * @generated from field: int64 account_id = 5;
   */
  accountId = protoInt64.zero;

  /**
   * @generated from field: bool is_used = 6;
   */
  isUsed = false;

  /**
   * @generated from field: string mac_string = 7;
   */
  macString = "";

  /**
   * @generated from field: string chip_identity = 8;
   */
  chipIdentity = "";

  /**
   * @generated from field: string serial = 9;
   */
  serial = "";

  /**
   * @generated from field: string active_code = 10;
   */
  activeCode = "";

  /**
   * @generated from field: string updated_at = 11;
   */
  updatedAt = "";

  /**
   * @generated from field: bool set_active = 12;
   */
  setActive = false;

  /**
   * @generated from field: bool set_service = 13;
   */
  setService = false;

  /**
   * @generated from field: bool store_auth = 14;
   */
  storeAuth = false;

  /**
   * @generated from field: int64 model_id = 15;
   */
  modelId = protoInt64.zero;

  constructor(data?: PartialMessage<Terminal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Terminal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "box_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "account_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "is_used", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "serial", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "active_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "set_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "set_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "store_auth", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "model_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Terminal {
    return new Terminal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Terminal {
    return new Terminal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Terminal {
    return new Terminal().fromJsonString(jsonString, options);
  }

  static equals(a: Terminal | PlainMessage<Terminal> | undefined, b: Terminal | PlainMessage<Terminal> | undefined): boolean {
    return proto3.util.equals(Terminal, a, b);
  }
}

/**
 * @generated from message api.asm.v1.Account
 */
export class Account extends Message<Account> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 distributor_id = 2;
   */
  distributorId = protoInt64.zero;

  /**
   * @generated from field: int64 lot_id = 3;
   */
  lotId = protoInt64.zero;

  /**
   * @generated from field: int64 box_id = 4;
   */
  boxId = protoInt64.zero;

  /**
   * @generated from field: int64 stb_id = 5;
   */
  stbId = protoInt64.zero;

  /**
   * @generated from field: string mac_string = 6;
   */
  macString = "";

  /**
   * @generated from field: string chip_identity = 7;
   */
  chipIdentity = "";

  /**
   * @generated from field: string apk_type = 8;
   */
  apkType = "";

  /**
   * @generated from field: bool is_active = 9;
   */
  isActive = false;

  /**
   * @generated from field: bool is_service = 10;
   */
  isService = false;

  /**
   * @generated from field: string register_date = 11;
   */
  registerDate = "";

  /**
   * @generated from field: string active_date_start = 12;
   */
  activeDateStart = "";

  /**
   * @generated from field: int32 active_days = 13;
   */
  activeDays = 0;

  /**
   * @generated from field: bool is_expired = 14;
   */
  isExpired = false;

  /**
   * @generated from field: string create_at = 15;
   */
  createAt = "";

  /**
   * @generated from field: string updated_at = 16;
   */
  updatedAt = "";

  /**
   * @generated from field: bool is_deleted = 17;
   */
  isDeleted = false;

  /**
   * @generated from field: string deleted_at = 18;
   */
  deletedAt = "";

  /**
   * @generated from field: bool store_auth = 19;
   */
  storeAuth = false;

  /**
   * @generated from field: int64 model_id = 20;
   */
  modelId = protoInt64.zero;

  constructor(data?: PartialMessage<Account>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Account";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "box_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "stb_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "is_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "register_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "active_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "active_days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "is_expired", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "is_deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "deleted_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "store_auth", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 20, name: "model_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account {
    return new Account().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJsonString(jsonString, options);
  }

  static equals(a: Account | PlainMessage<Account> | undefined, b: Account | PlainMessage<Account> | undefined): boolean {
    return proto3.util.equals(Account, a, b);
  }
}

/**
 * @generated from message api.asm.v1.IpLimit
 */
export class IpLimit extends Message<IpLimit> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: uint32 ip_address = 2;
   */
  ipAddress = 0;

  /**
   * @generated from field: int32 limit_type = 3;
   */
  limitType = 0;

  /**
   * @generated from field: string ip_string = 4;
   */
  ipString = "";

  /**
   * @generated from field: string apk_type = 5;
   */
  apkType = "";

  constructor(data?: PartialMessage<IpLimit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.IpLimit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "ip_address", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "limit_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "ip_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IpLimit {
    return new IpLimit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IpLimit {
    return new IpLimit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IpLimit {
    return new IpLimit().fromJsonString(jsonString, options);
  }

  static equals(a: IpLimit | PlainMessage<IpLimit> | undefined, b: IpLimit | PlainMessage<IpLimit> | undefined): boolean {
    return proto3.util.equals(IpLimit, a, b);
  }
}

/**
 * @generated from message api.asm.v1.Portal
 */
export class Portal extends Message<Portal> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: bool is_service = 2;
   */
  isService = false;

  /**
   * @generated from field: string provider = 3;
   */
  provider = "";

  /**
   * @generated from field: string apk_type = 4;
   */
  apkType = "";

  /**
   * @generated from field: string apk_version = 5;
   */
  apkVersion = "";

  /**
   * @generated from field: string mw_version = 6;
   */
  mwVersion = "";

  /**
   * @generated from field: string url = 7;
   */
  url = "";

  /**
   * @generated from field: string service_type = 8;
   */
  serviceType = "";

  /**
   * @generated from field: string updated_at = 9;
   */
  updatedAt = "";

  /**
   * @generated from field: string base_url = 10;
   */
  baseUrl = "";

  constructor(data?: PartialMessage<Portal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Portal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "is_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "apk_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "mw_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "service_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "base_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Portal {
    return new Portal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Portal {
    return new Portal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Portal {
    return new Portal().fromJsonString(jsonString, options);
  }

  static equals(a: Portal | PlainMessage<Portal> | undefined, b: Portal | PlainMessage<Portal> | undefined): boolean {
    return proto3.util.equals(Portal, a, b);
  }
}

/**
 * @generated from message api.asm.v1.AccountFilter
 */
export class AccountFilter extends Message<AccountFilter> {
  /**
   * @generated from field: string distributor_id = 1;
   */
  distributorId = "";

  /**
   * @generated from field: string lot_id = 2;
   */
  lotId = "";

  /**
   * @generated from field: string mac_string = 3;
   */
  macString = "";

  /**
   * 型号名
   *
   * @generated from field: string apk_type = 4;
   */
  apkType = "";

  /**
   * @generated from field: string is_active = 5;
   */
  isActive = "";

  /**
   * @generated from field: string is_service = 6;
   */
  isService = "";

  /**
   * @generated from field: string is_expired = 7;
   */
  isExpired = "";

  /**
   * @generated from field: string chip_identity = 8;
   */
  chipIdentity = "";

  /**
   * @generated from field: string store_auth = 9;
   */
  storeAuth = "";

  /**
   * @generated from field: string model_id = 10;
   */
  modelId = "";

  constructor(data?: PartialMessage<AccountFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.AccountFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "is_active", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "is_service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "is_expired", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "store_auth", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountFilter {
    return new AccountFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountFilter {
    return new AccountFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountFilter {
    return new AccountFilter().fromJsonString(jsonString, options);
  }

  static equals(a: AccountFilter | PlainMessage<AccountFilter> | undefined, b: AccountFilter | PlainMessage<AccountFilter> | undefined): boolean {
    return proto3.util.equals(AccountFilter, a, b);
  }
}

/**
 * @generated from message api.asm.v1.AccountInfo
 */
export class AccountInfo extends Message<AccountInfo> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  /**
   * @generated from field: string lot_id = 3;
   */
  lotId = "";

  /**
   * @generated from field: string box_id = 4;
   */
  boxId = "";

  /**
   * @generated from field: string stb_id = 5;
   */
  stbId = "";

  /**
   * @generated from field: string mac_string = 6;
   */
  macString = "";

  /**
   * @generated from field: string chip_identity = 7;
   */
  chipIdentity = "";

  /**
   * @generated from field: string apk_type = 8;
   */
  apkType = "";

  /**
   * @generated from field: bool is_active = 9;
   */
  isActive = false;

  /**
   * @generated from field: bool is_service = 10;
   */
  isService = false;

  /**
   * @generated from field: string register_date = 11;
   */
  registerDate = "";

  /**
   * @generated from field: string active_date_start = 12;
   */
  activeDateStart = "";

  /**
   * @generated from field: int32 active_days = 13;
   */
  activeDays = 0;

  /**
   * @generated from field: bool is_expired = 14;
   */
  isExpired = false;

  /**
   * @generated from field: string create_at = 15;
   */
  createAt = "";

  /**
   * @generated from field: string updated_at = 16;
   */
  updatedAt = "";

  /**
   * @generated from field: bool is_deleted = 17;
   */
  isDeleted = false;

  /**
   * @generated from field: string deleted_at = 18;
   */
  deletedAt = "";

  /**
   * @generated from field: string distributor_name = 19;
   */
  distributorName = "";

  /**
   * @generated from field: string lot_name = 20;
   */
  lotName = "";

  /**
   * @generated from field: bool store_auth = 21;
   */
  storeAuth = false;

  /**
   * @generated from field: string model_id = 22;
   */
  modelId = "";

  /**
   * @generated from field: string model_name = 23;
   */
  modelName = "";

  constructor(data?: PartialMessage<AccountInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.AccountInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "box_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "stb_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "is_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "register_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "active_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "active_days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "is_expired", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "is_deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "deleted_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "lot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "store_auth", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 22, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountInfo {
    return new AccountInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountInfo {
    return new AccountInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountInfo {
    return new AccountInfo().fromJsonString(jsonString, options);
  }

  static equals(a: AccountInfo | PlainMessage<AccountInfo> | undefined, b: AccountInfo | PlainMessage<AccountInfo> | undefined): boolean {
    return proto3.util.equals(AccountInfo, a, b);
  }
}

/**
 * @generated from message api.asm.v1.TerminalFilter
 */
export class TerminalFilter extends Message<TerminalFilter> {
  /**
   * @generated from field: string distributor_id = 1;
   */
  distributorId = "";

  /**
   * @generated from field: string lot_id = 2;
   */
  lotId = "";

  /**
   * @generated from field: string is_used = 3;
   */
  isUsed = "";

  /**
   * @generated from field: string mac_string = 4;
   */
  macString = "";

  /**
   * @generated from field: string chip_identity = 5;
   */
  chipIdentity = "";

  /**
   * @generated from field: string model_id = 6;
   */
  modelId = "";

  /**
   * @generated from field: string set_active = 7;
   */
  setActive = "";

  /**
   * @generated from field: string set_service = 8;
   */
  setService = "";

  /**
   * @generated from field: string store_auth = 9;
   */
  storeAuth = "";

  constructor(data?: PartialMessage<TerminalFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.TerminalFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_used", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "set_active", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "set_service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "store_auth", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TerminalFilter {
    return new TerminalFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TerminalFilter {
    return new TerminalFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TerminalFilter {
    return new TerminalFilter().fromJsonString(jsonString, options);
  }

  static equals(a: TerminalFilter | PlainMessage<TerminalFilter> | undefined, b: TerminalFilter | PlainMessage<TerminalFilter> | undefined): boolean {
    return proto3.util.equals(TerminalFilter, a, b);
  }
}

/**
 * @generated from message api.asm.v1.TerminalInfo
 */
export class TerminalInfo extends Message<TerminalInfo> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  /**
   * @generated from field: string lot_id = 3;
   */
  lotId = "";

  /**
   * @generated from field: string box_id = 4;
   */
  boxId = "";

  /**
   * @generated from field: string account_id = 5;
   */
  accountId = "";

  /**
   * @generated from field: bool is_used = 6;
   */
  isUsed = false;

  /**
   * @generated from field: string mac_string = 7;
   */
  macString = "";

  /**
   * @generated from field: string chip_identity = 8;
   */
  chipIdentity = "";

  /**
   * @generated from field: string serial = 9;
   */
  serial = "";

  /**
   * @generated from field: string active_code = 10;
   */
  activeCode = "";

  /**
   * @generated from field: string updated_at = 11;
   */
  updatedAt = "";

  /**
   * @generated from field: string distributor_name = 12;
   */
  distributorName = "";

  /**
   * @generated from field: string lot_name = 13;
   */
  lotName = "";

  /**
   * @generated from field: bool set_active = 14;
   */
  setActive = false;

  /**
   * @generated from field: bool set_service = 15;
   */
  setService = false;

  /**
   * @generated from field: bool store_auth = 16;
   */
  storeAuth = false;

  /**
   * @generated from field: string model_id = 17;
   */
  modelId = "";

  /**
   * @generated from field: string model_name = 18;
   */
  modelName = "";

  /**
   * @generated from field: string created_at = 19;
   */
  createdAt = "";

  constructor(data?: PartialMessage<TerminalInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.TerminalInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "lot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "box_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "is_used", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "mac_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "chip_identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "serial", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "active_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "lot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "set_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "set_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "store_auth", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TerminalInfo {
    return new TerminalInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TerminalInfo {
    return new TerminalInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TerminalInfo {
    return new TerminalInfo().fromJsonString(jsonString, options);
  }

  static equals(a: TerminalInfo | PlainMessage<TerminalInfo> | undefined, b: TerminalInfo | PlainMessage<TerminalInfo> | undefined): boolean {
    return proto3.util.equals(TerminalInfo, a, b);
  }
}

/**
 * @generated from message api.asm.v1.LotLabel
 */
export class LotLabel extends Message<LotLabel> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  /**
   * @generated from field: string label = 3;
   */
  label = "";

  constructor(data?: PartialMessage<LotLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.LotLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LotLabel {
    return new LotLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LotLabel {
    return new LotLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LotLabel {
    return new LotLabel().fromJsonString(jsonString, options);
  }

  static equals(a: LotLabel | PlainMessage<LotLabel> | undefined, b: LotLabel | PlainMessage<LotLabel> | undefined): boolean {
    return proto3.util.equals(LotLabel, a, b);
  }
}

/**
 * @generated from message api.asm.v1.LotValueLabel
 */
export class LotValueLabel extends Message<LotValueLabel> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  constructor(data?: PartialMessage<LotValueLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.LotValueLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LotValueLabel {
    return new LotValueLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LotValueLabel {
    return new LotValueLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LotValueLabel {
    return new LotValueLabel().fromJsonString(jsonString, options);
  }

  static equals(a: LotValueLabel | PlainMessage<LotValueLabel> | undefined, b: LotValueLabel | PlainMessage<LotValueLabel> | undefined): boolean {
    return proto3.util.equals(LotValueLabel, a, b);
  }
}

/**
 * @generated from message api.asm.v1.DistributorLabel
 */
export class DistributorLabel extends Message<DistributorLabel> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  constructor(data?: PartialMessage<DistributorLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.DistributorLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributorLabel {
    return new DistributorLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributorLabel {
    return new DistributorLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributorLabel {
    return new DistributorLabel().fromJsonString(jsonString, options);
  }

  static equals(a: DistributorLabel | PlainMessage<DistributorLabel> | undefined, b: DistributorLabel | PlainMessage<DistributorLabel> | undefined): boolean {
    return proto3.util.equals(DistributorLabel, a, b);
  }
}

/**
 * @generated from message api.asm.v1.PortalInfo
 */
export class PortalInfo extends Message<PortalInfo> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string apk_type = 2;
   */
  apkType = "";

  /**
   * @generated from field: string apk_version = 3;
   */
  apkVersion = "";

  /**
   * @generated from field: string mw_version = 4;
   */
  mwVersion = "";

  /**
   * @generated from field: string provider = 5;
   */
  provider = "";

  /**
   * @generated from field: string service_type = 6;
   */
  serviceType = "";

  /**
   * @generated from field: string service_url = 7;
   */
  serviceUrl = "";

  /**
   * @generated from field: bool is_service = 8;
   */
  isService = false;

  /**
   * @generated from field: string created_at = 9;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 10;
   */
  updatedAt = "";

  /**
   * @generated from field: string base_url = 11;
   */
  baseUrl = "";

  constructor(data?: PartialMessage<PortalInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.PortalInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "apk_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apk_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "mw_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "service_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "service_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "is_service", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "base_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PortalInfo {
    return new PortalInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PortalInfo {
    return new PortalInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PortalInfo {
    return new PortalInfo().fromJsonString(jsonString, options);
  }

  static equals(a: PortalInfo | PlainMessage<PortalInfo> | undefined, b: PortalInfo | PlainMessage<PortalInfo> | undefined): boolean {
    return proto3.util.equals(PortalInfo, a, b);
  }
}

/**
 * @generated from message api.asm.v1.Server
 */
export class Server extends Message<Server> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string domain = 2;
   */
  domain = "";

  /**
   * @generated from field: bool is_use = 3;
   */
  isUse = false;

  /**
   * @generated from field: bool deleted = 4;
   */
  deleted = false;

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt = "";

  /**
   * @generated from field: int32 type = 6;
   */
  type = 0;

  constructor(data?: PartialMessage<Server>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.Server";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Server {
    return new Server().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Server {
    return new Server().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Server {
    return new Server().fromJsonString(jsonString, options);
  }

  static equals(a: Server | PlainMessage<Server> | undefined, b: Server | PlainMessage<Server> | undefined): boolean {
    return proto3.util.equals(Server, a, b);
  }
}

/**
 * @generated from message api.asm.v1.ServerOption
 */
export class ServerOption extends Message<ServerOption> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<ServerOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.ServerOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServerOption {
    return new ServerOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServerOption {
    return new ServerOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServerOption {
    return new ServerOption().fromJsonString(jsonString, options);
  }

  static equals(a: ServerOption | PlainMessage<ServerOption> | undefined, b: ServerOption | PlainMessage<ServerOption> | undefined): boolean {
    return proto3.util.equals(ServerOption, a, b);
  }
}

/**
 * @generated from message api.asm.v1.ServerGroup
 */
export class ServerGroup extends Message<ServerGroup> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string start_mac = 3;
   */
  startMac = "";

  /**
   * @generated from field: string end_mac = 4;
   */
  endMac = "";

  /**
   * @generated from field: int32 count = 5;
   */
  count = 0;

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt = "";

  /**
   * @generated from field: bool deleted = 7;
   */
  deleted = false;

  /**
   * @generated from field: bool is_use = 8;
   */
  isUse = false;

  /**
   * @generated from field: repeated int32 server_ids = 9;
   */
  serverIds: number[] = [];

  /**
   * @generated from field: repeated api.asm.v1.Server server_list = 10;
   */
  serverList: Server[] = [];

  constructor(data?: PartialMessage<ServerGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.asm.v1.ServerGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "end_mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "server_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 10, name: "server_list", kind: "message", T: Server, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServerGroup {
    return new ServerGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServerGroup {
    return new ServerGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServerGroup {
    return new ServerGroup().fromJsonString(jsonString, options);
  }

  static equals(a: ServerGroup | PlainMessage<ServerGroup> | undefined, b: ServerGroup | PlainMessage<ServerGroup> | undefined): boolean {
    return proto3.util.equals(ServerGroup, a, b);
  }
}

