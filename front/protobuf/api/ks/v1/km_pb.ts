// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ks/v1/km.proto (package api.ks.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message api.ks.v1.MajorEventRequest
 */
export class MajorEventRequest extends Message<MajorEventRequest> {
  /**
   * @generated from field: string mac = 1;
   */
  mac = "";

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string timezone = 3;
   */
  timezone = "";

  /**
   * @generated from field: string day = 4;
   */
  day = "";

  /**
   * @generated from field: string sign = 5;
   */
  sign = "";

  constructor(data?: PartialMessage<MajorEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MajorEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "day", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MajorEventRequest {
    return new MajorEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MajorEventRequest {
    return new MajorEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MajorEventRequest {
    return new MajorEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MajorEventRequest | PlainMessage<MajorEventRequest> | undefined, b: MajorEventRequest | PlainMessage<MajorEventRequest> | undefined): boolean {
    return proto3.util.equals(MajorEventRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.MajorEvent
 */
export class MajorEvent extends Message<MajorEvent> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string live_match = 3;
   */
  liveMatch = "";

  /**
   * @generated from field: int32 base_time = 4;
   */
  baseTime = 0;

  /**
   * @generated from field: string match_data = 5;
   */
  matchData = "";

  /**
   * @generated from field: int32 sort = 6;
   */
  sort = 0;

  /**
   * @generated from field: string ext = 7;
   */
  ext = "";

  /**
   * @generated from field: string created = 8;
   */
  created = "";

  /**
   * @generated from field: string timezone = 9;
   */
  timezone = "";

  /**
   * @generated from field: api.ks.v1.EventInformation teams = 10;
   */
  teams?: EventInformation;

  /**
   * @generated from field: string match_title = 11;
   */
  matchTitle = "";

  /**
   * @generated from field: string match_area = 12;
   */
  matchArea = "";

  constructor(data?: PartialMessage<MajorEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MajorEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "live_match", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "base_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "match_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "ext", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "teams", kind: "message", T: EventInformation },
    { no: 11, name: "match_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "match_area", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MajorEvent {
    return new MajorEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MajorEvent {
    return new MajorEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MajorEvent {
    return new MajorEvent().fromJsonString(jsonString, options);
  }

  static equals(a: MajorEvent | PlainMessage<MajorEvent> | undefined, b: MajorEvent | PlainMessage<MajorEvent> | undefined): boolean {
    return proto3.util.equals(MajorEvent, a, b);
  }
}

/**
 * @generated from message api.ks.v1.MajorEventInfo
 */
export class MajorEventInfo extends Message<MajorEventInfo> {
  /**
   * @generated from field: string timezone = 1;
   */
  timezone = "";

  /**
   * @generated from field: string date = 2;
   */
  date = "";

  /**
   * @generated from field: string weekday = 3;
   */
  weekday = "";

  /**
   * @generated from field: string date_format = 4;
   */
  dateFormat = "";

  /**
   * @generated from field: int64 timestamp = 5;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: repeated string event_list = 6;
   */
  eventList: string[] = [];

  constructor(data?: PartialMessage<MajorEventInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MajorEventInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "weekday", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date_format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "event_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MajorEventInfo {
    return new MajorEventInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MajorEventInfo {
    return new MajorEventInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MajorEventInfo {
    return new MajorEventInfo().fromJsonString(jsonString, options);
  }

  static equals(a: MajorEventInfo | PlainMessage<MajorEventInfo> | undefined, b: MajorEventInfo | PlainMessage<MajorEventInfo> | undefined): boolean {
    return proto3.util.equals(MajorEventInfo, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Event
 */
export class Event extends Message<Event> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string event_time = 2;
   */
  eventTime = "";

  /**
   * @generated from field: string event_info = 3;
   */
  eventInfo = "";

  /**
   * @generated from field: api.ks.v1.EventInformation event_information = 4;
   */
  eventInformation?: EventInformation;

  /**
   * @generated from field: string score = 5;
   */
  score = "";

  /**
   * @generated from field: string match_title = 6;
   */
  matchTitle = "";

  /**
   * @generated from field: string match_area = 7;
   */
  matchArea = "";

  constructor(data?: PartialMessage<Event>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Event";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "event_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "event_info", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "event_information", kind: "message", T: EventInformation },
    { no: 5, name: "score", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "match_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "match_area", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event {
    return new Event().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event {
    return new Event().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event {
    return new Event().fromJsonString(jsonString, options);
  }

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean {
    return proto3.util.equals(Event, a, b);
  }
}

/**
 * @generated from message api.ks.v1.EventInformation
 */
export class EventInformation extends Message<EventInformation> {
  /**
   * @generated from field: api.ks.v1.Team a = 1;
   */
  a?: Team;

  /**
   * @generated from field: api.ks.v1.Team b = 2;
   */
  b?: Team;

  constructor(data?: PartialMessage<EventInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.EventInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "a", kind: "message", T: Team },
    { no: 2, name: "b", kind: "message", T: Team },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventInformation {
    return new EventInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventInformation {
    return new EventInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventInformation {
    return new EventInformation().fromJsonString(jsonString, options);
  }

  static equals(a: EventInformation | PlainMessage<EventInformation> | undefined, b: EventInformation | PlainMessage<EventInformation> | undefined): boolean {
    return proto3.util.equals(EventInformation, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Team
 */
export class Team extends Message<Team> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string icon = 2;
   */
  icon = "";

  constructor(data?: PartialMessage<Team>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Team";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "icon", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Team {
    return new Team().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Team {
    return new Team().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Team {
    return new Team().fromJsonString(jsonString, options);
  }

  static equals(a: Team | PlainMessage<Team> | undefined, b: Team | PlainMessage<Team> | undefined): boolean {
    return proto3.util.equals(Team, a, b);
  }
}

/**
 * @generated from message api.ks.v1.XstreamResource
 */
export class XstreamResource extends Message<XstreamResource> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 资源名称
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * 资源标志
   *
   * @generated from field: string bouquet_id = 3;
   */
  bouquetId = "";

  /**
   * @generated from field: int32 created = 4;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 5;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 6;
   */
  deleted = false;

  /**
   * @generated from field: string resource_type = 7;
   */
  resourceType = "";

  constructor(data?: PartialMessage<XstreamResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.XstreamResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bouquet_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "resource_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XstreamResource {
    return new XstreamResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XstreamResource {
    return new XstreamResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XstreamResource {
    return new XstreamResource().fromJsonString(jsonString, options);
  }

  static equals(a: XstreamResource | PlainMessage<XstreamResource> | undefined, b: XstreamResource | PlainMessage<XstreamResource> | undefined): boolean {
    return proto3.util.equals(XstreamResource, a, b);
  }
}

/**
 * @generated from message api.ks.v1.XstreamResourceValueLabel
 */
export class XstreamResourceValueLabel extends Message<XstreamResourceValueLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<XstreamResourceValueLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.XstreamResourceValueLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XstreamResourceValueLabel {
    return new XstreamResourceValueLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XstreamResourceValueLabel {
    return new XstreamResourceValueLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XstreamResourceValueLabel {
    return new XstreamResourceValueLabel().fromJsonString(jsonString, options);
  }

  static equals(a: XstreamResourceValueLabel | PlainMessage<XstreamResourceValueLabel> | undefined, b: XstreamResourceValueLabel | PlainMessage<XstreamResourceValueLabel> | undefined): boolean {
    return proto3.util.equals(XstreamResourceValueLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.XstreamCombo
 */
export class XstreamCombo extends Message<XstreamCombo> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string probation = 3;
   */
  probation = "";

  /**
   * @generated from field: string one_month_price = 4;
   */
  oneMonthPrice = "";

  /**
   * @generated from field: string three_month_price = 5;
   */
  threeMonthPrice = "";

  /**
   * @generated from field: string six_month_price = 6;
   */
  sixMonthPrice = "";

  /**
   * @generated from field: string nine_month_price = 7;
   */
  nineMonthPrice = "";

  /**
   * @generated from field: string twelve_month_price = 8;
   */
  twelveMonthPrice = "";

  /**
   * @generated from field: string description = 9;
   */
  description = "";

  /**
   * @generated from field: int32 sort = 10;
   */
  sort = 0;

  /**
   * @generated from field: int32 created = 11;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 12;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 13;
   */
  deleted = false;

  /**
   * @generated from field: repeated api.ks.v1.XstreamResource xstream_resource_list = 14;
   */
  xstreamResourceList: XstreamResource[] = [];

  /**
   * @generated from field: int32 account_num = 15;
   */
  accountNum = 0;

  /**
   * @generated from field: repeated int32 resource_ids = 16;
   */
  resourceIds: number[] = [];

  /**
   * @generated from field: string combo_type = 17;
   */
  comboType = "";

  constructor(data?: PartialMessage<XstreamCombo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.XstreamCombo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "probation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "one_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "three_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "six_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "nine_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "twelve_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "xstream_resource_list", kind: "message", T: XstreamResource, repeated: true },
    { no: 15, name: "account_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "resource_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 17, name: "combo_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XstreamCombo {
    return new XstreamCombo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XstreamCombo {
    return new XstreamCombo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XstreamCombo {
    return new XstreamCombo().fromJsonString(jsonString, options);
  }

  static equals(a: XstreamCombo | PlainMessage<XstreamCombo> | undefined, b: XstreamCombo | PlainMessage<XstreamCombo> | undefined): boolean {
    return proto3.util.equals(XstreamCombo, a, b);
  }
}

/**
 * @generated from message api.ks.v1.XstreamComboValueLabel
 */
export class XstreamComboValueLabel extends Message<XstreamComboValueLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  constructor(data?: PartialMessage<XstreamComboValueLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.XstreamComboValueLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XstreamComboValueLabel {
    return new XstreamComboValueLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XstreamComboValueLabel {
    return new XstreamComboValueLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XstreamComboValueLabel {
    return new XstreamComboValueLabel().fromJsonString(jsonString, options);
  }

  static equals(a: XstreamComboValueLabel | PlainMessage<XstreamComboValueLabel> | undefined, b: XstreamComboValueLabel | PlainMessage<XstreamComboValueLabel> | undefined): boolean {
    return proto3.util.equals(XstreamComboValueLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.MacAccount
 */
export class MacAccount extends Message<MacAccount> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string mac = 2;
   */
  mac = "";

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * 账号
   *
   * @generated from field: string username = 4;
   */
  username = "";

  /**
   * 密码
   *
   * @generated from field: string password = 5;
   */
  password = "";

  /**
   * @generated from field: string max_connections = 6;
   */
  maxConnections = "";

  /**
   * 有效期
   *
   * @generated from field: string duration = 7;
   */
  duration = "";

  /**
   * 到期时间戳
   *
   * @generated from field: int32 exp_date = 8;
   */
  expDate = 0;

  /**
   * 激活时间戳
   *
   * @generated from field: int32 activation_time = 9;
   */
  activationTime = 0;

  /**
   * 套餐id
   *
   * @generated from field: int32 combo_id = 10;
   */
  comboId = 0;

  /**
   * 用途 1 拉流账户  2普通账户
   *
   * @generated from field: int32 usage = 11;
   */
  usage = 0;

  /**
   * 账号是否在xc存在 0未存在 1正在创建 2存在
   *
   * @generated from field: int32 is_exist = 12;
   */
  isExist = 0;

  /**
   * 备注
   *
   * @generated from field: string remark = 13;
   */
  remark = "";

  /**
   * 创建时间
   *
   * @generated from field: int32 created = 14;
   */
  created = 0;

  /**
   * 更新时间
   *
   * @generated from field: int32 updated = 15;
   */
  updated = 0;

  /**
   * 是否删除
   *
   * @generated from field: bool deleted = 16;
   */
  deleted = false;

  /**
   * 平台类型 1 ott  2 tv
   *
   * @generated from field: int32 platform_type = 17;
   */
  platformType = 0;

  /**
   * @generated from field: string distributor_name = 18;
   */
  distributorName = "";

  /**
   * @generated from field: string combo_name = 19;
   */
  comboName = "";

  /**
   * 账号在哪个平台存在 live 直播 playback 回访 vod 点播
   *
   * @generated from field: string xc_type = 20;
   */
  xcType = "";

  /**
   * @generated from field: string mac_account_table = 21;
   */
  macAccountTable = "";

  /**
   * @generated from field: int32 app_id = 22;
   */
  appId = 0;

  /**
   * @generated from field: string app_name = 23;
   */
  appName = "";

  constructor(data?: PartialMessage<MacAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MacAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "max_connections", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "duration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "exp_date", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "activation_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "usage", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "is_exist", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "remark", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "platform_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 18, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "combo_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "xc_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "mac_account_table", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "app_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 23, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MacAccount {
    return new MacAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MacAccount {
    return new MacAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MacAccount {
    return new MacAccount().fromJsonString(jsonString, options);
  }

  static equals(a: MacAccount | PlainMessage<MacAccount> | undefined, b: MacAccount | PlainMessage<MacAccount> | undefined): boolean {
    return proto3.util.equals(MacAccount, a, b);
  }
}

/**
 * @generated from message api.ks.v1.MainClass
 */
export class MainClass extends Message<MainClass> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 3;
   */
  zhName = "";

  /**
   * @generated from field: string list_name = 4;
   */
  listName = "";

  /**
   * @generated from field: string probation = 5;
   */
  probation = "";

  /**
   * @generated from field: string one_month_price = 6;
   */
  oneMonthPrice = "";

  /**
   * @generated from field: string three_month_price = 7;
   */
  threeMonthPrice = "";

  /**
   * @generated from field: string six_month_price = 8;
   */
  sixMonthPrice = "";

  /**
   * @generated from field: string nine_month_price = 9;
   */
  nineMonthPrice = "";

  /**
   * @generated from field: string twelve_month_price = 10;
   */
  twelveMonthPrice = "";

  /**
   * @generated from field: string description = 11;
   */
  description = "";

  /**
   * @generated from field: int32 sort = 12;
   */
  sort = 0;

  /**
   * @generated from field: int32 created = 13;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 14;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 15;
   */
  deleted = false;

  /**
   * @generated from field: bool is_show = 16;
   */
  isShow = false;

  /**
   * @generated from field: bool is_charge = 17;
   */
  isCharge = false;

  /**
   * @generated from field: string price = 18;
   */
  price = "";

  /**
   * @generated from field: string identity = 19;
   */
  identity = "";

  /**
   * @generated from field: int32 combo_id = 20;
   */
  comboId = 0;

  /**
   * @generated from field: string version = 21;
   */
  version = "";

  /**
   * @generated from field: string combo_name = 22;
   */
  comboName = "";

  /**
   * 播放域名
   *
   * @generated from field: string domain = 23;
   */
  domain = "";

  /**
   * 配置版本号
   *
   * @generated from field: int32 config_version = 24;
   */
  configVersion = 0;

  /**
   * @generated from field: string type = 25;
   */
  type = "";

  /**
   * @generated from field: int32 app_max_buffer = 26;
   */
  appMaxBuffer = 0;

  /**
   * @generated from field: int32 content_latency = 27;
   */
  contentLatency = 0;

  /**
   * @generated from field: int32 stream_max_buffer = 28;
   */
  streamMaxBuffer = 0;

  /**
   * @generated from field: string mpegts_cache = 29;
   */
  mpegtsCache = "";

  /**
   * @generated from field: int32 interval = 30;
   */
  interval = 0;

  /**
   * @generated from field: int32 max_retry = 31;
   */
  maxRetry = 0;

  /**
   * @generated from field: int32 timeout = 32;
   */
  timeout = 0;

  /**
   * @generated from field: string pull_on_start = 33;
   */
  pullOnStart = "";

  constructor(data?: PartialMessage<MainClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MainClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "list_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "probation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "one_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "three_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "six_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "nine_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "twelve_month_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "is_show", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "is_charge", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 21, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "combo_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "config_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 25, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "app_max_buffer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 27, name: "content_latency", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 28, name: "stream_max_buffer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 29, name: "mpegts_cache", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "interval", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 31, name: "max_retry", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 32, name: "timeout", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 33, name: "pull_on_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MainClass {
    return new MainClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MainClass {
    return new MainClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MainClass {
    return new MainClass().fromJsonString(jsonString, options);
  }

  static equals(a: MainClass | PlainMessage<MainClass> | undefined, b: MainClass | PlainMessage<MainClass> | undefined): boolean {
    return proto3.util.equals(MainClass, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SubClass
 */
export class SubClass extends Message<SubClass> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 main_class_id = 2;
   */
  mainClassId = 0;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 4;
   */
  zhName = "";

  /**
   * @generated from field: int32 sort = 5;
   */
  sort = 0;

  /**
   * @generated from field: bool is_use = 6;
   */
  isUse = false;

  /**
   * @generated from field: string keyword = 7;
   */
  keyword = "";

  /**
   * @generated from field: string category_id = 8;
   */
  categoryId = "";

  constructor(data?: PartialMessage<SubClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SubClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "category_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubClass {
    return new SubClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubClass {
    return new SubClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubClass {
    return new SubClass().fromJsonString(jsonString, options);
  }

  static equals(a: SubClass | PlainMessage<SubClass> | undefined, b: SubClass | PlainMessage<SubClass> | undefined): boolean {
    return proto3.util.equals(SubClass, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Channel
 */
export class Channel extends Message<Channel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 sub_class_id = 2;
   */
  subClassId = 0;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 4;
   */
  zhName = "";

  /**
   * @generated from field: string keyword = 5;
   */
  keyword = "";

  /**
   * @generated from field: int32 sort = 6;
   */
  sort = 0;

  /**
   * @generated from field: bool is_use = 7;
   */
  isUse = false;

  /**
   * @generated from field: int32 channel_number = 8;
   */
  channelNumber = 0;

  /**
   * @generated from field: string image = 9;
   */
  image = "";

  /**
   * @generated from field: string alias_name = 10;
   */
  aliasName = "";

  /**
   * @generated from field: bool is_recommend = 11;
   */
  isRecommend = false;

  /**
   * @generated from field: bool is_adult = 12;
   */
  isAdult = false;

  /**
   * @generated from field: int32 rebroadcast_use_flag = 13;
   */
  rebroadcastUseFlag = 0;

  /**
   * @generated from field: int32 shifting_use_flag = 14;
   */
  shiftingUseFlag = 0;

  /**
   * @generated from field: int32 main_class_id = 15;
   */
  mainClassId = 0;

  /**
   * @generated from field: int32 recommend_sort = 16;
   */
  recommendSort = 0;

  /**
   * @generated from field: int32 stream_id = 17;
   */
  streamId = 0;

  /**
   * @generated from field: string playback_name = 18;
   */
  playbackName = "";

  /**
   * 实时流缓存的数据量
   *
   * @generated from field: int32 max_buffer = 19;
   */
  maxBuffer = 0;

  /**
   * @generated from field: string mpegts_cache = 20;
   */
  mpegtsCache = "";

  /**
   * @generated from field: string pull_on_start = 21;
   */
  pullOnStart = "";

  /**
   * @generated from field: string sub_class_name = 22;
   */
  subClassName = "";

  /**
   * @generated from field: string playback_filter = 23;
   */
  playbackFilter = "";

  /**
   * @generated from field: string adult_filter = 24;
   */
  adultFilter = "";

  /**
   * @generated from field: string recommend_filter = 25;
   */
  recommendFilter = "";

  /**
   * @generated from field: int32 star = 26;
   */
  star = 0;

  /**
   * @generated from field: bool is_all = 27;
   */
  isAll = false;

  /**
   * @generated from field: int32 bitrate = 28;
   */
  bitrate = 0;

  /**
   * @generated from field: string resolution = 29;
   */
  resolution = "";

  /**
   * @generated from field: string framerate = 30;
   */
  framerate = "";

  /**
   * @generated from field: string video_codec = 31;
   */
  videoCodec = "";

  /**
   * @generated from field: string audio_codec = 32;
   */
  audioCodec = "";

  constructor(data?: PartialMessage<Channel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Channel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "sub_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "channel_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "alias_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "is_recommend", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "is_adult", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "rebroadcast_use_flag", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "shifting_use_flag", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "recommend_sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 17, name: "stream_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 18, name: "playback_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "max_buffer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 20, name: "mpegts_cache", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "pull_on_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "sub_class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "playback_filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "adult_filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "recommend_filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "star", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 27, name: "is_all", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 28, name: "bitrate", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 29, name: "resolution", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "framerate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 31, name: "video_codec", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 32, name: "audio_codec", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Channel {
    return new Channel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Channel {
    return new Channel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Channel {
    return new Channel().fromJsonString(jsonString, options);
  }

  static equals(a: Channel | PlainMessage<Channel> | undefined, b: Channel | PlainMessage<Channel> | undefined): boolean {
    return proto3.util.equals(Channel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ChannelLabel
 */
export class ChannelLabel extends Message<ChannelLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<ChannelLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ChannelLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChannelLabel {
    return new ChannelLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChannelLabel {
    return new ChannelLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChannelLabel {
    return new ChannelLabel().fromJsonString(jsonString, options);
  }

  static equals(a: ChannelLabel | PlainMessage<ChannelLabel> | undefined, b: ChannelLabel | PlainMessage<ChannelLabel> | undefined): boolean {
    return proto3.util.equals(ChannelLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Link
 */
export class Link extends Message<Link> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 channel_id = 2;
   */
  channelId = 0;

  /**
   * @generated from field: string link = 3;
   */
  link = "";

  /**
   * @generated from field: string source = 4;
   */
  source = "";

  /**
   * @generated from field: int32 sort = 5;
   */
  sort = 0;

  /**
   * @generated from field: bool is_use = 6;
   */
  isUse = false;

  /**
   * @generated from field: bool script_deal = 7;
   */
  scriptDeal = false;

  /**
   * @generated from field: string method = 8;
   */
  method = "";

  /**
   * @generated from field: int32 decode = 9;
   */
  decode = 0;

  /**
   * @generated from field: int32 main_class_id = 10;
   */
  mainClassId = 0;

  /**
   * @generated from field: int32 sub_class_id = 11;
   */
  subClassId = 0;

  /**
   * @generated from field: string keyword = 12;
   */
  keyword = "";

  /**
   * 重试间隔时间(秒)
   *
   * @generated from field: int32 interval = 13;
   */
  interval = 0;

  /**
   * 重试次数
   *
   * @generated from field: int32 max_retry = 14;
   */
  maxRetry = 0;

  /**
   * 超时时间
   *
   * @generated from field: int32 timeout = 15;
   */
  timeout = 0;

  /**
   * @generated from field: string sub_class_name = 16;
   */
  subClassName = "";

  /**
   * @generated from field: int32 bitrate = 17;
   */
  bitrate = 0;

  /**
   * @generated from field: string resolution = 18;
   */
  resolution = "";

  /**
   * @generated from field: string framerate = 19;
   */
  framerate = "";

  /**
   * @generated from field: string video_codec = 20;
   */
  videoCodec = "";

  /**
   * @generated from field: string audio_codec = 21;
   */
  audioCodec = "";

  constructor(data?: PartialMessage<Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "is_use", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "script_deal", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "decode", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "sub_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "interval", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "max_retry", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "timeout", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "sub_class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "bitrate", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 18, name: "resolution", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "framerate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "video_codec", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "audio_codec", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Link {
    return new Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Link {
    return new Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Link {
    return new Link().fromJsonString(jsonString, options);
  }

  static equals(a: Link | PlainMessage<Link> | undefined, b: Link | PlainMessage<Link> | undefined): boolean {
    return proto3.util.equals(Link, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Epg
 */
export class Epg extends Message<Epg> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int32 parade_timestamp = 2;
   */
  paradeTimestamp = 0;

  /**
   * @generated from field: string parade_name = 3;
   */
  paradeName = "";

  /**
   * @generated from field: string channel_name = 4;
   */
  channelName = "";

  /**
   * @generated from field: int32 end_timestamp = 5;
   */
  endTimestamp = 0;

  /**
   * @generated from field: repeated api.ks.v1.Channel channel_list = 6;
   */
  channelList: Channel[] = [];

  /**
   * @generated from field: string desc = 7;
   */
  desc = "";

  constructor(data?: PartialMessage<Epg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Epg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "parade_timestamp", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "parade_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "channel_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "end_timestamp", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "channel_list", kind: "message", T: Channel, repeated: true },
    { no: 7, name: "desc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Epg {
    return new Epg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Epg {
    return new Epg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Epg {
    return new Epg().fromJsonString(jsonString, options);
  }

  static equals(a: Epg | PlainMessage<Epg> | undefined, b: Epg | PlainMessage<Epg> | undefined): boolean {
    return proto3.util.equals(Epg, a, b);
  }
}

/**
 * @generated from message api.ks.v1.EpgLabel
 */
export class EpgLabel extends Message<EpgLabel> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<EpgLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.EpgLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpgLabel {
    return new EpgLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpgLabel {
    return new EpgLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpgLabel {
    return new EpgLabel().fromJsonString(jsonString, options);
  }

  static equals(a: EpgLabel | PlainMessage<EpgLabel> | undefined, b: EpgLabel | PlainMessage<EpgLabel> | undefined): boolean {
    return proto3.util.equals(EpgLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodClass
 */
export class VodClass extends Message<VodClass> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 3;
   */
  zhName = "";

  /**
   * @generated from field: string keyword = 4;
   */
  keyword = "";

  /**
   * @generated from field: int32 is_pay = 5;
   */
  isPay = 0;

  /**
   * @generated from field: int32 price = 6;
   */
  price = 0;

  /**
   * @generated from field: int32 trial_time = 7;
   */
  trialTime = 0;

  /**
   * @generated from field: int32 sort = 8;
   */
  sort = 0;

  /**
   * @generated from field: string ext = 9;
   */
  ext = "";

  /**
   * @generated from field: int32 created = 10;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 11;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 12;
   */
  deleted = false;

  /**
   * @generated from field: int32 vod_num = 13;
   */
  vodNum = 0;

  /**
   * @generated from field: string multi_lang = 14;
   */
  multiLang = "";

  /**
   * @generated from field: int32 combo_id = 15;
   */
  comboId = 0;

  /**
   * @generated from field: string list_name = 16;
   */
  listName = "";

  constructor(data?: PartialMessage<VodClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "is_pay", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "trial_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "ext", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "vod_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "multi_lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "list_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodClass {
    return new VodClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodClass {
    return new VodClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodClass {
    return new VodClass().fromJsonString(jsonString, options);
  }

  static equals(a: VodClass | PlainMessage<VodClass> | undefined, b: VodClass | PlainMessage<VodClass> | undefined): boolean {
    return proto3.util.equals(VodClass, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodClassLabel
 */
export class VodClassLabel extends Message<VodClassLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<VodClassLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodClassLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodClassLabel {
    return new VodClassLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodClassLabel {
    return new VodClassLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodClassLabel {
    return new VodClassLabel().fromJsonString(jsonString, options);
  }

  static equals(a: VodClassLabel | PlainMessage<VodClassLabel> | undefined, b: VodClassLabel | PlainMessage<VodClassLabel> | undefined): boolean {
    return proto3.util.equals(VodClassLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodSubClass
 */
export class VodSubClass extends Message<VodSubClass> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 class_id = 2;
   */
  classId = 0;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  constructor(data?: PartialMessage<VodSubClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodSubClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodSubClass {
    return new VodSubClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodSubClass {
    return new VodSubClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodSubClass {
    return new VodSubClass().fromJsonString(jsonString, options);
  }

  static equals(a: VodSubClass | PlainMessage<VodSubClass> | undefined, b: VodSubClass | PlainMessage<VodSubClass> | undefined): boolean {
    return proto3.util.equals(VodSubClass, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Vod
 */
export class Vod extends Message<Vod> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string category_id = 2;
   */
  categoryId = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 4;
   */
  zhName = "";

  /**
   * @generated from field: string keyword = 5;
   */
  keyword = "";

  /**
   * @generated from field: int32 class_id = 6;
   */
  classId = 0;

  /**
   * @generated from field: int32 sort = 7;
   */
  sort = 0;

  /**
   * @generated from field: int32 season = 8;
   */
  season = 0;

  /**
   * @generated from field: int32 episode = 9;
   */
  episode = 0;

  /**
   * @generated from field: int32 stream_id = 10;
   */
  streamId = 0;

  /**
   * @generated from field: string tmdb_id = 11;
   */
  tmdbId = "";

  /**
   * @generated from field: string cover = 12;
   */
  cover = "";

  /**
   * @generated from field: string release_date = 13;
   */
  releaseDate = "";

  /**
   * @generated from field: string episode_run_time = 14;
   */
  episodeRunTime = "";

  /**
   * @generated from field: string director = 15;
   */
  director = "";

  /**
   * @generated from field: string actors = 16;
   */
  actors = "";

  /**
   * @generated from field: string description = 17;
   */
  description = "";

  /**
   * @generated from field: string country = 18;
   */
  country = "";

  /**
   * @generated from field: string genre = 19;
   */
  genre = "";

  /**
   * @generated from field: repeated string backdrop_path = 20;
   */
  backdropPath: string[] = [];

  /**
   * @generated from field: string rating = 21;
   */
  rating = "";

  /**
   * @generated from field: string language = 22;
   */
  language = "";

  /**
   * @generated from field: string duration = 23;
   */
  duration = "";

  /**
   * @generated from field: string title = 24;
   */
  title = "";

  /**
   * @generated from field: string create_at = 25;
   */
  createAt = "";

  /**
   * @generated from field: string category_name = 26;
   */
  categoryName = "";

  /**
   * @generated from field: string class_name = 27;
   */
  className = "";

  /**
   * @generated from field: string distributor_id = 28;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 29;
   */
  modelId = "";

  /**
   * @generated from field: string distributor_name = 30;
   */
  distributorName = "";

  /**
   * @generated from field: string model_name = 31;
   */
  modelName = "";

  constructor(data?: PartialMessage<Vod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Vod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "category_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "season", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "episode", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "stream_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "tmdb_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "cover", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "release_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "episode_run_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "director", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "actors", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "genre", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "backdrop_path", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 21, name: "rating", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "duration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "category_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 28, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 31, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vod {
    return new Vod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vod {
    return new Vod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vod {
    return new Vod().fromJsonString(jsonString, options);
  }

  static equals(a: Vod | PlainMessage<Vod> | undefined, b: Vod | PlainMessage<Vod> | undefined): boolean {
    return proto3.util.equals(Vod, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodLink
 */
export class VodLink extends Message<VodLink> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 vid = 2;
   */
  vid = 0;

  /**
   * @generated from field: string link = 3;
   */
  link = "";

  /**
   * @generated from field: int32 episode = 4;
   */
  episode = 0;

  /**
   * @generated from field: int32 season = 5;
   */
  season = 0;

  /**
   * @generated from field: string keyword = 6;
   */
  keyword = "";

  /**
   * @generated from field: int32 class_id = 7;
   */
  classId = 0;

  /**
   * @generated from field: string category_id = 8;
   */
  categoryId = "";

  /**
   * @generated from field: string create_at = 9;
   */
  createAt = "";

  /**
   * @generated from field: string distributor_id = 10;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 11;
   */
  modelId = "";

  /**
   * @generated from field: string content_id = 12;
   */
  contentId = "";

  /**
   * @generated from field: int32 state = 13;
   */
  state = 0;

  constructor(data?: PartialMessage<VodLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "episode", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "season", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "category_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "content_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "state", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodLink {
    return new VodLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodLink {
    return new VodLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodLink {
    return new VodLink().fromJsonString(jsonString, options);
  }

  static equals(a: VodLink | PlainMessage<VodLink> | undefined, b: VodLink | PlainMessage<VodLink> | undefined): boolean {
    return proto3.util.equals(VodLink, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodType
 */
export class VodType extends Message<VodType> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 class_id = 2;
   */
  classId = 0;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string zh_name = 4;
   */
  zhName = "";

  /**
   * @generated from field: int32 sort = 5;
   */
  sort = 0;

  /**
   * @generated from field: bool is_show = 6;
   */
  isShow = false;

  /**
   * @generated from field: string keyword = 7;
   */
  keyword = "";

  constructor(data?: PartialMessage<VodType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "zh_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "is_show", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodType {
    return new VodType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodType {
    return new VodType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodType {
    return new VodType().fromJsonString(jsonString, options);
  }

  static equals(a: VodType | PlainMessage<VodType> | undefined, b: VodType | PlainMessage<VodType> | undefined): boolean {
    return proto3.util.equals(VodType, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodTypeItem
 */
export class VodTypeItem extends Message<VodTypeItem> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 class_id = 2;
   */
  classId = 0;

  /**
   * @generated from field: int32 type_id = 3;
   */
  typeId = 0;

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: int32 sort = 5;
   */
  sort = 0;

  /**
   * @generated from field: bool is_show = 6;
   */
  isShow = false;

  /**
   * @generated from field: string create_type = 7;
   */
  createType = "";

  /**
   * @generated from field: int32 num = 8;
   */
  num = 0;

  constructor(data?: PartialMessage<VodTypeItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodTypeItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "type_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "is_show", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "create_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodTypeItem {
    return new VodTypeItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodTypeItem {
    return new VodTypeItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodTypeItem {
    return new VodTypeItem().fromJsonString(jsonString, options);
  }

  static equals(a: VodTypeItem | PlainMessage<VodTypeItem> | undefined, b: VodTypeItem | PlainMessage<VodTypeItem> | undefined): boolean {
    return proto3.util.equals(VodTypeItem, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodRepeated
 */
export class VodRepeated extends Message<VodRepeated> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 影片名字
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * 分类
   *
   * @generated from field: string category = 3;
   */
  category = "";

  /**
   * class_id
   *
   * @generated from field: int32 vod_type = 4;
   */
  vodType = 0;

  /**
   * 重复次数
   *
   * @generated from field: int32 repeated_count = 5;
   */
  repeatedCount = 0;

  /**
   * 日期
   *
   * @generated from field: string create_at = 6;
   */
  createAt = "";

  /**
   * 类型
   *
   * @generated from field: string class_name = 7;
   */
  className = "";

  constructor(data?: PartialMessage<VodRepeated>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodRepeated";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "vod_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "repeated_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodRepeated {
    return new VodRepeated().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodRepeated {
    return new VodRepeated().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodRepeated {
    return new VodRepeated().fromJsonString(jsonString, options);
  }

  static equals(a: VodRepeated | PlainMessage<VodRepeated> | undefined, b: VodRepeated | PlainMessage<VodRepeated> | undefined): boolean {
    return proto3.util.equals(VodRepeated, a, b);
  }
}

/**
 * @generated from message api.ks.v1.AddressConfig
 */
export class AddressConfig extends Message<AddressConfig> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string url = 2;
   */
  url = "";

  /**
   * @generated from field: string max_connections = 3;
   */
  maxConnections = "";

  /**
   * @generated from field: int32 type = 4;
   */
  type = 0;

  /**
   * @generated from field: string address_type_name = 5;
   */
  addressTypeName = "";

  constructor(data?: PartialMessage<AddressConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.AddressConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "max_connections", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "address_type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressConfig {
    return new AddressConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressConfig {
    return new AddressConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressConfig {
    return new AddressConfig().fromJsonString(jsonString, options);
  }

  static equals(a: AddressConfig | PlainMessage<AddressConfig> | undefined, b: AddressConfig | PlainMessage<AddressConfig> | undefined): boolean {
    return proto3.util.equals(AddressConfig, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Playback
 */
export class Playback extends Message<Playback> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: int32 stream_id = 3;
   */
  streamId = 0;

  /**
   * @generated from field: string epg_channel_id = 4;
   */
  epgChannelId = "";

  /**
   * @generated from field: int32 tv_archive = 5;
   */
  tvArchive = 0;

  /**
   * @generated from field: string create_at = 6;
   */
  createAt = "";

  /**
   * @generated from field: string category_id = 7;
   */
  categoryId = "";

  /**
   * @generated from field: repeated api.ks.v1.Channel channel_list = 8;
   */
  channelList: Channel[] = [];

  constructor(data?: PartialMessage<Playback>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Playback";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stream_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "epg_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tv_archive", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "category_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "channel_list", kind: "message", T: Channel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Playback {
    return new Playback().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Playback {
    return new Playback().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Playback {
    return new Playback().fromJsonString(jsonString, options);
  }

  static equals(a: Playback | PlainMessage<Playback> | undefined, b: Playback | PlainMessage<Playback> | undefined): boolean {
    return proto3.util.equals(Playback, a, b);
  }
}

/**
 * @generated from message api.ks.v1.PlaybackLabel
 */
export class PlaybackLabel extends Message<PlaybackLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<PlaybackLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.PlaybackLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlaybackLabel {
    return new PlaybackLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlaybackLabel {
    return new PlaybackLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlaybackLabel {
    return new PlaybackLabel().fromJsonString(jsonString, options);
  }

  static equals(a: PlaybackLabel | PlainMessage<PlaybackLabel> | undefined, b: PlaybackLabel | PlainMessage<PlaybackLabel> | undefined): boolean {
    return proto3.util.equals(PlaybackLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportDomainInfoLog
 */
export class ImportDomainInfoLog extends Message<ImportDomainInfoLog> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string domain = 2;
   */
  domain = "";

  /**
   * @generated from field: string app = 3;
   */
  app = "";

  /**
   * @generated from field: int32 version = 4;
   */
  version = 0;

  /**
   * @generated from field: string config_data = 5;
   */
  configData = "";

  /**
   * @generated from field: string create_at = 6;
   */
  createAt = "";

  constructor(data?: PartialMessage<ImportDomainInfoLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportDomainInfoLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "config_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "create_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDomainInfoLog {
    return new ImportDomainInfoLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDomainInfoLog {
    return new ImportDomainInfoLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDomainInfoLog {
    return new ImportDomainInfoLog().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDomainInfoLog | PlainMessage<ImportDomainInfoLog> | undefined, b: ImportDomainInfoLog | PlainMessage<ImportDomainInfoLog> | undefined): boolean {
    return proto3.util.equals(ImportDomainInfoLog, a, b);
  }
}

/**
 * @generated from message api.ks.v1.Top10Manager
 */
export class Top10Manager extends Message<Top10Manager> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string distributor_id = 2;
   */
  distributorId = "";

  /**
   * @generated from field: string model_id = 3;
   */
  modelId = "";

  /**
   * @generated from field: int32 combo_id = 4;
   */
  comboId = 0;

  /**
   * @generated from field: int32 created = 5;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 6;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 7;
   */
  deleted = false;

  /**
   * @generated from field: string alias_name = 8;
   */
  aliasName = "";

  /**
   * @generated from field: string distributor_name = 9;
   */
  distributorName = "";

  /**
   * @generated from field: string model_name = 10;
   */
  modelName = "";

  /**
   * @generated from field: string combo_name = 11;
   */
  comboName = "";

  constructor(data?: PartialMessage<Top10Manager>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.Top10Manager";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "alias_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "combo_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Top10Manager {
    return new Top10Manager().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Top10Manager {
    return new Top10Manager().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Top10Manager {
    return new Top10Manager().fromJsonString(jsonString, options);
  }

  static equals(a: Top10Manager | PlainMessage<Top10Manager> | undefined, b: Top10Manager | PlainMessage<Top10Manager> | undefined): boolean {
    return proto3.util.equals(Top10Manager, a, b);
  }
}

/**
 * @generated from message api.ks.v1.VodBanner
 */
export class VodBanner extends Message<VodBanner> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 影片id
   *
   * @generated from field: int32 vid = 2;
   */
  vid = 0;

  /**
   * 排序
   *
   * @generated from field: int32 sort = 3;
   */
  sort = 0;

  /**
   * 图片
   *
   * @generated from field: string pic = 4;
   */
  pic = "";

  /**
   * 分类
   *
   * @generated from field: int32 class_id = 5;
   */
  classId = 0;

  /**
   * 分销商
   *
   * @generated from field: string distributor_id = 6;
   */
  distributorId = "";

  /**
   * 型号
   *
   * @generated from field: string model_id = 7;
   */
  modelId = "";

  /**
   * 创建时间
   *
   * @generated from field: int32 created = 8;
   */
  created = 0;

  /**
   * 更新时间
   *
   * @generated from field: int32 updated = 9;
   */
  updated = 0;

  /**
   * 是否删除  true 是 false 否
   *
   * @generated from field: bool deleted = 10;
   */
  deleted = false;

  /**
   * 分销商名字
   *
   * @generated from field: string distributor_name = 11;
   */
  distributorName = "";

  /**
   * 型号名
   *
   * @generated from field: string model_name = 12;
   */
  modelName = "";

  /**
   * 分类名
   *
   * @generated from field: string class_name = 13;
   */
  className = "";

  /**
   * 影片名
   *
   * @generated from field: string vod_name = 14;
   */
  vodName = "";

  /**
   * @generated from field: string backdrop_path = 15;
   */
  backdropPath = "";

  constructor(data?: PartialMessage<VodBanner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.VodBanner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "pic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "distributor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "vod_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "backdrop_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VodBanner {
    return new VodBanner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VodBanner {
    return new VodBanner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VodBanner {
    return new VodBanner().fromJsonString(jsonString, options);
  }

  static equals(a: VodBanner | PlainMessage<VodBanner> | undefined, b: VodBanner | PlainMessage<VodBanner> | undefined): boolean {
    return proto3.util.equals(VodBanner, a, b);
  }
}

/**
 * @generated from message api.ks.v1.LabelResp
 */
export class LabelResp extends Message<LabelResp> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  constructor(data?: PartialMessage<LabelResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.LabelResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LabelResp {
    return new LabelResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LabelResp {
    return new LabelResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LabelResp {
    return new LabelResp().fromJsonString(jsonString, options);
  }

  static equals(a: LabelResp | PlainMessage<LabelResp> | undefined, b: LabelResp | PlainMessage<LabelResp> | undefined): boolean {
    return proto3.util.equals(LabelResp, a, b);
  }
}

/**
 * @generated from message api.ks.v1.AddressType
 */
export class AddressType extends Message<AddressType> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<AddressType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.AddressType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressType {
    return new AddressType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressType {
    return new AddressType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressType {
    return new AddressType().fromJsonString(jsonString, options);
  }

  static equals(a: AddressType | PlainMessage<AddressType> | undefined, b: AddressType | PlainMessage<AddressType> | undefined): boolean {
    return proto3.util.equals(AddressType, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ClassData
 */
export class ClassData extends Message<ClassData> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: int32 sort = 3;
   */
  sort = 0;

  /**
   * @generated from field: string category = 4;
   */
  category = "";

  /**
   * @generated from field: int32 created = 5;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 6;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 7;
   */
  deleted = false;

  /**
   * @generated from field: string multi_lang = 8;
   */
  multiLang = "";

  /**
   * @generated from field: int32 mowo_class_id = 9;
   */
  mowoClassId = 0;

  /**
   * @generated from field: string content = 10;
   */
  content = "";

  constructor(data?: PartialMessage<ClassData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ClassData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "multi_lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "mowo_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassData {
    return new ClassData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassData {
    return new ClassData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassData {
    return new ClassData().fromJsonString(jsonString, options);
  }

  static equals(a: ClassData | PlainMessage<ClassData> | undefined, b: ClassData | PlainMessage<ClassData> | undefined): boolean {
    return proto3.util.equals(ClassData, a, b);
  }
}

/**
 * @generated from message api.ks.v1.MowoClass
 */
export class MowoClass extends Message<MowoClass> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: int32 sort = 3;
   */
  sort = 0;

  /**
   * @generated from field: int32 combo_id = 4;
   */
  comboId = 0;

  /**
   * @generated from field: int32 created = 5;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 6;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 7;
   */
  deleted = false;

  /**
   * @generated from field: string price = 8;
   */
  price = "";

  /**
   * @generated from field: string identity = 9;
   */
  identity = "";

  /**
   * @generated from field: string description = 10;
   */
  description = "";

  /**
   * @generated from field: string combo_name = 11;
   */
  comboName = "";

  constructor(data?: PartialMessage<MowoClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.MowoClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "identity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "combo_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MowoClass {
    return new MowoClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MowoClass {
    return new MowoClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MowoClass {
    return new MowoClass().fromJsonString(jsonString, options);
  }

  static equals(a: MowoClass | PlainMessage<MowoClass> | undefined, b: MowoClass | PlainMessage<MowoClass> | undefined): boolean {
    return proto3.util.equals(MowoClass, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ClassResource
 */
export class ClassResource extends Message<ClassResource> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * 资源id
   *
   * @generated from field: int32 resource_id = 2;
   */
  resourceId = 0;

  /**
   * 类型
   *
   * @generated from field: string category = 3;
   */
  category = "";

  /**
   * 分类id
   *
   * @generated from field: int32 class_id = 4;
   */
  classId = 0;

  /**
   * @generated from field: string banner_img = 5;
   */
  bannerImg = "";

  /**
   * 资源名称
   *
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * 资源图片
   *
   * @generated from field: string img = 7;
   */
  img = "";

  /**
   * @generated from field: int32 created = 8;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 9;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 10;
   */
  deleted = false;

  /**
   * @generated from field: int32 sort = 11;
   */
  sort = 0;

  constructor(data?: PartialMessage<ClassResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ClassResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "resource_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "banner_img", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "img", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "sort", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassResource {
    return new ClassResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassResource {
    return new ClassResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassResource {
    return new ClassResource().fromJsonString(jsonString, options);
  }

  static equals(a: ClassResource | PlainMessage<ClassResource> | undefined, b: ClassResource | PlainMessage<ClassResource> | undefined): boolean {
    return proto3.util.equals(ClassResource, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ClassResourceLabel
 */
export class ClassResourceLabel extends Message<ClassResourceLabel> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: string img = 4;
   */
  img = "";

  constructor(data?: PartialMessage<ClassResourceLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ClassResourceLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "img", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassResourceLabel {
    return new ClassResourceLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassResourceLabel {
    return new ClassResourceLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassResourceLabel {
    return new ClassResourceLabel().fromJsonString(jsonString, options);
  }

  static equals(a: ClassResourceLabel | PlainMessage<ClassResourceLabel> | undefined, b: ClassResourceLabel | PlainMessage<ClassResourceLabel> | undefined): boolean {
    return proto3.util.equals(ClassResourceLabel, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportVodLinkLog
 */
export class ImportVodLinkLog extends Message<ImportVodLinkLog> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 vod_link_id = 2;
   */
  vodLinkId = 0;

  /**
   * @generated from field: string task_id = 3;
   */
  taskId = "";

  /**
   * @generated from field: int32 state = 4;
   */
  state = 0;

  /**
   * @generated from field: string import_data = 5;
   */
  importData = "";

  /**
   * @generated from field: string af = 6;
   */
  af = "";

  /**
   * @generated from field: string vf = 7;
   */
  vf = "";

  /**
   * @generated from field: int32 bandwidth = 8;
   */
  bandwidth = 0;

  /**
   * @generated from field: string content_id = 9;
   */
  contentId = "";

  /**
   * @generated from field: int32 duration = 10;
   */
  duration = 0;

  /**
   * @generated from field: int32 height = 11;
   */
  height = 0;

  /**
   * @generated from field: int32 wight = 12;
   */
  wight = 0;

  /**
   * @generated from field: int32 created = 13;
   */
  created = 0;

  /**
   * @generated from field: int32 updated = 14;
   */
  updated = 0;

  /**
   * @generated from field: bool deleted = 15;
   */
  deleted = false;

  /**
   * @generated from field: string error = 16;
   */
  error = "";

  /**
   * @generated from field: int32 status = 17;
   */
  status = 0;

  constructor(data?: PartialMessage<ImportVodLinkLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportVodLinkLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "vod_link_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "task_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "state", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "import_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "af", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "vf", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "bandwidth", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "content_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "duration", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "height", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "wight", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "updated", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportVodLinkLog {
    return new ImportVodLinkLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportVodLinkLog {
    return new ImportVodLinkLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportVodLinkLog {
    return new ImportVodLinkLog().fromJsonString(jsonString, options);
  }

  static equals(a: ImportVodLinkLog | PlainMessage<ImportVodLinkLog> | undefined, b: ImportVodLinkLog | PlainMessage<ImportVodLinkLog> | undefined): boolean {
    return proto3.util.equals(ImportVodLinkLog, a, b);
  }
}

/**
 * @generated from message api.ks.v1.LiveMonitorLog
 */
export class LiveMonitorLog extends Message<LiveMonitorLog> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string channel_name = 2;
   */
  channelName = "";

  /**
   * @generated from field: string link = 3;
   */
  link = "";

  /**
   * @generated from field: int32 created = 4;
   */
  created = 0;

  /**
   * @generated from field: int32 rid = 5;
   */
  rid = 0;

  constructor(data?: PartialMessage<LiveMonitorLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.LiveMonitorLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "channel_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "rid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LiveMonitorLog {
    return new LiveMonitorLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LiveMonitorLog {
    return new LiveMonitorLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LiveMonitorLog {
    return new LiveMonitorLog().fromJsonString(jsonString, options);
  }

  static equals(a: LiveMonitorLog | PlainMessage<LiveMonitorLog> | undefined, b: LiveMonitorLog | PlainMessage<LiveMonitorLog> | undefined): boolean {
    return proto3.util.equals(LiveMonitorLog, a, b);
  }
}

/**
 * @generated from message api.ks.v1.LiveMonitorImage
 */
export class LiveMonitorImage extends Message<LiveMonitorImage> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: int32 lid = 2;
   */
  lid = 0;

  /**
   * @generated from field: string image = 3;
   */
  image = "";

  /**
   * @generated from field: int32 created = 4;
   */
  created = 0;

  constructor(data?: PartialMessage<LiveMonitorImage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.LiveMonitorImage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "lid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LiveMonitorImage {
    return new LiveMonitorImage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LiveMonitorImage {
    return new LiveMonitorImage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LiveMonitorImage {
    return new LiveMonitorImage().fromJsonString(jsonString, options);
  }

  static equals(a: LiveMonitorImage | PlainMessage<LiveMonitorImage> | undefined, b: LiveMonitorImage | PlainMessage<LiveMonitorImage> | undefined): boolean {
    return proto3.util.equals(LiveMonitorImage, a, b);
  }
}

/**
 * @generated from message api.ks.v1.LiveMonitorRecord
 */
export class LiveMonitorRecord extends Message<LiveMonitorRecord> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string filename = 3;
   */
  filename = "";

  /**
   * @generated from field: int32 created = 4;
   */
  created = 0;

  /**
   * @generated from field: bool deleted = 5;
   */
  deleted = false;

  /**
   * @generated from field: int32 update_at = 6;
   */
  updateAt = 0;

  constructor(data?: PartialMessage<LiveMonitorRecord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.LiveMonitorRecord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filename", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "update_at", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LiveMonitorRecord {
    return new LiveMonitorRecord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LiveMonitorRecord {
    return new LiveMonitorRecord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LiveMonitorRecord {
    return new LiveMonitorRecord().fromJsonString(jsonString, options);
  }

  static equals(a: LiveMonitorRecord | PlainMessage<LiveMonitorRecord> | undefined, b: LiveMonitorRecord | PlainMessage<LiveMonitorRecord> | undefined): boolean {
    return proto3.util.equals(LiveMonitorRecord, a, b);
  }
}

/**
 * @generated from message api.ks.v1.LiveMonitorImageList
 */
export class LiveMonitorImageList extends Message<LiveMonitorImageList> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string content = 2;
   */
  content = "";

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: int32 sub_title = 4;
   */
  subTitle = 0;

  /**
   * @generated from field: int32 count = 5;
   */
  count = 0;

  /**
   * @generated from field: string file_name = 6;
   */
  fileName = "";

  /**
   * @generated from field: int32 rid = 7;
   */
  rid = 0;

  constructor(data?: PartialMessage<LiveMonitorImageList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.LiveMonitorImageList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sub_title", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "rid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LiveMonitorImageList {
    return new LiveMonitorImageList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LiveMonitorImageList {
    return new LiveMonitorImageList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LiveMonitorImageList {
    return new LiveMonitorImageList().fromJsonString(jsonString, options);
  }

  static equals(a: LiveMonitorImageList | PlainMessage<LiveMonitorImageList> | undefined, b: LiveMonitorImageList | PlainMessage<LiveMonitorImageList> | undefined): boolean {
    return proto3.util.equals(LiveMonitorImageList, a, b);
  }
}

