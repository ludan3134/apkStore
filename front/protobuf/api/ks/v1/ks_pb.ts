// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file api/ks/v1/ks.proto (package api.ks.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { CommonMeta, PageMeta } from "../../com/v1/pagemeta_pb.ts";
import { AddressConfig, Channel, ChannelLabel, ClassData, ClassResource, ClassResourceLabel, Epg, EpgLabel, ImportDomainInfoLog, LabelResp, Link, LiveMonitorImageList, LiveMonitorRecord, MacAccount, MainClass, MajorEvent, MajorEventInfo, MowoClass, Playback, PlaybackLabel, SubClass, Top10Manager, Vod, VodBanner, VodClass, VodClassLabel, VodLink, VodRepeated, VodType, VodTypeItem, XstreamCombo, XstreamComboValueLabel, XstreamResource, XstreamResourceValueLabel } from "./km_pb.ts";

/**
 * @generated from message api.ks.v1.QueryMajorEventListRequest
 */
export class QueryMajorEventListRequest extends Message<QueryMajorEventListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.com.v1.CommonMeta common_meta = 4;
   */
  commonMeta?: CommonMeta;

  constructor(data?: PartialMessage<QueryMajorEventListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMajorEventListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "common_meta", kind: "message", T: CommonMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMajorEventListRequest {
    return new QueryMajorEventListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMajorEventListRequest {
    return new QueryMajorEventListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMajorEventListRequest {
    return new QueryMajorEventListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMajorEventListRequest | PlainMessage<QueryMajorEventListRequest> | undefined, b: QueryMajorEventListRequest | PlainMessage<QueryMajorEventListRequest> | undefined): boolean {
    return proto3.util.equals(QueryMajorEventListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMajorEventListResponse
 */
export class QueryMajorEventListResponse extends Message<QueryMajorEventListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.MajorEvent major_event_list = 6;
   */
  majorEventList: MajorEvent[] = [];

  constructor(data?: PartialMessage<QueryMajorEventListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMajorEventListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "major_event_list", kind: "message", T: MajorEvent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMajorEventListResponse {
    return new QueryMajorEventListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMajorEventListResponse {
    return new QueryMajorEventListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMajorEventListResponse {
    return new QueryMajorEventListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMajorEventListResponse | PlainMessage<QueryMajorEventListResponse> | undefined, b: QueryMajorEventListResponse | PlainMessage<QueryMajorEventListResponse> | undefined): boolean {
    return proto3.util.equals(QueryMajorEventListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMajorEventRequest
 */
export class InsertMajorEventRequest extends Message<InsertMajorEventRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MajorEvent major_event = 3;
   */
  majorEvent?: MajorEvent;

  constructor(data?: PartialMessage<InsertMajorEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMajorEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "major_event", kind: "message", T: MajorEvent },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMajorEventRequest {
    return new InsertMajorEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMajorEventRequest {
    return new InsertMajorEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMajorEventRequest {
    return new InsertMajorEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMajorEventRequest | PlainMessage<InsertMajorEventRequest> | undefined, b: InsertMajorEventRequest | PlainMessage<InsertMajorEventRequest> | undefined): boolean {
    return proto3.util.equals(InsertMajorEventRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMajorEventResponse
 */
export class InsertMajorEventResponse extends Message<InsertMajorEventResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertMajorEventResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMajorEventResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMajorEventResponse {
    return new InsertMajorEventResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMajorEventResponse {
    return new InsertMajorEventResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMajorEventResponse {
    return new InsertMajorEventResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMajorEventResponse | PlainMessage<InsertMajorEventResponse> | undefined, b: InsertMajorEventResponse | PlainMessage<InsertMajorEventResponse> | undefined): boolean {
    return proto3.util.equals(InsertMajorEventResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMajorEventRequest
 */
export class UpdateMajorEventRequest extends Message<UpdateMajorEventRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MajorEvent major_event = 3;
   */
  majorEvent?: MajorEvent;

  constructor(data?: PartialMessage<UpdateMajorEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMajorEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "major_event", kind: "message", T: MajorEvent },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMajorEventRequest {
    return new UpdateMajorEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMajorEventRequest {
    return new UpdateMajorEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMajorEventRequest {
    return new UpdateMajorEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMajorEventRequest | PlainMessage<UpdateMajorEventRequest> | undefined, b: UpdateMajorEventRequest | PlainMessage<UpdateMajorEventRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMajorEventRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMajorEventResponse
 */
export class UpdateMajorEventResponse extends Message<UpdateMajorEventResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateMajorEventResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMajorEventResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMajorEventResponse {
    return new UpdateMajorEventResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMajorEventResponse {
    return new UpdateMajorEventResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMajorEventResponse {
    return new UpdateMajorEventResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMajorEventResponse | PlainMessage<UpdateMajorEventResponse> | undefined, b: UpdateMajorEventResponse | PlainMessage<UpdateMajorEventResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMajorEventResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryXstreamResourceListRequest
 */
export class QueryXstreamResourceListRequest extends Message<QueryXstreamResourceListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.XstreamResource xstream_resource = 4;
   */
  xstreamResource?: XstreamResource;

  constructor(data?: PartialMessage<QueryXstreamResourceListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryXstreamResourceListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "xstream_resource", kind: "message", T: XstreamResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryXstreamResourceListRequest {
    return new QueryXstreamResourceListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryXstreamResourceListRequest {
    return new QueryXstreamResourceListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryXstreamResourceListRequest {
    return new QueryXstreamResourceListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryXstreamResourceListRequest | PlainMessage<QueryXstreamResourceListRequest> | undefined, b: QueryXstreamResourceListRequest | PlainMessage<QueryXstreamResourceListRequest> | undefined): boolean {
    return proto3.util.equals(QueryXstreamResourceListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryXstreamResourceListResponse
 */
export class QueryXstreamResourceListResponse extends Message<QueryXstreamResourceListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.XstreamResource xstream_resource_list = 6;
   */
  xstreamResourceList: XstreamResource[] = [];

  constructor(data?: PartialMessage<QueryXstreamResourceListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryXstreamResourceListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "xstream_resource_list", kind: "message", T: XstreamResource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryXstreamResourceListResponse {
    return new QueryXstreamResourceListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryXstreamResourceListResponse {
    return new QueryXstreamResourceListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryXstreamResourceListResponse {
    return new QueryXstreamResourceListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryXstreamResourceListResponse | PlainMessage<QueryXstreamResourceListResponse> | undefined, b: QueryXstreamResourceListResponse | PlainMessage<QueryXstreamResourceListResponse> | undefined): boolean {
    return proto3.util.equals(QueryXstreamResourceListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertXstreamResourceRequest
 */
export class InsertXstreamResourceRequest extends Message<InsertXstreamResourceRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.XstreamResource xstream_resource = 3;
   */
  xstreamResource?: XstreamResource;

  constructor(data?: PartialMessage<InsertXstreamResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertXstreamResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "xstream_resource", kind: "message", T: XstreamResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertXstreamResourceRequest {
    return new InsertXstreamResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertXstreamResourceRequest {
    return new InsertXstreamResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertXstreamResourceRequest {
    return new InsertXstreamResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertXstreamResourceRequest | PlainMessage<InsertXstreamResourceRequest> | undefined, b: InsertXstreamResourceRequest | PlainMessage<InsertXstreamResourceRequest> | undefined): boolean {
    return proto3.util.equals(InsertXstreamResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertXstreamResourceResponse
 */
export class InsertXstreamResourceResponse extends Message<InsertXstreamResourceResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertXstreamResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertXstreamResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertXstreamResourceResponse {
    return new InsertXstreamResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertXstreamResourceResponse {
    return new InsertXstreamResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertXstreamResourceResponse {
    return new InsertXstreamResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertXstreamResourceResponse | PlainMessage<InsertXstreamResourceResponse> | undefined, b: InsertXstreamResourceResponse | PlainMessage<InsertXstreamResourceResponse> | undefined): boolean {
    return proto3.util.equals(InsertXstreamResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateXstreamResourceRequest
 */
export class UpdateXstreamResourceRequest extends Message<UpdateXstreamResourceRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.XstreamResource xstream_resource = 3;
   */
  xstreamResource?: XstreamResource;

  constructor(data?: PartialMessage<UpdateXstreamResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateXstreamResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "xstream_resource", kind: "message", T: XstreamResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateXstreamResourceRequest {
    return new UpdateXstreamResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateXstreamResourceRequest {
    return new UpdateXstreamResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateXstreamResourceRequest {
    return new UpdateXstreamResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateXstreamResourceRequest | PlainMessage<UpdateXstreamResourceRequest> | undefined, b: UpdateXstreamResourceRequest | PlainMessage<UpdateXstreamResourceRequest> | undefined): boolean {
    return proto3.util.equals(UpdateXstreamResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateXstreamResourceResponse
 */
export class UpdateXstreamResourceResponse extends Message<UpdateXstreamResourceResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateXstreamResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateXstreamResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateXstreamResourceResponse {
    return new UpdateXstreamResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateXstreamResourceResponse {
    return new UpdateXstreamResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateXstreamResourceResponse {
    return new UpdateXstreamResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateXstreamResourceResponse | PlainMessage<UpdateXstreamResourceResponse> | undefined, b: UpdateXstreamResourceResponse | PlainMessage<UpdateXstreamResourceResponse> | undefined): boolean {
    return proto3.util.equals(UpdateXstreamResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllXstreamResourceRequest
 */
export class QueryAllXstreamResourceRequest extends Message<QueryAllXstreamResourceRequest> {
  constructor(data?: PartialMessage<QueryAllXstreamResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllXstreamResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllXstreamResourceRequest {
    return new QueryAllXstreamResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllXstreamResourceRequest {
    return new QueryAllXstreamResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllXstreamResourceRequest {
    return new QueryAllXstreamResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllXstreamResourceRequest | PlainMessage<QueryAllXstreamResourceRequest> | undefined, b: QueryAllXstreamResourceRequest | PlainMessage<QueryAllXstreamResourceRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllXstreamResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllXstreamResourceResponse
 */
export class QueryAllXstreamResourceResponse extends Message<QueryAllXstreamResourceResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.XstreamResourceValueLabel xstream_resource_list = 3;
   */
  xstreamResourceList: XstreamResourceValueLabel[] = [];

  constructor(data?: PartialMessage<QueryAllXstreamResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllXstreamResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "xstream_resource_list", kind: "message", T: XstreamResourceValueLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllXstreamResourceResponse {
    return new QueryAllXstreamResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllXstreamResourceResponse {
    return new QueryAllXstreamResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllXstreamResourceResponse {
    return new QueryAllXstreamResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllXstreamResourceResponse | PlainMessage<QueryAllXstreamResourceResponse> | undefined, b: QueryAllXstreamResourceResponse | PlainMessage<QueryAllXstreamResourceResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllXstreamResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryXstreamComboListRequest
 */
export class QueryXstreamComboListRequest extends Message<QueryXstreamComboListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.XstreamCombo xstream_combo = 4;
   */
  xstreamCombo?: XstreamCombo;

  constructor(data?: PartialMessage<QueryXstreamComboListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryXstreamComboListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "xstream_combo", kind: "message", T: XstreamCombo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryXstreamComboListRequest {
    return new QueryXstreamComboListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryXstreamComboListRequest {
    return new QueryXstreamComboListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryXstreamComboListRequest {
    return new QueryXstreamComboListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryXstreamComboListRequest | PlainMessage<QueryXstreamComboListRequest> | undefined, b: QueryXstreamComboListRequest | PlainMessage<QueryXstreamComboListRequest> | undefined): boolean {
    return proto3.util.equals(QueryXstreamComboListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryXstreamComboListResponse
 */
export class QueryXstreamComboListResponse extends Message<QueryXstreamComboListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.XstreamCombo xstream_combo_list = 6;
   */
  xstreamComboList: XstreamCombo[] = [];

  constructor(data?: PartialMessage<QueryXstreamComboListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryXstreamComboListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "xstream_combo_list", kind: "message", T: XstreamCombo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryXstreamComboListResponse {
    return new QueryXstreamComboListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryXstreamComboListResponse {
    return new QueryXstreamComboListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryXstreamComboListResponse {
    return new QueryXstreamComboListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryXstreamComboListResponse | PlainMessage<QueryXstreamComboListResponse> | undefined, b: QueryXstreamComboListResponse | PlainMessage<QueryXstreamComboListResponse> | undefined): boolean {
    return proto3.util.equals(QueryXstreamComboListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertXstreamComboRequest
 */
export class InsertXstreamComboRequest extends Message<InsertXstreamComboRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.XstreamCombo xstream_combo = 3;
   */
  xstreamCombo?: XstreamCombo;

  constructor(data?: PartialMessage<InsertXstreamComboRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertXstreamComboRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "xstream_combo", kind: "message", T: XstreamCombo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertXstreamComboRequest {
    return new InsertXstreamComboRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertXstreamComboRequest {
    return new InsertXstreamComboRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertXstreamComboRequest {
    return new InsertXstreamComboRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertXstreamComboRequest | PlainMessage<InsertXstreamComboRequest> | undefined, b: InsertXstreamComboRequest | PlainMessage<InsertXstreamComboRequest> | undefined): boolean {
    return proto3.util.equals(InsertXstreamComboRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertXstreamComboResponse
 */
export class InsertXstreamComboResponse extends Message<InsertXstreamComboResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertXstreamComboResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertXstreamComboResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertXstreamComboResponse {
    return new InsertXstreamComboResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertXstreamComboResponse {
    return new InsertXstreamComboResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertXstreamComboResponse {
    return new InsertXstreamComboResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertXstreamComboResponse | PlainMessage<InsertXstreamComboResponse> | undefined, b: InsertXstreamComboResponse | PlainMessage<InsertXstreamComboResponse> | undefined): boolean {
    return proto3.util.equals(InsertXstreamComboResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateXstreamComboRequest
 */
export class UpdateXstreamComboRequest extends Message<UpdateXstreamComboRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.XstreamCombo xstream_combo = 3;
   */
  xstreamCombo?: XstreamCombo;

  constructor(data?: PartialMessage<UpdateXstreamComboRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateXstreamComboRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "xstream_combo", kind: "message", T: XstreamCombo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateXstreamComboRequest {
    return new UpdateXstreamComboRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateXstreamComboRequest {
    return new UpdateXstreamComboRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateXstreamComboRequest {
    return new UpdateXstreamComboRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateXstreamComboRequest | PlainMessage<UpdateXstreamComboRequest> | undefined, b: UpdateXstreamComboRequest | PlainMessage<UpdateXstreamComboRequest> | undefined): boolean {
    return proto3.util.equals(UpdateXstreamComboRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateXstreamComboResponse
 */
export class UpdateXstreamComboResponse extends Message<UpdateXstreamComboResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateXstreamComboResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateXstreamComboResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateXstreamComboResponse {
    return new UpdateXstreamComboResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateXstreamComboResponse {
    return new UpdateXstreamComboResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateXstreamComboResponse {
    return new UpdateXstreamComboResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateXstreamComboResponse | PlainMessage<UpdateXstreamComboResponse> | undefined, b: UpdateXstreamComboResponse | PlainMessage<UpdateXstreamComboResponse> | undefined): boolean {
    return proto3.util.equals(UpdateXstreamComboResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllXstreamComboRequest
 */
export class QueryAllXstreamComboRequest extends Message<QueryAllXstreamComboRequest> {
  constructor(data?: PartialMessage<QueryAllXstreamComboRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllXstreamComboRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllXstreamComboRequest {
    return new QueryAllXstreamComboRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllXstreamComboRequest {
    return new QueryAllXstreamComboRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllXstreamComboRequest {
    return new QueryAllXstreamComboRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllXstreamComboRequest | PlainMessage<QueryAllXstreamComboRequest> | undefined, b: QueryAllXstreamComboRequest | PlainMessage<QueryAllXstreamComboRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllXstreamComboRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllXstreamComboResponse
 */
export class QueryAllXstreamComboResponse extends Message<QueryAllXstreamComboResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.XstreamComboValueLabel xstream_combo_list = 3;
   */
  xstreamComboList: XstreamComboValueLabel[] = [];

  constructor(data?: PartialMessage<QueryAllXstreamComboResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllXstreamComboResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "xstream_combo_list", kind: "message", T: XstreamComboValueLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllXstreamComboResponse {
    return new QueryAllXstreamComboResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllXstreamComboResponse {
    return new QueryAllXstreamComboResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllXstreamComboResponse {
    return new QueryAllXstreamComboResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllXstreamComboResponse | PlainMessage<QueryAllXstreamComboResponse> | undefined, b: QueryAllXstreamComboResponse | PlainMessage<QueryAllXstreamComboResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllXstreamComboResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ExportMacAccountListRequest
 */
export class ExportMacAccountListRequest extends Message<ExportMacAccountListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MacAccount mac_account = 4;
   */
  macAccount?: MacAccount;

  constructor(data?: PartialMessage<ExportMacAccountListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ExportMacAccountListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "mac_account", kind: "message", T: MacAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportMacAccountListRequest {
    return new ExportMacAccountListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportMacAccountListRequest {
    return new ExportMacAccountListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportMacAccountListRequest {
    return new ExportMacAccountListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExportMacAccountListRequest | PlainMessage<ExportMacAccountListRequest> | undefined, b: ExportMacAccountListRequest | PlainMessage<ExportMacAccountListRequest> | undefined): boolean {
    return proto3.util.equals(ExportMacAccountListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ExportMacAccountListResponse
 */
export class ExportMacAccountListResponse extends Message<ExportMacAccountListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: string path = 5;
   */
  path = "";

  constructor(data?: PartialMessage<ExportMacAccountListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ExportMacAccountListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportMacAccountListResponse {
    return new ExportMacAccountListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportMacAccountListResponse {
    return new ExportMacAccountListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportMacAccountListResponse {
    return new ExportMacAccountListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExportMacAccountListResponse | PlainMessage<ExportMacAccountListResponse> | undefined, b: ExportMacAccountListResponse | PlainMessage<ExportMacAccountListResponse> | undefined): boolean {
    return proto3.util.equals(ExportMacAccountListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMacAccountListRequest
 */
export class QueryMacAccountListRequest extends Message<QueryMacAccountListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.MacAccount mac_account = 4;
   */
  macAccount?: MacAccount;

  constructor(data?: PartialMessage<QueryMacAccountListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMacAccountListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "mac_account", kind: "message", T: MacAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMacAccountListRequest {
    return new QueryMacAccountListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMacAccountListRequest {
    return new QueryMacAccountListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMacAccountListRequest {
    return new QueryMacAccountListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMacAccountListRequest | PlainMessage<QueryMacAccountListRequest> | undefined, b: QueryMacAccountListRequest | PlainMessage<QueryMacAccountListRequest> | undefined): boolean {
    return proto3.util.equals(QueryMacAccountListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMacAccountListResponse
 */
export class QueryMacAccountListResponse extends Message<QueryMacAccountListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.MacAccount mac_account_list = 6;
   */
  macAccountList: MacAccount[] = [];

  constructor(data?: PartialMessage<QueryMacAccountListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMacAccountListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "mac_account_list", kind: "message", T: MacAccount, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMacAccountListResponse {
    return new QueryMacAccountListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMacAccountListResponse {
    return new QueryMacAccountListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMacAccountListResponse {
    return new QueryMacAccountListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMacAccountListResponse | PlainMessage<QueryMacAccountListResponse> | undefined, b: QueryMacAccountListResponse | PlainMessage<QueryMacAccountListResponse> | undefined): boolean {
    return proto3.util.equals(QueryMacAccountListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMacAccountRequest
 */
export class InsertMacAccountRequest extends Message<InsertMacAccountRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MacAccount mac_account = 3;
   */
  macAccount?: MacAccount;

  constructor(data?: PartialMessage<InsertMacAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMacAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_account", kind: "message", T: MacAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMacAccountRequest {
    return new InsertMacAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMacAccountRequest {
    return new InsertMacAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMacAccountRequest {
    return new InsertMacAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMacAccountRequest | PlainMessage<InsertMacAccountRequest> | undefined, b: InsertMacAccountRequest | PlainMessage<InsertMacAccountRequest> | undefined): boolean {
    return proto3.util.equals(InsertMacAccountRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMacAccountResponse
 */
export class InsertMacAccountResponse extends Message<InsertMacAccountResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertMacAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMacAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMacAccountResponse {
    return new InsertMacAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMacAccountResponse {
    return new InsertMacAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMacAccountResponse {
    return new InsertMacAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMacAccountResponse | PlainMessage<InsertMacAccountResponse> | undefined, b: InsertMacAccountResponse | PlainMessage<InsertMacAccountResponse> | undefined): boolean {
    return proto3.util.equals(InsertMacAccountResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMacAccountRequest
 */
export class UpdateMacAccountRequest extends Message<UpdateMacAccountRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MacAccount mac_account = 3;
   */
  macAccount?: MacAccount;

  constructor(data?: PartialMessage<UpdateMacAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMacAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac_account", kind: "message", T: MacAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMacAccountRequest {
    return new UpdateMacAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMacAccountRequest {
    return new UpdateMacAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMacAccountRequest {
    return new UpdateMacAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMacAccountRequest | PlainMessage<UpdateMacAccountRequest> | undefined, b: UpdateMacAccountRequest | PlainMessage<UpdateMacAccountRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMacAccountRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMacAccountResponse
 */
export class UpdateMacAccountResponse extends Message<UpdateMacAccountResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateMacAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMacAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMacAccountResponse {
    return new UpdateMacAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMacAccountResponse {
    return new UpdateMacAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMacAccountResponse {
    return new UpdateMacAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMacAccountResponse | PlainMessage<UpdateMacAccountResponse> | undefined, b: UpdateMacAccountResponse | PlainMessage<UpdateMacAccountResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMacAccountResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMajorEventInfoRequest
 */
export class QueryMajorEventInfoRequest extends Message<QueryMajorEventInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string timezone = 3;
   */
  timezone = "";

  /**
   * @generated from field: string day = 4;
   */
  day = "";

  constructor(data?: PartialMessage<QueryMajorEventInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMajorEventInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "day", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMajorEventInfoRequest {
    return new QueryMajorEventInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMajorEventInfoRequest {
    return new QueryMajorEventInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMajorEventInfoRequest {
    return new QueryMajorEventInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMajorEventInfoRequest | PlainMessage<QueryMajorEventInfoRequest> | undefined, b: QueryMajorEventInfoRequest | PlainMessage<QueryMajorEventInfoRequest> | undefined): boolean {
    return proto3.util.equals(QueryMajorEventInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMajorEventInfoResponse
 */
export class QueryMajorEventInfoResponse extends Message<QueryMajorEventInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.MajorEventInfo list = 5;
   */
  list: MajorEventInfo[] = [];

  constructor(data?: PartialMessage<QueryMajorEventInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMajorEventInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "list", kind: "message", T: MajorEventInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMajorEventInfoResponse {
    return new QueryMajorEventInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMajorEventInfoResponse {
    return new QueryMajorEventInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMajorEventInfoResponse {
    return new QueryMajorEventInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMajorEventInfoResponse | PlainMessage<QueryMajorEventInfoResponse> | undefined, b: QueryMajorEventInfoResponse | PlainMessage<QueryMajorEventInfoResponse> | undefined): boolean {
    return proto3.util.equals(QueryMajorEventInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMacAccountInfoRequest
 */
export class GetMacAccountInfoRequest extends Message<GetMacAccountInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 3;
   */
  mac = "";

  /**
   * @generated from field: int32 usage = 4;
   */
  usage = 0;

  /**
   * @generated from field: string class_name = 5;
   */
  className = "";

  constructor(data?: PartialMessage<GetMacAccountInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMacAccountInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "usage", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMacAccountInfoRequest {
    return new GetMacAccountInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMacAccountInfoRequest {
    return new GetMacAccountInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMacAccountInfoRequest {
    return new GetMacAccountInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMacAccountInfoRequest | PlainMessage<GetMacAccountInfoRequest> | undefined, b: GetMacAccountInfoRequest | PlainMessage<GetMacAccountInfoRequest> | undefined): boolean {
    return proto3.util.equals(GetMacAccountInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMacAccountInfoResponse
 */
export class GetMacAccountInfoResponse extends Message<GetMacAccountInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.ks.v1.MacAccount mac_account = 5;
   */
  macAccount?: MacAccount;

  /**
   * @generated from field: int32 error_code = 6;
   */
  errorCode = 0;

  constructor(data?: PartialMessage<GetMacAccountInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMacAccountInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "mac_account", kind: "message", T: MacAccount },
    { no: 6, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMacAccountInfoResponse {
    return new GetMacAccountInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMacAccountInfoResponse {
    return new GetMacAccountInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMacAccountInfoResponse {
    return new GetMacAccountInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMacAccountInfoResponse | PlainMessage<GetMacAccountInfoResponse> | undefined, b: GetMacAccountInfoResponse | PlainMessage<GetMacAccountInfoResponse> | undefined): boolean {
    return proto3.util.equals(GetMacAccountInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CheckAccountRequest
 */
export class CheckAccountRequest extends Message<CheckAccountRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 3;
   */
  mac = "";

  /**
   * @generated from field: string username = 4;
   */
  username = "";

  /**
   * @generated from field: string password = 5;
   */
  password = "";

  /**
   * @generated from field: int32 usage = 6;
   */
  usage = 0;

  /**
   * @generated from field: string class_name = 7;
   */
  className = "";

  constructor(data?: PartialMessage<CheckAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CheckAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "usage", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckAccountRequest {
    return new CheckAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckAccountRequest {
    return new CheckAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckAccountRequest {
    return new CheckAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CheckAccountRequest | PlainMessage<CheckAccountRequest> | undefined, b: CheckAccountRequest | PlainMessage<CheckAccountRequest> | undefined): boolean {
    return proto3.util.equals(CheckAccountRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CheckAccountResponse
 */
export class CheckAccountResponse extends Message<CheckAccountResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: bytes data = 5;
   */
  data = new Uint8Array(0);

  /**
   * @generated from field: int32 error_code = 6;
   */
  errorCode = 0;

  constructor(data?: PartialMessage<CheckAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CheckAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckAccountResponse {
    return new CheckAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckAccountResponse {
    return new CheckAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckAccountResponse {
    return new CheckAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CheckAccountResponse | PlainMessage<CheckAccountResponse> | undefined, b: CheckAccountResponse | PlainMessage<CheckAccountResponse> | undefined): boolean {
    return proto3.util.equals(CheckAccountResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetLiveListRequest
 */
export class GetLiveListRequest extends Message<GetLiveListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 3;
   */
  mac = "";

  /**
   * @generated from field: string version = 4;
   */
  version = "";

  /**
   * @generated from field: string combo = 5;
   */
  combo = "";

  /**
   * @generated from field: string class_name = 6;
   */
  className = "";

  constructor(data?: PartialMessage<GetLiveListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetLiveListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "combo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLiveListRequest {
    return new GetLiveListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLiveListRequest {
    return new GetLiveListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLiveListRequest {
    return new GetLiveListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetLiveListRequest | PlainMessage<GetLiveListRequest> | undefined, b: GetLiveListRequest | PlainMessage<GetLiveListRequest> | undefined): boolean {
    return proto3.util.equals(GetLiveListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetLiveListResponse
 */
export class GetLiveListResponse extends Message<GetLiveListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: string live_data = 6;
   */
  liveData = "";

  constructor(data?: PartialMessage<GetLiveListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetLiveListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "live_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLiveListResponse {
    return new GetLiveListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLiveListResponse {
    return new GetLiveListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLiveListResponse {
    return new GetLiveListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetLiveListResponse | PlainMessage<GetLiveListResponse> | undefined, b: GetLiveListResponse | PlainMessage<GetLiveListResponse> | undefined): boolean {
    return proto3.util.equals(GetLiveListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetEPGRequest
 */
export class GetEPGRequest extends Message<GetEPGRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 3;
   */
  mac = "";

  /**
   * @generated from field: string timezone = 4;
   */
  timezone = "";

  /**
   * @generated from field: string date = 5;
   */
  date = "";

  /**
   * @generated from field: string version = 6;
   */
  version = "";

  /**
   * @generated from field: string combo = 7;
   */
  combo = "";

  /**
   * @generated from field: string class_name = 8;
   */
  className = "";

  constructor(data?: PartialMessage<GetEPGRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetEPGRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "combo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEPGRequest {
    return new GetEPGRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEPGRequest {
    return new GetEPGRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEPGRequest {
    return new GetEPGRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetEPGRequest | PlainMessage<GetEPGRequest> | undefined, b: GetEPGRequest | PlainMessage<GetEPGRequest> | undefined): boolean {
    return proto3.util.equals(GetEPGRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetEPGResponse
 */
export class GetEPGResponse extends Message<GetEPGResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes epg_data = 6;
   */
  epgData = new Uint8Array(0);

  constructor(data?: PartialMessage<GetEPGResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetEPGResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "epg_data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEPGResponse {
    return new GetEPGResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEPGResponse {
    return new GetEPGResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEPGResponse {
    return new GetEPGResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetEPGResponse | PlainMessage<GetEPGResponse> | undefined, b: GetEPGResponse | PlainMessage<GetEPGResponse> | undefined): boolean {
    return proto3.util.equals(GetEPGResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMacAccountCallbackRequest
 */
export class InsertMacAccountCallbackRequest extends Message<InsertMacAccountCallbackRequest> {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string sign = 2;
   */
  sign = "";

  /**
   * @generated from field: int32 combo_id = 3;
   */
  comboId = 0;

  constructor(data?: PartialMessage<InsertMacAccountCallbackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMacAccountCallbackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMacAccountCallbackRequest {
    return new InsertMacAccountCallbackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMacAccountCallbackRequest {
    return new InsertMacAccountCallbackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMacAccountCallbackRequest {
    return new InsertMacAccountCallbackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMacAccountCallbackRequest | PlainMessage<InsertMacAccountCallbackRequest> | undefined, b: InsertMacAccountCallbackRequest | PlainMessage<InsertMacAccountCallbackRequest> | undefined): boolean {
    return proto3.util.equals(InsertMacAccountCallbackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMacAccountCallbackResponse
 */
export class InsertMacAccountCallbackResponse extends Message<InsertMacAccountCallbackResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<InsertMacAccountCallbackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMacAccountCallbackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMacAccountCallbackResponse {
    return new InsertMacAccountCallbackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMacAccountCallbackResponse {
    return new InsertMacAccountCallbackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMacAccountCallbackResponse {
    return new InsertMacAccountCallbackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMacAccountCallbackResponse | PlainMessage<InsertMacAccountCallbackResponse> | undefined, b: InsertMacAccountCallbackResponse | PlainMessage<InsertMacAccountCallbackResponse> | undefined): boolean {
    return proto3.util.equals(InsertMacAccountCallbackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SyncPlaybackResourceRequest
 */
export class SyncPlaybackResourceRequest extends Message<SyncPlaybackResourceRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.XstreamCombo xstream_combo = 3;
   */
  xstreamCombo?: XstreamCombo;

  constructor(data?: PartialMessage<SyncPlaybackResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SyncPlaybackResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "xstream_combo", kind: "message", T: XstreamCombo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SyncPlaybackResourceRequest {
    return new SyncPlaybackResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SyncPlaybackResourceRequest {
    return new SyncPlaybackResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SyncPlaybackResourceRequest {
    return new SyncPlaybackResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SyncPlaybackResourceRequest | PlainMessage<SyncPlaybackResourceRequest> | undefined, b: SyncPlaybackResourceRequest | PlainMessage<SyncPlaybackResourceRequest> | undefined): boolean {
    return proto3.util.equals(SyncPlaybackResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SyncPlaybackResourceResponse
 */
export class SyncPlaybackResourceResponse extends Message<SyncPlaybackResourceResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<SyncPlaybackResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SyncPlaybackResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SyncPlaybackResourceResponse {
    return new SyncPlaybackResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SyncPlaybackResourceResponse {
    return new SyncPlaybackResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SyncPlaybackResourceResponse {
    return new SyncPlaybackResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SyncPlaybackResourceResponse | PlainMessage<SyncPlaybackResourceResponse> | undefined, b: SyncPlaybackResourceResponse | PlainMessage<SyncPlaybackResourceResponse> | undefined): boolean {
    return proto3.util.equals(SyncPlaybackResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMainClassListRequest
 */
export class QueryMainClassListRequest extends Message<QueryMainClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryMainClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMainClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMainClassListRequest {
    return new QueryMainClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMainClassListRequest {
    return new QueryMainClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMainClassListRequest {
    return new QueryMainClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMainClassListRequest | PlainMessage<QueryMainClassListRequest> | undefined, b: QueryMainClassListRequest | PlainMessage<QueryMainClassListRequest> | undefined): boolean {
    return proto3.util.equals(QueryMainClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMainClassListResponse
 */
export class QueryMainClassListResponse extends Message<QueryMainClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.MainClass main_class_list = 6;
   */
  mainClassList: MainClass[] = [];

  constructor(data?: PartialMessage<QueryMainClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMainClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "main_class_list", kind: "message", T: MainClass, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMainClassListResponse {
    return new QueryMainClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMainClassListResponse {
    return new QueryMainClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMainClassListResponse {
    return new QueryMainClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMainClassListResponse | PlainMessage<QueryMainClassListResponse> | undefined, b: QueryMainClassListResponse | PlainMessage<QueryMainClassListResponse> | undefined): boolean {
    return proto3.util.equals(QueryMainClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMainClassRequest
 */
export class InsertMainClassRequest extends Message<InsertMainClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MainClass main_class = 3;
   */
  mainClass?: MainClass;

  constructor(data?: PartialMessage<InsertMainClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMainClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class", kind: "message", T: MainClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMainClassRequest {
    return new InsertMainClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMainClassRequest {
    return new InsertMainClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMainClassRequest {
    return new InsertMainClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMainClassRequest | PlainMessage<InsertMainClassRequest> | undefined, b: InsertMainClassRequest | PlainMessage<InsertMainClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertMainClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMainClassResponse
 */
export class InsertMainClassResponse extends Message<InsertMainClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertMainClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMainClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMainClassResponse {
    return new InsertMainClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMainClassResponse {
    return new InsertMainClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMainClassResponse {
    return new InsertMainClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMainClassResponse | PlainMessage<InsertMainClassResponse> | undefined, b: InsertMainClassResponse | PlainMessage<InsertMainClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertMainClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMainClassRequest
 */
export class UpdateMainClassRequest extends Message<UpdateMainClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MainClass main_class = 3;
   */
  mainClass?: MainClass;

  constructor(data?: PartialMessage<UpdateMainClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMainClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class", kind: "message", T: MainClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMainClassRequest {
    return new UpdateMainClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMainClassRequest {
    return new UpdateMainClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMainClassRequest {
    return new UpdateMainClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMainClassRequest | PlainMessage<UpdateMainClassRequest> | undefined, b: UpdateMainClassRequest | PlainMessage<UpdateMainClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMainClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMainClassResponse
 */
export class UpdateMainClassResponse extends Message<UpdateMainClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateMainClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMainClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMainClassResponse {
    return new UpdateMainClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMainClassResponse {
    return new UpdateMainClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMainClassResponse {
    return new UpdateMainClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMainClassResponse | PlainMessage<UpdateMainClassResponse> | undefined, b: UpdateMainClassResponse | PlainMessage<UpdateMainClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMainClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CreateMainClassCacheRequest
 */
export class CreateMainClassCacheRequest extends Message<CreateMainClassCacheRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MainClass main_class = 3;
   */
  mainClass?: MainClass;

  constructor(data?: PartialMessage<CreateMainClassCacheRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CreateMainClassCacheRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class", kind: "message", T: MainClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMainClassCacheRequest {
    return new CreateMainClassCacheRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMainClassCacheRequest {
    return new CreateMainClassCacheRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMainClassCacheRequest {
    return new CreateMainClassCacheRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMainClassCacheRequest | PlainMessage<CreateMainClassCacheRequest> | undefined, b: CreateMainClassCacheRequest | PlainMessage<CreateMainClassCacheRequest> | undefined): boolean {
    return proto3.util.equals(CreateMainClassCacheRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CreateMainClassCacheResponse
 */
export class CreateMainClassCacheResponse extends Message<CreateMainClassCacheResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<CreateMainClassCacheResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CreateMainClassCacheResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMainClassCacheResponse {
    return new CreateMainClassCacheResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMainClassCacheResponse {
    return new CreateMainClassCacheResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMainClassCacheResponse {
    return new CreateMainClassCacheResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMainClassCacheResponse | PlainMessage<CreateMainClassCacheResponse> | undefined, b: CreateMainClassCacheResponse | PlainMessage<CreateMainClassCacheResponse> | undefined): boolean {
    return proto3.util.equals(CreateMainClassCacheResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportDomainInfoRequest
 */
export class ImportDomainInfoRequest extends Message<ImportDomainInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MainClass main_class = 3;
   */
  mainClass?: MainClass;

  constructor(data?: PartialMessage<ImportDomainInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportDomainInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class", kind: "message", T: MainClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDomainInfoRequest {
    return new ImportDomainInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDomainInfoRequest {
    return new ImportDomainInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDomainInfoRequest {
    return new ImportDomainInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDomainInfoRequest | PlainMessage<ImportDomainInfoRequest> | undefined, b: ImportDomainInfoRequest | PlainMessage<ImportDomainInfoRequest> | undefined): boolean {
    return proto3.util.equals(ImportDomainInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportDomainInfoResponse
 */
export class ImportDomainInfoResponse extends Message<ImportDomainInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ImportDomainInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportDomainInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportDomainInfoResponse {
    return new ImportDomainInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportDomainInfoResponse {
    return new ImportDomainInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportDomainInfoResponse {
    return new ImportDomainInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportDomainInfoResponse | PlainMessage<ImportDomainInfoResponse> | undefined, b: ImportDomainInfoResponse | PlainMessage<ImportDomainInfoResponse> | undefined): boolean {
    return proto3.util.equals(ImportDomainInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryImportDomainInfoLogListRequest
 */
export class QueryImportDomainInfoLogListRequest extends Message<QueryImportDomainInfoLogListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryImportDomainInfoLogListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryImportDomainInfoLogListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryImportDomainInfoLogListRequest {
    return new QueryImportDomainInfoLogListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryImportDomainInfoLogListRequest {
    return new QueryImportDomainInfoLogListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryImportDomainInfoLogListRequest {
    return new QueryImportDomainInfoLogListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryImportDomainInfoLogListRequest | PlainMessage<QueryImportDomainInfoLogListRequest> | undefined, b: QueryImportDomainInfoLogListRequest | PlainMessage<QueryImportDomainInfoLogListRequest> | undefined): boolean {
    return proto3.util.equals(QueryImportDomainInfoLogListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryImportDomainInfoLogListResponse
 */
export class QueryImportDomainInfoLogListResponse extends Message<QueryImportDomainInfoLogListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.ImportDomainInfoLog list = 6;
   */
  list: ImportDomainInfoLog[] = [];

  constructor(data?: PartialMessage<QueryImportDomainInfoLogListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryImportDomainInfoLogListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: ImportDomainInfoLog, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryImportDomainInfoLogListResponse {
    return new QueryImportDomainInfoLogListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryImportDomainInfoLogListResponse {
    return new QueryImportDomainInfoLogListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryImportDomainInfoLogListResponse {
    return new QueryImportDomainInfoLogListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryImportDomainInfoLogListResponse | PlainMessage<QueryImportDomainInfoLogListResponse> | undefined, b: QueryImportDomainInfoLogListResponse | PlainMessage<QueryImportDomainInfoLogListResponse> | undefined): boolean {
    return proto3.util.equals(QueryImportDomainInfoLogListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ExportMainClassByExcelRequest
 */
export class ExportMainClassByExcelRequest extends Message<ExportMainClassByExcelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 main_class_ids = 3;
   */
  mainClassIds: number[] = [];

  constructor(data?: PartialMessage<ExportMainClassByExcelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ExportMainClassByExcelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportMainClassByExcelRequest {
    return new ExportMainClassByExcelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportMainClassByExcelRequest {
    return new ExportMainClassByExcelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportMainClassByExcelRequest {
    return new ExportMainClassByExcelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExportMainClassByExcelRequest | PlainMessage<ExportMainClassByExcelRequest> | undefined, b: ExportMainClassByExcelRequest | PlainMessage<ExportMainClassByExcelRequest> | undefined): boolean {
    return proto3.util.equals(ExportMainClassByExcelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ExportMainClassByExcelResponse
 */
export class ExportMainClassByExcelResponse extends Message<ExportMainClassByExcelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: string path = 5;
   */
  path = "";

  constructor(data?: PartialMessage<ExportMainClassByExcelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ExportMainClassByExcelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportMainClassByExcelResponse {
    return new ExportMainClassByExcelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportMainClassByExcelResponse {
    return new ExportMainClassByExcelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportMainClassByExcelResponse {
    return new ExportMainClassByExcelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExportMainClassByExcelResponse | PlainMessage<ExportMainClassByExcelResponse> | undefined, b: ExportMainClassByExcelResponse | PlainMessage<ExportMainClassByExcelResponse> | undefined): boolean {
    return proto3.util.equals(ExportMainClassByExcelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllMainClassRequest
 */
export class QueryAllMainClassRequest extends Message<QueryAllMainClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllMainClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllMainClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMainClassRequest {
    return new QueryAllMainClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMainClassRequest {
    return new QueryAllMainClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMainClassRequest {
    return new QueryAllMainClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMainClassRequest | PlainMessage<QueryAllMainClassRequest> | undefined, b: QueryAllMainClassRequest | PlainMessage<QueryAllMainClassRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMainClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllMainClassResponse
 */
export class QueryAllMainClassResponse extends Message<QueryAllMainClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.LabelResp main_class_list = 5;
   */
  mainClassList: LabelResp[] = [];

  constructor(data?: PartialMessage<QueryAllMainClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllMainClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "main_class_list", kind: "message", T: LabelResp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMainClassResponse {
    return new QueryAllMainClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMainClassResponse {
    return new QueryAllMainClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMainClassResponse {
    return new QueryAllMainClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMainClassResponse | PlainMessage<QueryAllMainClassResponse> | undefined, b: QueryAllMainClassResponse | PlainMessage<QueryAllMainClassResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMainClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllSubClassRequest
 */
export class QueryAllSubClassRequest extends Message<QueryAllSubClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 main_class_id = 3;
   */
  mainClassId = 0;

  constructor(data?: PartialMessage<QueryAllSubClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllSubClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllSubClassRequest {
    return new QueryAllSubClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllSubClassRequest {
    return new QueryAllSubClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllSubClassRequest {
    return new QueryAllSubClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllSubClassRequest | PlainMessage<QueryAllSubClassRequest> | undefined, b: QueryAllSubClassRequest | PlainMessage<QueryAllSubClassRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllSubClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllSubClassResponse
 */
export class QueryAllSubClassResponse extends Message<QueryAllSubClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.LabelResp sub_class_list = 5;
   */
  subClassList: LabelResp[] = [];

  constructor(data?: PartialMessage<QueryAllSubClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllSubClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sub_class_list", kind: "message", T: LabelResp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllSubClassResponse {
    return new QueryAllSubClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllSubClassResponse {
    return new QueryAllSubClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllSubClassResponse {
    return new QueryAllSubClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllSubClassResponse | PlainMessage<QueryAllSubClassResponse> | undefined, b: QueryAllSubClassResponse | PlainMessage<QueryAllSubClassResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllSubClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QuerySubClassListRequest
 */
export class QuerySubClassListRequest extends Message<QuerySubClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: int32 main_class_id = 4;
   */
  mainClassId = 0;

  constructor(data?: PartialMessage<QuerySubClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QuerySubClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySubClassListRequest {
    return new QuerySubClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySubClassListRequest {
    return new QuerySubClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySubClassListRequest {
    return new QuerySubClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySubClassListRequest | PlainMessage<QuerySubClassListRequest> | undefined, b: QuerySubClassListRequest | PlainMessage<QuerySubClassListRequest> | undefined): boolean {
    return proto3.util.equals(QuerySubClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QuerySubClassListResponse
 */
export class QuerySubClassListResponse extends Message<QuerySubClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.SubClass sub_class_list = 6;
   */
  subClassList: SubClass[] = [];

  constructor(data?: PartialMessage<QuerySubClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QuerySubClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "sub_class_list", kind: "message", T: SubClass, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySubClassListResponse {
    return new QuerySubClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySubClassListResponse {
    return new QuerySubClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySubClassListResponse {
    return new QuerySubClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySubClassListResponse | PlainMessage<QuerySubClassListResponse> | undefined, b: QuerySubClassListResponse | PlainMessage<QuerySubClassListResponse> | undefined): boolean {
    return proto3.util.equals(QuerySubClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertSubClassRequest
 */
export class InsertSubClassRequest extends Message<InsertSubClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.SubClass sub_class = 3;
   */
  subClass?: SubClass;

  constructor(data?: PartialMessage<InsertSubClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertSubClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "sub_class", kind: "message", T: SubClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertSubClassRequest {
    return new InsertSubClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertSubClassRequest {
    return new InsertSubClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertSubClassRequest {
    return new InsertSubClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertSubClassRequest | PlainMessage<InsertSubClassRequest> | undefined, b: InsertSubClassRequest | PlainMessage<InsertSubClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertSubClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertSubClassResponse
 */
export class InsertSubClassResponse extends Message<InsertSubClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertSubClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertSubClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertSubClassResponse {
    return new InsertSubClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertSubClassResponse {
    return new InsertSubClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertSubClassResponse {
    return new InsertSubClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertSubClassResponse | PlainMessage<InsertSubClassResponse> | undefined, b: InsertSubClassResponse | PlainMessage<InsertSubClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertSubClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateSubClassRequest
 */
export class UpdateSubClassRequest extends Message<UpdateSubClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.SubClass sub_class = 3;
   */
  subClass?: SubClass;

  constructor(data?: PartialMessage<UpdateSubClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateSubClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "sub_class", kind: "message", T: SubClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSubClassRequest {
    return new UpdateSubClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSubClassRequest {
    return new UpdateSubClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSubClassRequest {
    return new UpdateSubClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSubClassRequest | PlainMessage<UpdateSubClassRequest> | undefined, b: UpdateSubClassRequest | PlainMessage<UpdateSubClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSubClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateSubClassResponse
 */
export class UpdateSubClassResponse extends Message<UpdateSubClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateSubClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateSubClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSubClassResponse {
    return new UpdateSubClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSubClassResponse {
    return new UpdateSubClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSubClassResponse {
    return new UpdateSubClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSubClassResponse | PlainMessage<UpdateSubClassResponse> | undefined, b: UpdateSubClassResponse | PlainMessage<UpdateSubClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateSubClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryChannelListRequest
 */
export class QueryChannelListRequest extends Message<QueryChannelListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.Channel channel = 4;
   */
  channel?: Channel;

  constructor(data?: PartialMessage<QueryChannelListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryChannelListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "channel", kind: "message", T: Channel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryChannelListRequest {
    return new QueryChannelListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryChannelListRequest {
    return new QueryChannelListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryChannelListRequest {
    return new QueryChannelListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryChannelListRequest | PlainMessage<QueryChannelListRequest> | undefined, b: QueryChannelListRequest | PlainMessage<QueryChannelListRequest> | undefined): boolean {
    return proto3.util.equals(QueryChannelListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryChannelListResponse
 */
export class QueryChannelListResponse extends Message<QueryChannelListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Channel channel_list = 6;
   */
  channelList: Channel[] = [];

  constructor(data?: PartialMessage<QueryChannelListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryChannelListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "channel_list", kind: "message", T: Channel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryChannelListResponse {
    return new QueryChannelListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryChannelListResponse {
    return new QueryChannelListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryChannelListResponse {
    return new QueryChannelListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryChannelListResponse | PlainMessage<QueryChannelListResponse> | undefined, b: QueryChannelListResponse | PlainMessage<QueryChannelListResponse> | undefined): boolean {
    return proto3.util.equals(QueryChannelListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertChannelRequest
 */
export class InsertChannelRequest extends Message<InsertChannelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Channel channel = 3;
   */
  channel?: Channel;

  constructor(data?: PartialMessage<InsertChannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertChannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "channel", kind: "message", T: Channel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertChannelRequest {
    return new InsertChannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertChannelRequest {
    return new InsertChannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertChannelRequest {
    return new InsertChannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertChannelRequest | PlainMessage<InsertChannelRequest> | undefined, b: InsertChannelRequest | PlainMessage<InsertChannelRequest> | undefined): boolean {
    return proto3.util.equals(InsertChannelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertChannelResponse
 */
export class InsertChannelResponse extends Message<InsertChannelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertChannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertChannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertChannelResponse {
    return new InsertChannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertChannelResponse {
    return new InsertChannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertChannelResponse {
    return new InsertChannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertChannelResponse | PlainMessage<InsertChannelResponse> | undefined, b: InsertChannelResponse | PlainMessage<InsertChannelResponse> | undefined): boolean {
    return proto3.util.equals(InsertChannelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateChannelRequest
 */
export class UpdateChannelRequest extends Message<UpdateChannelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Channel channel = 3;
   */
  channel?: Channel;

  constructor(data?: PartialMessage<UpdateChannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateChannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "channel", kind: "message", T: Channel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateChannelRequest {
    return new UpdateChannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateChannelRequest {
    return new UpdateChannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateChannelRequest {
    return new UpdateChannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateChannelRequest | PlainMessage<UpdateChannelRequest> | undefined, b: UpdateChannelRequest | PlainMessage<UpdateChannelRequest> | undefined): boolean {
    return proto3.util.equals(UpdateChannelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateChannelResponse
 */
export class UpdateChannelResponse extends Message<UpdateChannelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateChannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateChannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateChannelResponse {
    return new UpdateChannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateChannelResponse {
    return new UpdateChannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateChannelResponse {
    return new UpdateChannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateChannelResponse | PlainMessage<UpdateChannelResponse> | undefined, b: UpdateChannelResponse | PlainMessage<UpdateChannelResponse> | undefined): boolean {
    return proto3.util.equals(UpdateChannelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SortChannelRequest
 */
export class SortChannelRequest extends Message<SortChannelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 main_class_id = 3;
   */
  mainClassId = 0;

  constructor(data?: PartialMessage<SortChannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SortChannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "main_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SortChannelRequest {
    return new SortChannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SortChannelRequest {
    return new SortChannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SortChannelRequest {
    return new SortChannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SortChannelRequest | PlainMessage<SortChannelRequest> | undefined, b: SortChannelRequest | PlainMessage<SortChannelRequest> | undefined): boolean {
    return proto3.util.equals(SortChannelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SortChannelResponse
 */
export class SortChannelResponse extends Message<SortChannelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<SortChannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SortChannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SortChannelResponse {
    return new SortChannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SortChannelResponse {
    return new SortChannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SortChannelResponse {
    return new SortChannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SortChannelResponse | PlainMessage<SortChannelResponse> | undefined, b: SortChannelResponse | PlainMessage<SortChannelResponse> | undefined): boolean {
    return proto3.util.equals(SortChannelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllChannelRequest
 */
export class QueryAllChannelRequest extends Message<QueryAllChannelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<QueryAllChannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllChannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllChannelRequest {
    return new QueryAllChannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllChannelRequest {
    return new QueryAllChannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllChannelRequest {
    return new QueryAllChannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllChannelRequest | PlainMessage<QueryAllChannelRequest> | undefined, b: QueryAllChannelRequest | PlainMessage<QueryAllChannelRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllChannelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllChannelResponse
 */
export class QueryAllChannelResponse extends Message<QueryAllChannelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.ChannelLabel channel_list = 5;
   */
  channelList: ChannelLabel[] = [];

  constructor(data?: PartialMessage<QueryAllChannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllChannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "channel_list", kind: "message", T: ChannelLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllChannelResponse {
    return new QueryAllChannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllChannelResponse {
    return new QueryAllChannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllChannelResponse {
    return new QueryAllChannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllChannelResponse | PlainMessage<QueryAllChannelResponse> | undefined, b: QueryAllChannelResponse | PlainMessage<QueryAllChannelResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllChannelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLinkListRequest
 */
export class QueryLinkListRequest extends Message<QueryLinkListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId = 0;

  constructor(data?: PartialMessage<QueryLinkListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLinkListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLinkListRequest {
    return new QueryLinkListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLinkListRequest {
    return new QueryLinkListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLinkListRequest {
    return new QueryLinkListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLinkListRequest | PlainMessage<QueryLinkListRequest> | undefined, b: QueryLinkListRequest | PlainMessage<QueryLinkListRequest> | undefined): boolean {
    return proto3.util.equals(QueryLinkListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLinkListResponse
 */
export class QueryLinkListResponse extends Message<QueryLinkListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.Link link_list = 5;
   */
  linkList: Link[] = [];

  constructor(data?: PartialMessage<QueryLinkListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLinkListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "link_list", kind: "message", T: Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLinkListResponse {
    return new QueryLinkListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLinkListResponse {
    return new QueryLinkListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLinkListResponse {
    return new QueryLinkListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLinkListResponse | PlainMessage<QueryLinkListResponse> | undefined, b: QueryLinkListResponse | PlainMessage<QueryLinkListResponse> | undefined): boolean {
    return proto3.util.equals(QueryLinkListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertLinkRequest
 */
export class InsertLinkRequest extends Message<InsertLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Link link = 3;
   */
  link?: Link;

  constructor(data?: PartialMessage<InsertLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "link", kind: "message", T: Link },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertLinkRequest {
    return new InsertLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertLinkRequest {
    return new InsertLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertLinkRequest {
    return new InsertLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertLinkRequest | PlainMessage<InsertLinkRequest> | undefined, b: InsertLinkRequest | PlainMessage<InsertLinkRequest> | undefined): boolean {
    return proto3.util.equals(InsertLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertLinkResponse
 */
export class InsertLinkResponse extends Message<InsertLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertLinkResponse {
    return new InsertLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertLinkResponse {
    return new InsertLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertLinkResponse {
    return new InsertLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertLinkResponse | PlainMessage<InsertLinkResponse> | undefined, b: InsertLinkResponse | PlainMessage<InsertLinkResponse> | undefined): boolean {
    return proto3.util.equals(InsertLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateLinkRequest
 */
export class UpdateLinkRequest extends Message<UpdateLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Link link = 3;
   */
  link?: Link;

  constructor(data?: PartialMessage<UpdateLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "link", kind: "message", T: Link },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLinkRequest {
    return new UpdateLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLinkRequest {
    return new UpdateLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLinkRequest {
    return new UpdateLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLinkRequest | PlainMessage<UpdateLinkRequest> | undefined, b: UpdateLinkRequest | PlainMessage<UpdateLinkRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateLinkResponse
 */
export class UpdateLinkResponse extends Message<UpdateLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLinkResponse {
    return new UpdateLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLinkResponse {
    return new UpdateLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLinkResponse {
    return new UpdateLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLinkResponse | PlainMessage<UpdateLinkResponse> | undefined, b: UpdateLinkResponse | PlainMessage<UpdateLinkResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ManualBindEpgRequest
 */
export class ManualBindEpgRequest extends Message<ManualBindEpgRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string epg_id = 3;
   */
  epgId = "";

  /**
   * @generated from field: repeated int32 channel_id = 4;
   */
  channelId: number[] = [];

  constructor(data?: PartialMessage<ManualBindEpgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ManualBindEpgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "epg_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualBindEpgRequest {
    return new ManualBindEpgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualBindEpgRequest {
    return new ManualBindEpgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualBindEpgRequest {
    return new ManualBindEpgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ManualBindEpgRequest | PlainMessage<ManualBindEpgRequest> | undefined, b: ManualBindEpgRequest | PlainMessage<ManualBindEpgRequest> | undefined): boolean {
    return proto3.util.equals(ManualBindEpgRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ManualBindEpgResponse
 */
export class ManualBindEpgResponse extends Message<ManualBindEpgResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ManualBindEpgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ManualBindEpgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualBindEpgResponse {
    return new ManualBindEpgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualBindEpgResponse {
    return new ManualBindEpgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualBindEpgResponse {
    return new ManualBindEpgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ManualBindEpgResponse | PlainMessage<ManualBindEpgResponse> | undefined, b: ManualBindEpgResponse | PlainMessage<ManualBindEpgResponse> | undefined): boolean {
    return proto3.util.equals(ManualBindEpgResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateChannelListRequest
 */
export class UpdateChannelListRequest extends Message<UpdateChannelListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 channel_id = 3;
   */
  channelId: number[] = [];

  /**
   * @generated from field: api.ks.v1.Channel channel = 4;
   */
  channel?: Channel;

  constructor(data?: PartialMessage<UpdateChannelListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateChannelListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 4, name: "channel", kind: "message", T: Channel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateChannelListRequest {
    return new UpdateChannelListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateChannelListRequest {
    return new UpdateChannelListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateChannelListRequest {
    return new UpdateChannelListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateChannelListRequest | PlainMessage<UpdateChannelListRequest> | undefined, b: UpdateChannelListRequest | PlainMessage<UpdateChannelListRequest> | undefined): boolean {
    return proto3.util.equals(UpdateChannelListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateChannelListResponse
 */
export class UpdateChannelListResponse extends Message<UpdateChannelListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateChannelListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateChannelListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateChannelListResponse {
    return new UpdateChannelListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateChannelListResponse {
    return new UpdateChannelListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateChannelListResponse {
    return new UpdateChannelListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateChannelListResponse | PlainMessage<UpdateChannelListResponse> | undefined, b: UpdateChannelListResponse | PlainMessage<UpdateChannelListResponse> | undefined): boolean {
    return proto3.util.equals(UpdateChannelListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryEpgListRequest
 */
export class QueryEpgListRequest extends Message<QueryEpgListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.Epg epg = 4;
   */
  epg?: Epg;

  constructor(data?: PartialMessage<QueryEpgListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryEpgListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "epg", kind: "message", T: Epg },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryEpgListRequest {
    return new QueryEpgListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryEpgListRequest {
    return new QueryEpgListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryEpgListRequest {
    return new QueryEpgListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryEpgListRequest | PlainMessage<QueryEpgListRequest> | undefined, b: QueryEpgListRequest | PlainMessage<QueryEpgListRequest> | undefined): boolean {
    return proto3.util.equals(QueryEpgListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryEpgListResponse
 */
export class QueryEpgListResponse extends Message<QueryEpgListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Epg epg_list = 6;
   */
  epgList: Epg[] = [];

  constructor(data?: PartialMessage<QueryEpgListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryEpgListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "epg_list", kind: "message", T: Epg, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryEpgListResponse {
    return new QueryEpgListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryEpgListResponse {
    return new QueryEpgListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryEpgListResponse {
    return new QueryEpgListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryEpgListResponse | PlainMessage<QueryEpgListResponse> | undefined, b: QueryEpgListResponse | PlainMessage<QueryEpgListResponse> | undefined): boolean {
    return proto3.util.equals(QueryEpgListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertEpgRequest
 */
export class InsertEpgRequest extends Message<InsertEpgRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Epg epg = 3;
   */
  epg?: Epg;

  constructor(data?: PartialMessage<InsertEpgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertEpgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "epg", kind: "message", T: Epg },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertEpgRequest {
    return new InsertEpgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertEpgRequest {
    return new InsertEpgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertEpgRequest {
    return new InsertEpgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertEpgRequest | PlainMessage<InsertEpgRequest> | undefined, b: InsertEpgRequest | PlainMessage<InsertEpgRequest> | undefined): boolean {
    return proto3.util.equals(InsertEpgRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertEpgResponse
 */
export class InsertEpgResponse extends Message<InsertEpgResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertEpgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertEpgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertEpgResponse {
    return new InsertEpgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertEpgResponse {
    return new InsertEpgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertEpgResponse {
    return new InsertEpgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertEpgResponse | PlainMessage<InsertEpgResponse> | undefined, b: InsertEpgResponse | PlainMessage<InsertEpgResponse> | undefined): boolean {
    return proto3.util.equals(InsertEpgResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteEpgRequest
 */
export class DeleteEpgRequest extends Message<DeleteEpgRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string epg_channel_name = 3;
   */
  epgChannelName = "";

  constructor(data?: PartialMessage<DeleteEpgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteEpgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "epg_channel_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEpgRequest {
    return new DeleteEpgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEpgRequest {
    return new DeleteEpgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEpgRequest {
    return new DeleteEpgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEpgRequest | PlainMessage<DeleteEpgRequest> | undefined, b: DeleteEpgRequest | PlainMessage<DeleteEpgRequest> | undefined): boolean {
    return proto3.util.equals(DeleteEpgRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteEpgResponse
 */
export class DeleteEpgResponse extends Message<DeleteEpgResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteEpgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteEpgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEpgResponse {
    return new DeleteEpgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEpgResponse {
    return new DeleteEpgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEpgResponse {
    return new DeleteEpgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEpgResponse | PlainMessage<DeleteEpgResponse> | undefined, b: DeleteEpgResponse | PlainMessage<DeleteEpgResponse> | undefined): boolean {
    return proto3.util.equals(DeleteEpgResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllEpgRequest
 */
export class QueryAllEpgRequest extends Message<QueryAllEpgRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<QueryAllEpgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllEpgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllEpgRequest {
    return new QueryAllEpgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllEpgRequest {
    return new QueryAllEpgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllEpgRequest {
    return new QueryAllEpgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllEpgRequest | PlainMessage<QueryAllEpgRequest> | undefined, b: QueryAllEpgRequest | PlainMessage<QueryAllEpgRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllEpgRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllEpgResponse
 */
export class QueryAllEpgResponse extends Message<QueryAllEpgResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.EpgLabel epg_list = 5;
   */
  epgList: EpgLabel[] = [];

  constructor(data?: PartialMessage<QueryAllEpgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllEpgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "epg_list", kind: "message", T: EpgLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllEpgResponse {
    return new QueryAllEpgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllEpgResponse {
    return new QueryAllEpgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllEpgResponse {
    return new QueryAllEpgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllEpgResponse | PlainMessage<QueryAllEpgResponse> | undefined, b: QueryAllEpgResponse | PlainMessage<QueryAllEpgResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllEpgResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllVodRequest
 */
export class QueryAllVodRequest extends Message<QueryAllVodRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int32 class_id = 5;
   */
  classId = 0;

  constructor(data?: PartialMessage<QueryAllVodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllVodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVodRequest {
    return new QueryAllVodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVodRequest {
    return new QueryAllVodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVodRequest {
    return new QueryAllVodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVodRequest | PlainMessage<QueryAllVodRequest> | undefined, b: QueryAllVodRequest | PlainMessage<QueryAllVodRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllVodRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllVodResponse
 */
export class QueryAllVodResponse extends Message<QueryAllVodResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.LabelResp vod_list = 5;
   */
  vodList: LabelResp[] = [];

  constructor(data?: PartialMessage<QueryAllVodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllVodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "vod_list", kind: "message", T: LabelResp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVodResponse {
    return new QueryAllVodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVodResponse {
    return new QueryAllVodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVodResponse {
    return new QueryAllVodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVodResponse | PlainMessage<QueryAllVodResponse> | undefined, b: QueryAllVodResponse | PlainMessage<QueryAllVodResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllVodResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.PullVodDataRequest
 */
export class PullVodDataRequest extends Message<PullVodDataRequest> {
  constructor(data?: PartialMessage<PullVodDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.PullVodDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PullVodDataRequest {
    return new PullVodDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PullVodDataRequest {
    return new PullVodDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PullVodDataRequest {
    return new PullVodDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PullVodDataRequest | PlainMessage<PullVodDataRequest> | undefined, b: PullVodDataRequest | PlainMessage<PullVodDataRequest> | undefined): boolean {
    return proto3.util.equals(PullVodDataRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.PullVodDataResponse
 */
export class PullVodDataResponse extends Message<PullVodDataResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<PullVodDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.PullVodDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PullVodDataResponse {
    return new PullVodDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PullVodDataResponse {
    return new PullVodDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PullVodDataResponse {
    return new PullVodDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PullVodDataResponse | PlainMessage<PullVodDataResponse> | undefined, b: PullVodDataResponse | PlainMessage<PullVodDataResponse> | undefined): boolean {
    return proto3.util.equals(PullVodDataResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CollectVodInfoRequest
 */
export class CollectVodInfoRequest extends Message<CollectVodInfoRequest> {
  constructor(data?: PartialMessage<CollectVodInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CollectVodInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CollectVodInfoRequest {
    return new CollectVodInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CollectVodInfoRequest {
    return new CollectVodInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CollectVodInfoRequest {
    return new CollectVodInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CollectVodInfoRequest | PlainMessage<CollectVodInfoRequest> | undefined, b: CollectVodInfoRequest | PlainMessage<CollectVodInfoRequest> | undefined): boolean {
    return proto3.util.equals(CollectVodInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CollectVodInfoResponse
 */
export class CollectVodInfoResponse extends Message<CollectVodInfoResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<CollectVodInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CollectVodInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CollectVodInfoResponse {
    return new CollectVodInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CollectVodInfoResponse {
    return new CollectVodInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CollectVodInfoResponse {
    return new CollectVodInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CollectVodInfoResponse | PlainMessage<CollectVodInfoResponse> | undefined, b: CollectVodInfoResponse | PlainMessage<CollectVodInfoResponse> | undefined): boolean {
    return proto3.util.equals(CollectVodInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodClassListRequest
 */
export class QueryVodClassListRequest extends Message<QueryVodClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.VodClass vod_class = 4;
   */
  vodClass?: VodClass;

  constructor(data?: PartialMessage<QueryVodClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vod_class", kind: "message", T: VodClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodClassListRequest {
    return new QueryVodClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodClassListRequest {
    return new QueryVodClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodClassListRequest {
    return new QueryVodClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodClassListRequest | PlainMessage<QueryVodClassListRequest> | undefined, b: QueryVodClassListRequest | PlainMessage<QueryVodClassListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodClassListResponse
 */
export class QueryVodClassListResponse extends Message<QueryVodClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodClass vod_class_list = 6;
   */
  vodClassList: VodClass[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "vod_class_list", kind: "message", T: VodClass, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodClassListResponse {
    return new QueryVodClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodClassListResponse {
    return new QueryVodClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodClassListResponse {
    return new QueryVodClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodClassListResponse | PlainMessage<QueryVodClassListResponse> | undefined, b: QueryVodClassListResponse | PlainMessage<QueryVodClassListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodClassRequest
 */
export class InsertVodClassRequest extends Message<InsertVodClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodClass vod_class = 3;
   */
  vodClass?: VodClass;

  constructor(data?: PartialMessage<InsertVodClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_class", kind: "message", T: VodClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodClassRequest {
    return new InsertVodClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodClassRequest {
    return new InsertVodClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodClassRequest {
    return new InsertVodClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodClassRequest | PlainMessage<InsertVodClassRequest> | undefined, b: InsertVodClassRequest | PlainMessage<InsertVodClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodClassResponse
 */
export class InsertVodClassResponse extends Message<InsertVodClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertVodClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodClassResponse {
    return new InsertVodClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodClassResponse {
    return new InsertVodClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodClassResponse {
    return new InsertVodClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodClassResponse | PlainMessage<InsertVodClassResponse> | undefined, b: InsertVodClassResponse | PlainMessage<InsertVodClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodClassRequest
 */
export class UpdateVodClassRequest extends Message<UpdateVodClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodClass vod_class = 3;
   */
  vodClass?: VodClass;

  constructor(data?: PartialMessage<UpdateVodClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_class", kind: "message", T: VodClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodClassRequest {
    return new UpdateVodClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodClassRequest {
    return new UpdateVodClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodClassRequest {
    return new UpdateVodClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodClassRequest | PlainMessage<UpdateVodClassRequest> | undefined, b: UpdateVodClassRequest | PlainMessage<UpdateVodClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodClassResponse
 */
export class UpdateVodClassResponse extends Message<UpdateVodClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateVodClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodClassResponse {
    return new UpdateVodClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodClassResponse {
    return new UpdateVodClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodClassResponse {
    return new UpdateVodClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodClassResponse | PlainMessage<UpdateVodClassResponse> | undefined, b: UpdateVodClassResponse | PlainMessage<UpdateVodClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodListRequest
 */
export class QueryVodListRequest extends Message<QueryVodListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: int32 first_id = 4;
   */
  firstId = 0;

  /**
   * @generated from field: api.ks.v1.Vod vod = 5;
   */
  vod?: Vod;

  constructor(data?: PartialMessage<QueryVodListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "first_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "vod", kind: "message", T: Vod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodListRequest {
    return new QueryVodListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodListRequest {
    return new QueryVodListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodListRequest {
    return new QueryVodListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodListRequest | PlainMessage<QueryVodListRequest> | undefined, b: QueryVodListRequest | PlainMessage<QueryVodListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodListResponse
 */
export class QueryVodListResponse extends Message<QueryVodListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Vod list = 6;
   */
  list: Vod[] = [];

  constructor(data?: PartialMessage<QueryVodListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: Vod, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodListResponse {
    return new QueryVodListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodListResponse {
    return new QueryVodListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodListResponse {
    return new QueryVodListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodListResponse | PlainMessage<QueryVodListResponse> | undefined, b: QueryVodListResponse | PlainMessage<QueryVodListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodRequest
 */
export class InsertVodRequest extends Message<InsertVodRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Vod vod = 3;
   */
  vod?: Vod;

  constructor(data?: PartialMessage<InsertVodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod", kind: "message", T: Vod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodRequest {
    return new InsertVodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodRequest {
    return new InsertVodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodRequest {
    return new InsertVodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodRequest | PlainMessage<InsertVodRequest> | undefined, b: InsertVodRequest | PlainMessage<InsertVodRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodResponse
 */
export class InsertVodResponse extends Message<InsertVodResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertVodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodResponse {
    return new InsertVodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodResponse {
    return new InsertVodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodResponse {
    return new InsertVodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodResponse | PlainMessage<InsertVodResponse> | undefined, b: InsertVodResponse | PlainMessage<InsertVodResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodRequest
 */
export class UpdateVodRequest extends Message<UpdateVodRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Vod vod = 3;
   */
  vod?: Vod;

  constructor(data?: PartialMessage<UpdateVodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod", kind: "message", T: Vod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodRequest {
    return new UpdateVodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodRequest {
    return new UpdateVodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodRequest {
    return new UpdateVodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodRequest | PlainMessage<UpdateVodRequest> | undefined, b: UpdateVodRequest | PlainMessage<UpdateVodRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodResponse
 */
export class UpdateVodResponse extends Message<UpdateVodResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateVodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodResponse {
    return new UpdateVodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodResponse {
    return new UpdateVodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodResponse {
    return new UpdateVodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodResponse | PlainMessage<UpdateVodResponse> | undefined, b: UpdateVodResponse | PlainMessage<UpdateVodResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodRequest
 */
export class DeleteVodRequest extends Message<DeleteVodRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodRequest {
    return new DeleteVodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodRequest {
    return new DeleteVodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodRequest {
    return new DeleteVodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodRequest | PlainMessage<DeleteVodRequest> | undefined, b: DeleteVodRequest | PlainMessage<DeleteVodRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodResponse
 */
export class DeleteVodResponse extends Message<DeleteVodResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteVodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodResponse {
    return new DeleteVodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodResponse {
    return new DeleteVodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodResponse {
    return new DeleteVodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodResponse | PlainMessage<DeleteVodResponse> | undefined, b: DeleteVodResponse | PlainMessage<DeleteVodResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteSubClassRequest
 */
export class DeleteSubClassRequest extends Message<DeleteSubClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 sub_class_id = 3;
   */
  subClassId: number[] = [];

  constructor(data?: PartialMessage<DeleteSubClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteSubClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "sub_class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSubClassRequest {
    return new DeleteSubClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSubClassRequest {
    return new DeleteSubClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSubClassRequest {
    return new DeleteSubClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSubClassRequest | PlainMessage<DeleteSubClassRequest> | undefined, b: DeleteSubClassRequest | PlainMessage<DeleteSubClassRequest> | undefined): boolean {
    return proto3.util.equals(DeleteSubClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteSubClassResponse
 */
export class DeleteSubClassResponse extends Message<DeleteSubClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteSubClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteSubClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSubClassResponse {
    return new DeleteSubClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSubClassResponse {
    return new DeleteSubClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSubClassResponse {
    return new DeleteSubClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSubClassResponse | PlainMessage<DeleteSubClassResponse> | undefined, b: DeleteSubClassResponse | PlainMessage<DeleteSubClassResponse> | undefined): boolean {
    return proto3.util.equals(DeleteSubClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteChannelRequest
 */
export class DeleteChannelRequest extends Message<DeleteChannelRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 channel_id = 3;
   */
  channelId: number[] = [];

  constructor(data?: PartialMessage<DeleteChannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteChannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteChannelRequest {
    return new DeleteChannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteChannelRequest {
    return new DeleteChannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteChannelRequest {
    return new DeleteChannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteChannelRequest | PlainMessage<DeleteChannelRequest> | undefined, b: DeleteChannelRequest | PlainMessage<DeleteChannelRequest> | undefined): boolean {
    return proto3.util.equals(DeleteChannelRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteChannelResponse
 */
export class DeleteChannelResponse extends Message<DeleteChannelResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteChannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteChannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteChannelResponse {
    return new DeleteChannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteChannelResponse {
    return new DeleteChannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteChannelResponse {
    return new DeleteChannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteChannelResponse | PlainMessage<DeleteChannelResponse> | undefined, b: DeleteChannelResponse | PlainMessage<DeleteChannelResponse> | undefined): boolean {
    return proto3.util.equals(DeleteChannelResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteLinkRequest
 */
export class DeleteLinkRequest extends Message<DeleteLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 link_id = 3;
   */
  linkId: number[] = [];

  constructor(data?: PartialMessage<DeleteLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "link_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteLinkRequest {
    return new DeleteLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteLinkRequest {
    return new DeleteLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteLinkRequest {
    return new DeleteLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteLinkRequest | PlainMessage<DeleteLinkRequest> | undefined, b: DeleteLinkRequest | PlainMessage<DeleteLinkRequest> | undefined): boolean {
    return proto3.util.equals(DeleteLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteLinkResponse
 */
export class DeleteLinkResponse extends Message<DeleteLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteLinkResponse {
    return new DeleteLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteLinkResponse {
    return new DeleteLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteLinkResponse {
    return new DeleteLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteLinkResponse | PlainMessage<DeleteLinkResponse> | undefined, b: DeleteLinkResponse | PlainMessage<DeleteLinkResponse> | undefined): boolean {
    return proto3.util.equals(DeleteLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAddressConfigListRequest
 */
export class QueryAddressConfigListRequest extends Message<QueryAddressConfigListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryAddressConfigListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAddressConfigListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAddressConfigListRequest {
    return new QueryAddressConfigListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAddressConfigListRequest {
    return new QueryAddressConfigListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAddressConfigListRequest {
    return new QueryAddressConfigListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAddressConfigListRequest | PlainMessage<QueryAddressConfigListRequest> | undefined, b: QueryAddressConfigListRequest | PlainMessage<QueryAddressConfigListRequest> | undefined): boolean {
    return proto3.util.equals(QueryAddressConfigListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAddressConfigListResponse
 */
export class QueryAddressConfigListResponse extends Message<QueryAddressConfigListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.AddressConfig address_config_list = 6;
   */
  addressConfigList: AddressConfig[] = [];

  constructor(data?: PartialMessage<QueryAddressConfigListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAddressConfigListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "address_config_list", kind: "message", T: AddressConfig, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAddressConfigListResponse {
    return new QueryAddressConfigListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAddressConfigListResponse {
    return new QueryAddressConfigListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAddressConfigListResponse {
    return new QueryAddressConfigListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAddressConfigListResponse | PlainMessage<QueryAddressConfigListResponse> | undefined, b: QueryAddressConfigListResponse | PlainMessage<QueryAddressConfigListResponse> | undefined): boolean {
    return proto3.util.equals(QueryAddressConfigListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertAddressConfigRequest
 */
export class InsertAddressConfigRequest extends Message<InsertAddressConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.AddressConfig address_config = 3;
   */
  addressConfig?: AddressConfig;

  constructor(data?: PartialMessage<InsertAddressConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertAddressConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "address_config", kind: "message", T: AddressConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertAddressConfigRequest {
    return new InsertAddressConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertAddressConfigRequest {
    return new InsertAddressConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertAddressConfigRequest {
    return new InsertAddressConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertAddressConfigRequest | PlainMessage<InsertAddressConfigRequest> | undefined, b: InsertAddressConfigRequest | PlainMessage<InsertAddressConfigRequest> | undefined): boolean {
    return proto3.util.equals(InsertAddressConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertAddressConfigResponse
 */
export class InsertAddressConfigResponse extends Message<InsertAddressConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertAddressConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertAddressConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertAddressConfigResponse {
    return new InsertAddressConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertAddressConfigResponse {
    return new InsertAddressConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertAddressConfigResponse {
    return new InsertAddressConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertAddressConfigResponse | PlainMessage<InsertAddressConfigResponse> | undefined, b: InsertAddressConfigResponse | PlainMessage<InsertAddressConfigResponse> | undefined): boolean {
    return proto3.util.equals(InsertAddressConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateAddressConfigRequest
 */
export class UpdateAddressConfigRequest extends Message<UpdateAddressConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.AddressConfig address_config = 3;
   */
  addressConfig?: AddressConfig;

  constructor(data?: PartialMessage<UpdateAddressConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateAddressConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "address_config", kind: "message", T: AddressConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAddressConfigRequest {
    return new UpdateAddressConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAddressConfigRequest {
    return new UpdateAddressConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAddressConfigRequest {
    return new UpdateAddressConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAddressConfigRequest | PlainMessage<UpdateAddressConfigRequest> | undefined, b: UpdateAddressConfigRequest | PlainMessage<UpdateAddressConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAddressConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateAddressConfigResponse
 */
export class UpdateAddressConfigResponse extends Message<UpdateAddressConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateAddressConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateAddressConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAddressConfigResponse {
    return new UpdateAddressConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAddressConfigResponse {
    return new UpdateAddressConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAddressConfigResponse {
    return new UpdateAddressConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAddressConfigResponse | PlainMessage<UpdateAddressConfigResponse> | undefined, b: UpdateAddressConfigResponse | PlainMessage<UpdateAddressConfigResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAddressConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteAddressConfigRequest
 */
export class DeleteAddressConfigRequest extends Message<DeleteAddressConfigRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 address_config_id = 3;
   */
  addressConfigId: number[] = [];

  constructor(data?: PartialMessage<DeleteAddressConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteAddressConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "address_config_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAddressConfigRequest {
    return new DeleteAddressConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAddressConfigRequest {
    return new DeleteAddressConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAddressConfigRequest {
    return new DeleteAddressConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAddressConfigRequest | PlainMessage<DeleteAddressConfigRequest> | undefined, b: DeleteAddressConfigRequest | PlainMessage<DeleteAddressConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAddressConfigRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteAddressConfigResponse
 */
export class DeleteAddressConfigResponse extends Message<DeleteAddressConfigResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteAddressConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteAddressConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAddressConfigResponse {
    return new DeleteAddressConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAddressConfigResponse {
    return new DeleteAddressConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAddressConfigResponse {
    return new DeleteAddressConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAddressConfigResponse | PlainMessage<DeleteAddressConfigResponse> | undefined, b: DeleteAddressConfigResponse | PlainMessage<DeleteAddressConfigResponse> | undefined): boolean {
    return proto3.util.equals(DeleteAddressConfigResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodRepeatedListRequest
 */
export class QueryVodRepeatedListRequest extends Message<QueryVodRepeatedListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryVodRepeatedListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodRepeatedListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodRepeatedListRequest {
    return new QueryVodRepeatedListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodRepeatedListRequest {
    return new QueryVodRepeatedListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodRepeatedListRequest {
    return new QueryVodRepeatedListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodRepeatedListRequest | PlainMessage<QueryVodRepeatedListRequest> | undefined, b: QueryVodRepeatedListRequest | PlainMessage<QueryVodRepeatedListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodRepeatedListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodRepeatedListResponse
 */
export class QueryVodRepeatedListResponse extends Message<QueryVodRepeatedListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodRepeated vod_repeated_list = 6;
   */
  vodRepeatedList: VodRepeated[] = [];

  constructor(data?: PartialMessage<QueryVodRepeatedListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodRepeatedListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "vod_repeated_list", kind: "message", T: VodRepeated, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodRepeatedListResponse {
    return new QueryVodRepeatedListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodRepeatedListResponse {
    return new QueryVodRepeatedListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodRepeatedListResponse {
    return new QueryVodRepeatedListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodRepeatedListResponse | PlainMessage<QueryVodRepeatedListResponse> | undefined, b: QueryVodRepeatedListResponse | PlainMessage<QueryVodRepeatedListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodRepeatedListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryPlaybackListRequest
 */
export class QueryPlaybackListRequest extends Message<QueryPlaybackListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.Playback playback = 4;
   */
  playback?: Playback;

  constructor(data?: PartialMessage<QueryPlaybackListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryPlaybackListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "playback", kind: "message", T: Playback },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPlaybackListRequest {
    return new QueryPlaybackListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPlaybackListRequest {
    return new QueryPlaybackListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPlaybackListRequest {
    return new QueryPlaybackListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPlaybackListRequest | PlainMessage<QueryPlaybackListRequest> | undefined, b: QueryPlaybackListRequest | PlainMessage<QueryPlaybackListRequest> | undefined): boolean {
    return proto3.util.equals(QueryPlaybackListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryPlaybackListResponse
 */
export class QueryPlaybackListResponse extends Message<QueryPlaybackListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Playback playback_list = 6;
   */
  playbackList: Playback[] = [];

  constructor(data?: PartialMessage<QueryPlaybackListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryPlaybackListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "playback_list", kind: "message", T: Playback, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPlaybackListResponse {
    return new QueryPlaybackListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPlaybackListResponse {
    return new QueryPlaybackListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPlaybackListResponse {
    return new QueryPlaybackListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPlaybackListResponse | PlainMessage<QueryPlaybackListResponse> | undefined, b: QueryPlaybackListResponse | PlainMessage<QueryPlaybackListResponse> | undefined): boolean {
    return proto3.util.equals(QueryPlaybackListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertPlaybackRequest
 */
export class InsertPlaybackRequest extends Message<InsertPlaybackRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Playback playback = 3;
   */
  playback?: Playback;

  constructor(data?: PartialMessage<InsertPlaybackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertPlaybackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "playback", kind: "message", T: Playback },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertPlaybackRequest {
    return new InsertPlaybackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertPlaybackRequest {
    return new InsertPlaybackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertPlaybackRequest {
    return new InsertPlaybackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertPlaybackRequest | PlainMessage<InsertPlaybackRequest> | undefined, b: InsertPlaybackRequest | PlainMessage<InsertPlaybackRequest> | undefined): boolean {
    return proto3.util.equals(InsertPlaybackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertPlaybackResponse
 */
export class InsertPlaybackResponse extends Message<InsertPlaybackResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertPlaybackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertPlaybackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertPlaybackResponse {
    return new InsertPlaybackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertPlaybackResponse {
    return new InsertPlaybackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertPlaybackResponse {
    return new InsertPlaybackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertPlaybackResponse | PlainMessage<InsertPlaybackResponse> | undefined, b: InsertPlaybackResponse | PlainMessage<InsertPlaybackResponse> | undefined): boolean {
    return proto3.util.equals(InsertPlaybackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeletePlaybackRequest
 */
export class DeletePlaybackRequest extends Message<DeletePlaybackRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 stream_id = 3;
   */
  streamId: number[] = [];

  constructor(data?: PartialMessage<DeletePlaybackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeletePlaybackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "stream_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePlaybackRequest {
    return new DeletePlaybackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePlaybackRequest {
    return new DeletePlaybackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePlaybackRequest {
    return new DeletePlaybackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePlaybackRequest | PlainMessage<DeletePlaybackRequest> | undefined, b: DeletePlaybackRequest | PlainMessage<DeletePlaybackRequest> | undefined): boolean {
    return proto3.util.equals(DeletePlaybackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeletePlaybackResponse
 */
export class DeletePlaybackResponse extends Message<DeletePlaybackResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeletePlaybackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeletePlaybackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePlaybackResponse {
    return new DeletePlaybackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePlaybackResponse {
    return new DeletePlaybackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePlaybackResponse {
    return new DeletePlaybackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePlaybackResponse | PlainMessage<DeletePlaybackResponse> | undefined, b: DeletePlaybackResponse | PlainMessage<DeletePlaybackResponse> | undefined): boolean {
    return proto3.util.equals(DeletePlaybackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllPlaybackRequest
 */
export class QueryAllPlaybackRequest extends Message<QueryAllPlaybackRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  constructor(data?: PartialMessage<QueryAllPlaybackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllPlaybackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPlaybackRequest {
    return new QueryAllPlaybackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPlaybackRequest {
    return new QueryAllPlaybackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPlaybackRequest {
    return new QueryAllPlaybackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPlaybackRequest | PlainMessage<QueryAllPlaybackRequest> | undefined, b: QueryAllPlaybackRequest | PlainMessage<QueryAllPlaybackRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPlaybackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllPlaybackResponse
 */
export class QueryAllPlaybackResponse extends Message<QueryAllPlaybackResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.PlaybackLabel playback_list = 5;
   */
  playbackList: PlaybackLabel[] = [];

  constructor(data?: PartialMessage<QueryAllPlaybackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllPlaybackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "playback_list", kind: "message", T: PlaybackLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPlaybackResponse {
    return new QueryAllPlaybackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPlaybackResponse {
    return new QueryAllPlaybackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPlaybackResponse {
    return new QueryAllPlaybackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPlaybackResponse | PlainMessage<QueryAllPlaybackResponse> | undefined, b: QueryAllPlaybackResponse | PlainMessage<QueryAllPlaybackResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPlaybackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ManualBindPlaybackRequest
 */
export class ManualBindPlaybackRequest extends Message<ManualBindPlaybackRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 playback_stream_id = 3;
   */
  playbackStreamId = 0;

  /**
   * @generated from field: repeated int32 channel_id = 4;
   */
  channelId: number[] = [];

  constructor(data?: PartialMessage<ManualBindPlaybackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ManualBindPlaybackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "playback_stream_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "channel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualBindPlaybackRequest {
    return new ManualBindPlaybackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualBindPlaybackRequest {
    return new ManualBindPlaybackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualBindPlaybackRequest {
    return new ManualBindPlaybackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ManualBindPlaybackRequest | PlainMessage<ManualBindPlaybackRequest> | undefined, b: ManualBindPlaybackRequest | PlainMessage<ManualBindPlaybackRequest> | undefined): boolean {
    return proto3.util.equals(ManualBindPlaybackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ManualBindPlaybackResponse
 */
export class ManualBindPlaybackResponse extends Message<ManualBindPlaybackResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ManualBindPlaybackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ManualBindPlaybackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualBindPlaybackResponse {
    return new ManualBindPlaybackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualBindPlaybackResponse {
    return new ManualBindPlaybackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualBindPlaybackResponse {
    return new ManualBindPlaybackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ManualBindPlaybackResponse | PlainMessage<ManualBindPlaybackResponse> | undefined, b: ManualBindPlaybackResponse | PlainMessage<ManualBindPlaybackResponse> | undefined): boolean {
    return proto3.util.equals(ManualBindPlaybackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SyncPlaybackRequest
 */
export class SyncPlaybackRequest extends Message<SyncPlaybackRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<SyncPlaybackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SyncPlaybackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SyncPlaybackRequest {
    return new SyncPlaybackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SyncPlaybackRequest {
    return new SyncPlaybackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SyncPlaybackRequest {
    return new SyncPlaybackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SyncPlaybackRequest | PlainMessage<SyncPlaybackRequest> | undefined, b: SyncPlaybackRequest | PlainMessage<SyncPlaybackRequest> | undefined): boolean {
    return proto3.util.equals(SyncPlaybackRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.SyncPlaybackResponse
 */
export class SyncPlaybackResponse extends Message<SyncPlaybackResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<SyncPlaybackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.SyncPlaybackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SyncPlaybackResponse {
    return new SyncPlaybackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SyncPlaybackResponse {
    return new SyncPlaybackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SyncPlaybackResponse {
    return new SyncPlaybackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SyncPlaybackResponse | PlainMessage<SyncPlaybackResponse> | undefined, b: SyncPlaybackResponse | PlainMessage<SyncPlaybackResponse> | undefined): boolean {
    return proto3.util.equals(SyncPlaybackResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodLinkListRequest
 */
export class QueryVodLinkListRequest extends Message<QueryVodLinkListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: int32 vid = 4;
   */
  vid = 0;

  constructor(data?: PartialMessage<QueryVodLinkListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodLinkListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodLinkListRequest {
    return new QueryVodLinkListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodLinkListRequest {
    return new QueryVodLinkListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodLinkListRequest {
    return new QueryVodLinkListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodLinkListRequest | PlainMessage<QueryVodLinkListRequest> | undefined, b: QueryVodLinkListRequest | PlainMessage<QueryVodLinkListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodLinkListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodLinkListResponse
 */
export class QueryVodLinkListResponse extends Message<QueryVodLinkListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodLink list = 6;
   */
  list: VodLink[] = [];

  constructor(data?: PartialMessage<QueryVodLinkListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodLinkListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: VodLink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodLinkListResponse {
    return new QueryVodLinkListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodLinkListResponse {
    return new QueryVodLinkListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodLinkListResponse {
    return new QueryVodLinkListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodLinkListResponse | PlainMessage<QueryVodLinkListResponse> | undefined, b: QueryVodLinkListResponse | PlainMessage<QueryVodLinkListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodLinkListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodLinkRequest
 */
export class InsertVodLinkRequest extends Message<InsertVodLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodLink vod_link = 3;
   */
  vodLink?: VodLink;

  constructor(data?: PartialMessage<InsertVodLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_link", kind: "message", T: VodLink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodLinkRequest {
    return new InsertVodLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodLinkRequest {
    return new InsertVodLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodLinkRequest {
    return new InsertVodLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodLinkRequest | PlainMessage<InsertVodLinkRequest> | undefined, b: InsertVodLinkRequest | PlainMessage<InsertVodLinkRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodLinkResponse
 */
export class InsertVodLinkResponse extends Message<InsertVodLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<InsertVodLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodLinkResponse {
    return new InsertVodLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodLinkResponse {
    return new InsertVodLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodLinkResponse {
    return new InsertVodLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodLinkResponse | PlainMessage<InsertVodLinkResponse> | undefined, b: InsertVodLinkResponse | PlainMessage<InsertVodLinkResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodLinkRequest
 */
export class UpdateVodLinkRequest extends Message<UpdateVodLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodLink vod_link = 3;
   */
  vodLink?: VodLink;

  constructor(data?: PartialMessage<UpdateVodLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_link", kind: "message", T: VodLink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodLinkRequest {
    return new UpdateVodLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodLinkRequest {
    return new UpdateVodLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodLinkRequest {
    return new UpdateVodLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodLinkRequest | PlainMessage<UpdateVodLinkRequest> | undefined, b: UpdateVodLinkRequest | PlainMessage<UpdateVodLinkRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodLinkResponse
 */
export class UpdateVodLinkResponse extends Message<UpdateVodLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<UpdateVodLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodLinkResponse {
    return new UpdateVodLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodLinkResponse {
    return new UpdateVodLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodLinkResponse {
    return new UpdateVodLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodLinkResponse | PlainMessage<UpdateVodLinkResponse> | undefined, b: UpdateVodLinkResponse | PlainMessage<UpdateVodLinkResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodLinkRequest
 */
export class DeleteVodLinkRequest extends Message<DeleteVodLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodLinkRequest {
    return new DeleteVodLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodLinkRequest {
    return new DeleteVodLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodLinkRequest {
    return new DeleteVodLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodLinkRequest | PlainMessage<DeleteVodLinkRequest> | undefined, b: DeleteVodLinkRequest | PlainMessage<DeleteVodLinkRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodLinkResponse
 */
export class DeleteVodLinkResponse extends Message<DeleteVodLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<DeleteVodLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodLinkResponse {
    return new DeleteVodLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodLinkResponse {
    return new DeleteVodLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodLinkResponse {
    return new DeleteVodLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodLinkResponse | PlainMessage<DeleteVodLinkResponse> | undefined, b: DeleteVodLinkResponse | PlainMessage<DeleteVodLinkResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportVodLinkLogByIdRequest
 */
export class ImportVodLinkLogByIdRequest extends Message<ImportVodLinkLogByIdRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 id = 3;
   */
  id = 0;

  constructor(data?: PartialMessage<ImportVodLinkLogByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportVodLinkLogByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportVodLinkLogByIdRequest {
    return new ImportVodLinkLogByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportVodLinkLogByIdRequest {
    return new ImportVodLinkLogByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportVodLinkLogByIdRequest {
    return new ImportVodLinkLogByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportVodLinkLogByIdRequest | PlainMessage<ImportVodLinkLogByIdRequest> | undefined, b: ImportVodLinkLogByIdRequest | PlainMessage<ImportVodLinkLogByIdRequest> | undefined): boolean {
    return proto3.util.equals(ImportVodLinkLogByIdRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ImportVodLinkLogByIdResponse
 */
export class ImportVodLinkLogByIdResponse extends Message<ImportVodLinkLogByIdResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<ImportVodLinkLogByIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ImportVodLinkLogByIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportVodLinkLogByIdResponse {
    return new ImportVodLinkLogByIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportVodLinkLogByIdResponse {
    return new ImportVodLinkLogByIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportVodLinkLogByIdResponse {
    return new ImportVodLinkLogByIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportVodLinkLogByIdResponse | PlainMessage<ImportVodLinkLogByIdResponse> | undefined, b: ImportVodLinkLogByIdResponse | PlainMessage<ImportVodLinkLogByIdResponse> | undefined): boolean {
    return proto3.util.equals(ImportVodLinkLogByIdResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllVodClassRequest
 */
export class QueryAllVodClassRequest extends Message<QueryAllVodClassRequest> {
  constructor(data?: PartialMessage<QueryAllVodClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllVodClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVodClassRequest {
    return new QueryAllVodClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVodClassRequest {
    return new QueryAllVodClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVodClassRequest {
    return new QueryAllVodClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVodClassRequest | PlainMessage<QueryAllVodClassRequest> | undefined, b: QueryAllVodClassRequest | PlainMessage<QueryAllVodClassRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllVodClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllVodClassResponse
 */
export class QueryAllVodClassResponse extends Message<QueryAllVodClassResponse> {
  /**
   * @generated from field: bool status = 1;
   */
  status = false;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.VodClassLabel list = 3;
   */
  list: VodClassLabel[] = [];

  constructor(data?: PartialMessage<QueryAllVodClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllVodClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "list", kind: "message", T: VodClassLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVodClassResponse {
    return new QueryAllVodClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVodClassResponse {
    return new QueryAllVodClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVodClassResponse {
    return new QueryAllVodClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVodClassResponse | PlainMessage<QueryAllVodClassResponse> | undefined, b: QueryAllVodClassResponse | PlainMessage<QueryAllVodClassResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllVodClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CreateEpgCacheRequest
 */
export class CreateEpgCacheRequest extends Message<CreateEpgCacheRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<CreateEpgCacheRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CreateEpgCacheRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEpgCacheRequest {
    return new CreateEpgCacheRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEpgCacheRequest {
    return new CreateEpgCacheRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEpgCacheRequest {
    return new CreateEpgCacheRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEpgCacheRequest | PlainMessage<CreateEpgCacheRequest> | undefined, b: CreateEpgCacheRequest | PlainMessage<CreateEpgCacheRequest> | undefined): boolean {
    return proto3.util.equals(CreateEpgCacheRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.CreateEpgCacheResponse
 */
export class CreateEpgCacheResponse extends Message<CreateEpgCacheResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  constructor(data?: PartialMessage<CreateEpgCacheResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.CreateEpgCacheResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEpgCacheResponse {
    return new CreateEpgCacheResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEpgCacheResponse {
    return new CreateEpgCacheResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEpgCacheResponse {
    return new CreateEpgCacheResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEpgCacheResponse | PlainMessage<CreateEpgCacheResponse> | undefined, b: CreateEpgCacheResponse | PlainMessage<CreateEpgCacheResponse> | undefined): boolean {
    return proto3.util.equals(CreateEpgCacheResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryTop10ManagerListRequest
 */
export class QueryTop10ManagerListRequest extends Message<QueryTop10ManagerListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryTop10ManagerListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryTop10ManagerListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTop10ManagerListRequest {
    return new QueryTop10ManagerListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTop10ManagerListRequest {
    return new QueryTop10ManagerListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTop10ManagerListRequest {
    return new QueryTop10ManagerListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryTop10ManagerListRequest | PlainMessage<QueryTop10ManagerListRequest> | undefined, b: QueryTop10ManagerListRequest | PlainMessage<QueryTop10ManagerListRequest> | undefined): boolean {
    return proto3.util.equals(QueryTop10ManagerListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryTop10ManagerListResponse
 */
export class QueryTop10ManagerListResponse extends Message<QueryTop10ManagerListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Top10Manager list = 6;
   */
  list: Top10Manager[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryTop10ManagerListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryTop10ManagerListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: Top10Manager, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTop10ManagerListResponse {
    return new QueryTop10ManagerListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTop10ManagerListResponse {
    return new QueryTop10ManagerListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTop10ManagerListResponse {
    return new QueryTop10ManagerListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryTop10ManagerListResponse | PlainMessage<QueryTop10ManagerListResponse> | undefined, b: QueryTop10ManagerListResponse | PlainMessage<QueryTop10ManagerListResponse> | undefined): boolean {
    return proto3.util.equals(QueryTop10ManagerListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertTop10ManagerRequest
 */
export class InsertTop10ManagerRequest extends Message<InsertTop10ManagerRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Top10Manager top10_manager = 3;
   */
  top10Manager?: Top10Manager;

  constructor(data?: PartialMessage<InsertTop10ManagerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertTop10ManagerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "top10_manager", kind: "message", T: Top10Manager },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertTop10ManagerRequest {
    return new InsertTop10ManagerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertTop10ManagerRequest {
    return new InsertTop10ManagerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertTop10ManagerRequest {
    return new InsertTop10ManagerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertTop10ManagerRequest | PlainMessage<InsertTop10ManagerRequest> | undefined, b: InsertTop10ManagerRequest | PlainMessage<InsertTop10ManagerRequest> | undefined): boolean {
    return proto3.util.equals(InsertTop10ManagerRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertTop10ManagerResponse
 */
export class InsertTop10ManagerResponse extends Message<InsertTop10ManagerResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertTop10ManagerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertTop10ManagerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertTop10ManagerResponse {
    return new InsertTop10ManagerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertTop10ManagerResponse {
    return new InsertTop10ManagerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertTop10ManagerResponse {
    return new InsertTop10ManagerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertTop10ManagerResponse | PlainMessage<InsertTop10ManagerResponse> | undefined, b: InsertTop10ManagerResponse | PlainMessage<InsertTop10ManagerResponse> | undefined): boolean {
    return proto3.util.equals(InsertTop10ManagerResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateTop10ManagerRequest
 */
export class UpdateTop10ManagerRequest extends Message<UpdateTop10ManagerRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Top10Manager top10_manager = 3;
   */
  top10Manager?: Top10Manager;

  constructor(data?: PartialMessage<UpdateTop10ManagerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateTop10ManagerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "top10_manager", kind: "message", T: Top10Manager },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTop10ManagerRequest {
    return new UpdateTop10ManagerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTop10ManagerRequest {
    return new UpdateTop10ManagerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTop10ManagerRequest {
    return new UpdateTop10ManagerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateTop10ManagerRequest | PlainMessage<UpdateTop10ManagerRequest> | undefined, b: UpdateTop10ManagerRequest | PlainMessage<UpdateTop10ManagerRequest> | undefined): boolean {
    return proto3.util.equals(UpdateTop10ManagerRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateTop10ManagerResponse
 */
export class UpdateTop10ManagerResponse extends Message<UpdateTop10ManagerResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateTop10ManagerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateTop10ManagerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTop10ManagerResponse {
    return new UpdateTop10ManagerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTop10ManagerResponse {
    return new UpdateTop10ManagerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTop10ManagerResponse {
    return new UpdateTop10ManagerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateTop10ManagerResponse | PlainMessage<UpdateTop10ManagerResponse> | undefined, b: UpdateTop10ManagerResponse | PlainMessage<UpdateTop10ManagerResponse> | undefined): boolean {
    return proto3.util.equals(UpdateTop10ManagerResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.PullVodTop10ByDistributorRequest
 */
export class PullVodTop10ByDistributorRequest extends Message<PullVodTop10ByDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 combo_id = 3;
   */
  comboId = 0;

  constructor(data?: PartialMessage<PullVodTop10ByDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.PullVodTop10ByDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PullVodTop10ByDistributorRequest {
    return new PullVodTop10ByDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PullVodTop10ByDistributorRequest {
    return new PullVodTop10ByDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PullVodTop10ByDistributorRequest {
    return new PullVodTop10ByDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PullVodTop10ByDistributorRequest | PlainMessage<PullVodTop10ByDistributorRequest> | undefined, b: PullVodTop10ByDistributorRequest | PlainMessage<PullVodTop10ByDistributorRequest> | undefined): boolean {
    return proto3.util.equals(PullVodTop10ByDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.PullVodTop10ByDistributorResponse
 */
export class PullVodTop10ByDistributorResponse extends Message<PullVodTop10ByDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<PullVodTop10ByDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.PullVodTop10ByDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PullVodTop10ByDistributorResponse {
    return new PullVodTop10ByDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PullVodTop10ByDistributorResponse {
    return new PullVodTop10ByDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PullVodTop10ByDistributorResponse {
    return new PullVodTop10ByDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PullVodTop10ByDistributorResponse | PlainMessage<PullVodTop10ByDistributorResponse> | undefined, b: PullVodTop10ByDistributorResponse | PlainMessage<PullVodTop10ByDistributorResponse> | undefined): boolean {
    return proto3.util.equals(PullVodTop10ByDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ClearVodTop10ByDistributorRequest
 */
export class ClearVodTop10ByDistributorRequest extends Message<ClearVodTop10ByDistributorRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 combo_id = 3;
   */
  comboId = 0;

  constructor(data?: PartialMessage<ClearVodTop10ByDistributorRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ClearVodTop10ByDistributorRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "combo_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearVodTop10ByDistributorRequest {
    return new ClearVodTop10ByDistributorRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearVodTop10ByDistributorRequest {
    return new ClearVodTop10ByDistributorRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearVodTop10ByDistributorRequest {
    return new ClearVodTop10ByDistributorRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ClearVodTop10ByDistributorRequest | PlainMessage<ClearVodTop10ByDistributorRequest> | undefined, b: ClearVodTop10ByDistributorRequest | PlainMessage<ClearVodTop10ByDistributorRequest> | undefined): boolean {
    return proto3.util.equals(ClearVodTop10ByDistributorRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.ClearVodTop10ByDistributorResponse
 */
export class ClearVodTop10ByDistributorResponse extends Message<ClearVodTop10ByDistributorResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<ClearVodTop10ByDistributorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.ClearVodTop10ByDistributorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearVodTop10ByDistributorResponse {
    return new ClearVodTop10ByDistributorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearVodTop10ByDistributorResponse {
    return new ClearVodTop10ByDistributorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearVodTop10ByDistributorResponse {
    return new ClearVodTop10ByDistributorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ClearVodTop10ByDistributorResponse | PlainMessage<ClearVodTop10ByDistributorResponse> | undefined, b: ClearVodTop10ByDistributorResponse | PlainMessage<ClearVodTop10ByDistributorResponse> | undefined): boolean {
    return proto3.util.equals(ClearVodTop10ByDistributorResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodDesktopListRequest
 */
export class QueryVodDesktopListRequest extends Message<QueryVodDesktopListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: int32 first_id = 4;
   */
  firstId = 0;

  constructor(data?: PartialMessage<QueryVodDesktopListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodDesktopListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "first_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodDesktopListRequest {
    return new QueryVodDesktopListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodDesktopListRequest {
    return new QueryVodDesktopListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodDesktopListRequest {
    return new QueryVodDesktopListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodDesktopListRequest | PlainMessage<QueryVodDesktopListRequest> | undefined, b: QueryVodDesktopListRequest | PlainMessage<QueryVodDesktopListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodDesktopListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodDesktopListResponse
 */
export class QueryVodDesktopListResponse extends Message<QueryVodDesktopListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.Vod list = 6;
   */
  list: Vod[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodDesktopListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodDesktopListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: Vod, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodDesktopListResponse {
    return new QueryVodDesktopListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodDesktopListResponse {
    return new QueryVodDesktopListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodDesktopListResponse {
    return new QueryVodDesktopListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodDesktopListResponse | PlainMessage<QueryVodDesktopListResponse> | undefined, b: QueryVodDesktopListResponse | PlainMessage<QueryVodDesktopListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodDesktopListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodDesktopRequest
 */
export class InsertVodDesktopRequest extends Message<InsertVodDesktopRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Vod vod = 3;
   */
  vod?: Vod;

  constructor(data?: PartialMessage<InsertVodDesktopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodDesktopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod", kind: "message", T: Vod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodDesktopRequest {
    return new InsertVodDesktopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodDesktopRequest {
    return new InsertVodDesktopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodDesktopRequest {
    return new InsertVodDesktopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodDesktopRequest | PlainMessage<InsertVodDesktopRequest> | undefined, b: InsertVodDesktopRequest | PlainMessage<InsertVodDesktopRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodDesktopRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodDesktopResponse
 */
export class InsertVodDesktopResponse extends Message<InsertVodDesktopResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVodDesktopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodDesktopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodDesktopResponse {
    return new InsertVodDesktopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodDesktopResponse {
    return new InsertVodDesktopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodDesktopResponse {
    return new InsertVodDesktopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodDesktopResponse | PlainMessage<InsertVodDesktopResponse> | undefined, b: InsertVodDesktopResponse | PlainMessage<InsertVodDesktopResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodDesktopResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodDesktopRequest
 */
export class UpdateVodDesktopRequest extends Message<UpdateVodDesktopRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.Vod vod = 3;
   */
  vod?: Vod;

  constructor(data?: PartialMessage<UpdateVodDesktopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodDesktopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod", kind: "message", T: Vod },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodDesktopRequest {
    return new UpdateVodDesktopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodDesktopRequest {
    return new UpdateVodDesktopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodDesktopRequest {
    return new UpdateVodDesktopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodDesktopRequest | PlainMessage<UpdateVodDesktopRequest> | undefined, b: UpdateVodDesktopRequest | PlainMessage<UpdateVodDesktopRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodDesktopRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodDesktopResponse
 */
export class UpdateVodDesktopResponse extends Message<UpdateVodDesktopResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVodDesktopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodDesktopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodDesktopResponse {
    return new UpdateVodDesktopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodDesktopResponse {
    return new UpdateVodDesktopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodDesktopResponse {
    return new UpdateVodDesktopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodDesktopResponse | PlainMessage<UpdateVodDesktopResponse> | undefined, b: UpdateVodDesktopResponse | PlainMessage<UpdateVodDesktopResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodDesktopResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodDesktopRequest
 */
export class DeleteVodDesktopRequest extends Message<DeleteVodDesktopRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodDesktopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodDesktopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodDesktopRequest {
    return new DeleteVodDesktopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodDesktopRequest {
    return new DeleteVodDesktopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodDesktopRequest {
    return new DeleteVodDesktopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodDesktopRequest | PlainMessage<DeleteVodDesktopRequest> | undefined, b: DeleteVodDesktopRequest | PlainMessage<DeleteVodDesktopRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodDesktopRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodDesktopResponse
 */
export class DeleteVodDesktopResponse extends Message<DeleteVodDesktopResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<DeleteVodDesktopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodDesktopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodDesktopResponse {
    return new DeleteVodDesktopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodDesktopResponse {
    return new DeleteVodDesktopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodDesktopResponse {
    return new DeleteVodDesktopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodDesktopResponse | PlainMessage<DeleteVodDesktopResponse> | undefined, b: DeleteVodDesktopResponse | PlainMessage<DeleteVodDesktopResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodDesktopResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodDesktopLinkListRequest
 */
export class QueryVodDesktopLinkListRequest extends Message<QueryVodDesktopLinkListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: int32 vid = 4;
   */
  vid = 0;

  constructor(data?: PartialMessage<QueryVodDesktopLinkListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodDesktopLinkListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodDesktopLinkListRequest {
    return new QueryVodDesktopLinkListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodDesktopLinkListRequest {
    return new QueryVodDesktopLinkListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodDesktopLinkListRequest {
    return new QueryVodDesktopLinkListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodDesktopLinkListRequest | PlainMessage<QueryVodDesktopLinkListRequest> | undefined, b: QueryVodDesktopLinkListRequest | PlainMessage<QueryVodDesktopLinkListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodDesktopLinkListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodDesktopLinkListResponse
 */
export class QueryVodDesktopLinkListResponse extends Message<QueryVodDesktopLinkListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodLink list = 6;
   */
  list: VodLink[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodDesktopLinkListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodDesktopLinkListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: VodLink, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodDesktopLinkListResponse {
    return new QueryVodDesktopLinkListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodDesktopLinkListResponse {
    return new QueryVodDesktopLinkListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodDesktopLinkListResponse {
    return new QueryVodDesktopLinkListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodDesktopLinkListResponse | PlainMessage<QueryVodDesktopLinkListResponse> | undefined, b: QueryVodDesktopLinkListResponse | PlainMessage<QueryVodDesktopLinkListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodDesktopLinkListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodDesktopLinkRequest
 */
export class InsertVodDesktopLinkRequest extends Message<InsertVodDesktopLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodLink vod_link = 3;
   */
  vodLink?: VodLink;

  constructor(data?: PartialMessage<InsertVodDesktopLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodDesktopLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_link", kind: "message", T: VodLink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodDesktopLinkRequest {
    return new InsertVodDesktopLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodDesktopLinkRequest {
    return new InsertVodDesktopLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodDesktopLinkRequest {
    return new InsertVodDesktopLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodDesktopLinkRequest | PlainMessage<InsertVodDesktopLinkRequest> | undefined, b: InsertVodDesktopLinkRequest | PlainMessage<InsertVodDesktopLinkRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodDesktopLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodDesktopLinkResponse
 */
export class InsertVodDesktopLinkResponse extends Message<InsertVodDesktopLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVodDesktopLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodDesktopLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodDesktopLinkResponse {
    return new InsertVodDesktopLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodDesktopLinkResponse {
    return new InsertVodDesktopLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodDesktopLinkResponse {
    return new InsertVodDesktopLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodDesktopLinkResponse | PlainMessage<InsertVodDesktopLinkResponse> | undefined, b: InsertVodDesktopLinkResponse | PlainMessage<InsertVodDesktopLinkResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodDesktopLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodDesktopLinkRequest
 */
export class UpdateVodDesktopLinkRequest extends Message<UpdateVodDesktopLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodLink vod_link = 3;
   */
  vodLink?: VodLink;

  constructor(data?: PartialMessage<UpdateVodDesktopLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodDesktopLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_link", kind: "message", T: VodLink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodDesktopLinkRequest {
    return new UpdateVodDesktopLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodDesktopLinkRequest {
    return new UpdateVodDesktopLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodDesktopLinkRequest {
    return new UpdateVodDesktopLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodDesktopLinkRequest | PlainMessage<UpdateVodDesktopLinkRequest> | undefined, b: UpdateVodDesktopLinkRequest | PlainMessage<UpdateVodDesktopLinkRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodDesktopLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodDesktopLinkResponse
 */
export class UpdateVodDesktopLinkResponse extends Message<UpdateVodDesktopLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVodDesktopLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodDesktopLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodDesktopLinkResponse {
    return new UpdateVodDesktopLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodDesktopLinkResponse {
    return new UpdateVodDesktopLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodDesktopLinkResponse {
    return new UpdateVodDesktopLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodDesktopLinkResponse | PlainMessage<UpdateVodDesktopLinkResponse> | undefined, b: UpdateVodDesktopLinkResponse | PlainMessage<UpdateVodDesktopLinkResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodDesktopLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodDesktopLinkRequest
 */
export class DeleteVodDesktopLinkRequest extends Message<DeleteVodDesktopLinkRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodDesktopLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodDesktopLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodDesktopLinkRequest {
    return new DeleteVodDesktopLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodDesktopLinkRequest {
    return new DeleteVodDesktopLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodDesktopLinkRequest {
    return new DeleteVodDesktopLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodDesktopLinkRequest | PlainMessage<DeleteVodDesktopLinkRequest> | undefined, b: DeleteVodDesktopLinkRequest | PlainMessage<DeleteVodDesktopLinkRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodDesktopLinkRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodDesktopLinkResponse
 */
export class DeleteVodDesktopLinkResponse extends Message<DeleteVodDesktopLinkResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<DeleteVodDesktopLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodDesktopLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodDesktopLinkResponse {
    return new DeleteVodDesktopLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodDesktopLinkResponse {
    return new DeleteVodDesktopLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodDesktopLinkResponse {
    return new DeleteVodDesktopLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodDesktopLinkResponse | PlainMessage<DeleteVodDesktopLinkResponse> | undefined, b: DeleteVodDesktopLinkResponse | PlainMessage<DeleteVodDesktopLinkResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodDesktopLinkResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetTop10Request
 */
export class GetTop10Request extends Message<GetTop10Request> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 4;
   */
  modelName = "";

  /**
   * @generated from field: string version = 5;
   */
  version = "";

  /**
   * @generated from field: int32 limit_num = 6;
   */
  limitNum = 0;

  /**
   * @generated from field: string mac = 7;
   */
  mac = "";

  /**
   * @generated from field: string class_name = 8;
   */
  className = "";

  constructor(data?: PartialMessage<GetTop10Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetTop10Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "limit_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTop10Request {
    return new GetTop10Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTop10Request {
    return new GetTop10Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTop10Request {
    return new GetTop10Request().fromJsonString(jsonString, options);
  }

  static equals(a: GetTop10Request | PlainMessage<GetTop10Request> | undefined, b: GetTop10Request | PlainMessage<GetTop10Request> | undefined): boolean {
    return proto3.util.equals(GetTop10Request, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetTop10Response
 */
export class GetTop10Response extends Message<GetTop10Response> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetTop10Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetTop10Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTop10Response {
    return new GetTop10Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTop10Response {
    return new GetTop10Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTop10Response {
    return new GetTop10Response().fromJsonString(jsonString, options);
  }

  static equals(a: GetTop10Response | PlainMessage<GetTop10Response> | undefined, b: GetTop10Response | PlainMessage<GetTop10Response> | undefined): boolean {
    return proto3.util.equals(GetTop10Response, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodDetailRequest
 */
export class GetVodDetailRequest extends Message<GetVodDetailRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 4;
   */
  modelName = "";

  /**
   * @generated from field: int32 vid = 5;
   */
  vid = 0;

  /**
   * @generated from field: string mac = 6;
   */
  mac = "";

  /**
   * @generated from field: string class_name = 7;
   */
  className = "";

  constructor(data?: PartialMessage<GetVodDetailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodDetailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodDetailRequest {
    return new GetVodDetailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodDetailRequest {
    return new GetVodDetailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodDetailRequest {
    return new GetVodDetailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodDetailRequest | PlainMessage<GetVodDetailRequest> | undefined, b: GetVodDetailRequest | PlainMessage<GetVodDetailRequest> | undefined): boolean {
    return proto3.util.equals(GetVodDetailRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodDetailResponse
 */
export class GetVodDetailResponse extends Message<GetVodDetailResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetVodDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodDetailResponse {
    return new GetVodDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodDetailResponse {
    return new GetVodDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodDetailResponse {
    return new GetVodDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodDetailResponse | PlainMessage<GetVodDetailResponse> | undefined, b: GetVodDetailResponse | PlainMessage<GetVodDetailResponse> | undefined): boolean {
    return proto3.util.equals(GetVodDetailResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMainScreenRequest
 */
export class GetMainScreenRequest extends Message<GetMainScreenRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: string mac = 4;
   */
  mac = "";

  /**
   * @generated from field: string version = 5;
   */
  version = "";

  /**
   * @generated from field: string lang = 6;
   */
  lang = "";

  /**
   * @generated from field: string model_name = 7;
   */
  modelName = "";

  /**
   * @generated from field: int32 limit_num = 8;
   */
  limitNum = 0;

  /**
   * @generated from field: string class_name = 9;
   */
  className = "";

  constructor(data?: PartialMessage<GetMainScreenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMainScreenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "limit_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMainScreenRequest {
    return new GetMainScreenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMainScreenRequest {
    return new GetMainScreenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMainScreenRequest {
    return new GetMainScreenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMainScreenRequest | PlainMessage<GetMainScreenRequest> | undefined, b: GetMainScreenRequest | PlainMessage<GetMainScreenRequest> | undefined): boolean {
    return proto3.util.equals(GetMainScreenRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMainScreenResponse
 */
export class GetMainScreenResponse extends Message<GetMainScreenResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetMainScreenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMainScreenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMainScreenResponse {
    return new GetMainScreenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMainScreenResponse {
    return new GetMainScreenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMainScreenResponse {
    return new GetMainScreenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMainScreenResponse | PlainMessage<GetMainScreenResponse> | undefined, b: GetMainScreenResponse | PlainMessage<GetMainScreenResponse> | undefined): boolean {
    return proto3.util.equals(GetMainScreenResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetFilterRequest
 */
export class GetFilterRequest extends Message<GetFilterRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 4;
   */
  mac = "";

  /**
   * @generated from field: string lang = 6;
   */
  lang = "";

  /**
   * @generated from field: string version = 7;
   */
  version = "";

  /**
   * @generated from field: string class_name = 8;
   */
  className = "";

  constructor(data?: PartialMessage<GetFilterRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetFilterRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilterRequest {
    return new GetFilterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilterRequest {
    return new GetFilterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilterRequest {
    return new GetFilterRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilterRequest | PlainMessage<GetFilterRequest> | undefined, b: GetFilterRequest | PlainMessage<GetFilterRequest> | undefined): boolean {
    return proto3.util.equals(GetFilterRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetFilterResponse
 */
export class GetFilterResponse extends Message<GetFilterResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetFilterResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetFilterResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilterResponse {
    return new GetFilterResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilterResponse {
    return new GetFilterResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilterResponse {
    return new GetFilterResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilterResponse | PlainMessage<GetFilterResponse> | undefined, b: GetFilterResponse | PlainMessage<GetFilterResponse> | undefined): boolean {
    return proto3.util.equals(GetFilterResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodRequest
 */
export class GetVodRequest extends Message<GetVodRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 page = 3;
   */
  page = 0;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: string mac = 5;
   */
  mac = "";

  /**
   * @generated from field: string lang = 6;
   */
  lang = "";

  /**
   * @generated from field: string keyword = 7;
   */
  keyword = "";

  /**
   * @generated from field: string category = 8;
   */
  category = "";

  /**
   * @generated from field: map<string, string> filter = 9;
   */
  filter: { [key: string]: string } = {};

  /**
   *  string year = 9;
   *  string genre = 10;
   *  string country = 11;
   *
   * @generated from field: int32 class_id = 10;
   */
  classId = 0;

  /**
   * @generated from field: string class_name = 11;
   */
  className = "";

  constructor(data?: PartialMessage<GetVodRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "category", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "filter", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 10, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodRequest {
    return new GetVodRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodRequest {
    return new GetVodRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodRequest {
    return new GetVodRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodRequest | PlainMessage<GetVodRequest> | undefined, b: GetVodRequest | PlainMessage<GetVodRequest> | undefined): boolean {
    return proto3.util.equals(GetVodRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodResponse
 */
export class GetVodResponse extends Message<GetVodResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetVodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodResponse {
    return new GetVodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodResponse {
    return new GetVodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodResponse {
    return new GetVodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodResponse | PlainMessage<GetVodResponse> | undefined, b: GetVodResponse | PlainMessage<GetVodResponse> | undefined): boolean {
    return proto3.util.equals(GetVodResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodInfoRequest
 */
export class GetVodInfoRequest extends Message<GetVodInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string mac = 3;
   */
  mac = "";

  /**
   * @generated from field: int32 vid = 4;
   */
  vid = 0;

  /**
   * @generated from field: string lang = 5;
   */
  lang = "";

  /**
   * @generated from field: int32 limit_num = 6;
   */
  limitNum = 0;

  /**
   * @generated from field: string class_name = 7;
   */
  className = "";

  constructor(data?: PartialMessage<GetVodInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "vid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "limit_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodInfoRequest {
    return new GetVodInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodInfoRequest {
    return new GetVodInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodInfoRequest {
    return new GetVodInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodInfoRequest | PlainMessage<GetVodInfoRequest> | undefined, b: GetVodInfoRequest | PlainMessage<GetVodInfoRequest> | undefined): boolean {
    return proto3.util.equals(GetVodInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetVodInfoResponse
 */
export class GetVodInfoResponse extends Message<GetVodInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetVodInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetVodInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVodInfoResponse {
    return new GetVodInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVodInfoResponse {
    return new GetVodInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVodInfoResponse {
    return new GetVodInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVodInfoResponse | PlainMessage<GetVodInfoResponse> | undefined, b: GetVodInfoResponse | PlainMessage<GetVodInfoResponse> | undefined): boolean {
    return proto3.util.equals(GetVodInfoResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryClassListRequest
 */
export class QueryClassListRequest extends Message<QueryClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.ClassData class_filter = 4;
   */
  classFilter?: ClassData;

  constructor(data?: PartialMessage<QueryClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "class_filter", kind: "message", T: ClassData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassListRequest {
    return new QueryClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassListRequest | PlainMessage<QueryClassListRequest> | undefined, b: QueryClassListRequest | PlainMessage<QueryClassListRequest> | undefined): boolean {
    return proto3.util.equals(QueryClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryClassListResponse
 */
export class QueryClassListResponse extends Message<QueryClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.ClassData list = 6;
   */
  list: ClassData[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: ClassData, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassListResponse {
    return new QueryClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassListResponse | PlainMessage<QueryClassListResponse> | undefined, b: QueryClassListResponse | PlainMessage<QueryClassListResponse> | undefined): boolean {
    return proto3.util.equals(QueryClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertClassRequest
 */
export class InsertClassRequest extends Message<InsertClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.ClassData class = 3;
   */
  class?: ClassData;

  constructor(data?: PartialMessage<InsertClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "message", T: ClassData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassRequest {
    return new InsertClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassRequest | PlainMessage<InsertClassRequest> | undefined, b: InsertClassRequest | PlainMessage<InsertClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertClassResponse
 */
export class InsertClassResponse extends Message<InsertClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassResponse {
    return new InsertClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassResponse | PlainMessage<InsertClassResponse> | undefined, b: InsertClassResponse | PlainMessage<InsertClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateClassRequest
 */
export class UpdateClassRequest extends Message<UpdateClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.ClassData class = 3;
   */
  class?: ClassData;

  constructor(data?: PartialMessage<UpdateClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class", kind: "message", T: ClassData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassRequest {
    return new UpdateClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassRequest | PlainMessage<UpdateClassRequest> | undefined, b: UpdateClassRequest | PlainMessage<UpdateClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateClassResponse
 */
export class UpdateClassResponse extends Message<UpdateClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassResponse {
    return new UpdateClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassResponse | PlainMessage<UpdateClassResponse> | undefined, b: UpdateClassResponse | PlainMessage<UpdateClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMowoClassListRequest
 */
export class QueryMowoClassListRequest extends Message<QueryMowoClassListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  constructor(data?: PartialMessage<QueryMowoClassListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMowoClassListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMowoClassListRequest {
    return new QueryMowoClassListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMowoClassListRequest {
    return new QueryMowoClassListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMowoClassListRequest {
    return new QueryMowoClassListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMowoClassListRequest | PlainMessage<QueryMowoClassListRequest> | undefined, b: QueryMowoClassListRequest | PlainMessage<QueryMowoClassListRequest> | undefined): boolean {
    return proto3.util.equals(QueryMowoClassListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryMowoClassListResponse
 */
export class QueryMowoClassListResponse extends Message<QueryMowoClassListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.MowoClass list = 6;
   */
  list: MowoClass[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryMowoClassListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryMowoClassListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: MowoClass, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMowoClassListResponse {
    return new QueryMowoClassListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMowoClassListResponse {
    return new QueryMowoClassListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMowoClassListResponse {
    return new QueryMowoClassListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryMowoClassListResponse | PlainMessage<QueryMowoClassListResponse> | undefined, b: QueryMowoClassListResponse | PlainMessage<QueryMowoClassListResponse> | undefined): boolean {
    return proto3.util.equals(QueryMowoClassListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMowoClassRequest
 */
export class InsertMowoClassRequest extends Message<InsertMowoClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MowoClass mowo_class = 3;
   */
  mowoClass?: MowoClass;

  constructor(data?: PartialMessage<InsertMowoClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMowoClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mowo_class", kind: "message", T: MowoClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMowoClassRequest {
    return new InsertMowoClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMowoClassRequest {
    return new InsertMowoClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMowoClassRequest {
    return new InsertMowoClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMowoClassRequest | PlainMessage<InsertMowoClassRequest> | undefined, b: InsertMowoClassRequest | PlainMessage<InsertMowoClassRequest> | undefined): boolean {
    return proto3.util.equals(InsertMowoClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertMowoClassResponse
 */
export class InsertMowoClassResponse extends Message<InsertMowoClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertMowoClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertMowoClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertMowoClassResponse {
    return new InsertMowoClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertMowoClassResponse {
    return new InsertMowoClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertMowoClassResponse {
    return new InsertMowoClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertMowoClassResponse | PlainMessage<InsertMowoClassResponse> | undefined, b: InsertMowoClassResponse | PlainMessage<InsertMowoClassResponse> | undefined): boolean {
    return proto3.util.equals(InsertMowoClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMowoClassRequest
 */
export class UpdateMowoClassRequest extends Message<UpdateMowoClassRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.MowoClass mowo_class = 3;
   */
  mowoClass?: MowoClass;

  constructor(data?: PartialMessage<UpdateMowoClassRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMowoClassRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "mowo_class", kind: "message", T: MowoClass },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMowoClassRequest {
    return new UpdateMowoClassRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMowoClassRequest {
    return new UpdateMowoClassRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMowoClassRequest {
    return new UpdateMowoClassRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMowoClassRequest | PlainMessage<UpdateMowoClassRequest> | undefined, b: UpdateMowoClassRequest | PlainMessage<UpdateMowoClassRequest> | undefined): boolean {
    return proto3.util.equals(UpdateMowoClassRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateMowoClassResponse
 */
export class UpdateMowoClassResponse extends Message<UpdateMowoClassResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateMowoClassResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateMowoClassResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMowoClassResponse {
    return new UpdateMowoClassResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMowoClassResponse {
    return new UpdateMowoClassResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMowoClassResponse {
    return new UpdateMowoClassResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateMowoClassResponse | PlainMessage<UpdateMowoClassResponse> | undefined, b: UpdateMowoClassResponse | PlainMessage<UpdateMowoClassResponse> | undefined): boolean {
    return proto3.util.equals(UpdateMowoClassResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryClassResourceListRequest
 */
export class QueryClassResourceListRequest extends Message<QueryClassResourceListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.ClassResource class_filter = 4;
   */
  classFilter?: ClassResource;

  constructor(data?: PartialMessage<QueryClassResourceListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryClassResourceListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "class_filter", kind: "message", T: ClassResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassResourceListRequest {
    return new QueryClassResourceListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassResourceListRequest {
    return new QueryClassResourceListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassResourceListRequest {
    return new QueryClassResourceListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassResourceListRequest | PlainMessage<QueryClassResourceListRequest> | undefined, b: QueryClassResourceListRequest | PlainMessage<QueryClassResourceListRequest> | undefined): boolean {
    return proto3.util.equals(QueryClassResourceListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryClassResourceListResponse
 */
export class QueryClassResourceListResponse extends Message<QueryClassResourceListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.ClassResource list = 6;
   */
  list: ClassResource[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryClassResourceListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryClassResourceListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: ClassResource, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryClassResourceListResponse {
    return new QueryClassResourceListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryClassResourceListResponse {
    return new QueryClassResourceListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryClassResourceListResponse {
    return new QueryClassResourceListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryClassResourceListResponse | PlainMessage<QueryClassResourceListResponse> | undefined, b: QueryClassResourceListResponse | PlainMessage<QueryClassResourceListResponse> | undefined): boolean {
    return proto3.util.equals(QueryClassResourceListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertClassResourceRequest
 */
export class InsertClassResourceRequest extends Message<InsertClassResourceRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.ClassResource class_resource = 3;
   */
  classResource?: ClassResource;

  constructor(data?: PartialMessage<InsertClassResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertClassResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class_resource", kind: "message", T: ClassResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassResourceRequest {
    return new InsertClassResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassResourceRequest {
    return new InsertClassResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassResourceRequest {
    return new InsertClassResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassResourceRequest | PlainMessage<InsertClassResourceRequest> | undefined, b: InsertClassResourceRequest | PlainMessage<InsertClassResourceRequest> | undefined): boolean {
    return proto3.util.equals(InsertClassResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertClassResourceResponse
 */
export class InsertClassResourceResponse extends Message<InsertClassResourceResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertClassResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertClassResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertClassResourceResponse {
    return new InsertClassResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertClassResourceResponse {
    return new InsertClassResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertClassResourceResponse {
    return new InsertClassResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertClassResourceResponse | PlainMessage<InsertClassResourceResponse> | undefined, b: InsertClassResourceResponse | PlainMessage<InsertClassResourceResponse> | undefined): boolean {
    return proto3.util.equals(InsertClassResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateClassResourceRequest
 */
export class UpdateClassResourceRequest extends Message<UpdateClassResourceRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.ClassResource class_resource = 3;
   */
  classResource?: ClassResource;

  constructor(data?: PartialMessage<UpdateClassResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateClassResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class_resource", kind: "message", T: ClassResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassResourceRequest {
    return new UpdateClassResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassResourceRequest {
    return new UpdateClassResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassResourceRequest {
    return new UpdateClassResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassResourceRequest | PlainMessage<UpdateClassResourceRequest> | undefined, b: UpdateClassResourceRequest | PlainMessage<UpdateClassResourceRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClassResourceRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateClassResourceResponse
 */
export class UpdateClassResourceResponse extends Message<UpdateClassResourceResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateClassResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateClassResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClassResourceResponse {
    return new UpdateClassResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClassResourceResponse {
    return new UpdateClassResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClassResourceResponse {
    return new UpdateClassResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClassResourceResponse | PlainMessage<UpdateClassResourceResponse> | undefined, b: UpdateClassResourceResponse | PlainMessage<UpdateClassResourceResponse> | undefined): boolean {
    return proto3.util.equals(UpdateClassResourceResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllResourceByClassIdRequest
 */
export class QueryAllResourceByClassIdRequest extends Message<QueryAllResourceByClassIdRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: int32 class_id = 3;
   */
  classId = 0;

  /**
   * @generated from field: string key = 4;
   */
  key = "";

  constructor(data?: PartialMessage<QueryAllResourceByClassIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllResourceByClassIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllResourceByClassIdRequest {
    return new QueryAllResourceByClassIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllResourceByClassIdRequest {
    return new QueryAllResourceByClassIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllResourceByClassIdRequest {
    return new QueryAllResourceByClassIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllResourceByClassIdRequest | PlainMessage<QueryAllResourceByClassIdRequest> | undefined, b: QueryAllResourceByClassIdRequest | PlainMessage<QueryAllResourceByClassIdRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllResourceByClassIdRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllResourceByClassIdResponse
 */
export class QueryAllResourceByClassIdResponse extends Message<QueryAllResourceByClassIdResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.ClassResourceLabel list = 6;
   */
  list: ClassResourceLabel[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryAllResourceByClassIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllResourceByClassIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: ClassResourceLabel, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllResourceByClassIdResponse {
    return new QueryAllResourceByClassIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllResourceByClassIdResponse {
    return new QueryAllResourceByClassIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllResourceByClassIdResponse {
    return new QueryAllResourceByClassIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllResourceByClassIdResponse | PlainMessage<QueryAllResourceByClassIdResponse> | undefined, b: QueryAllResourceByClassIdResponse | PlainMessage<QueryAllResourceByClassIdResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllResourceByClassIdResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMainDataRequest
 */
export class GetMainDataRequest extends Message<GetMainDataRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: string distributor_id = 3;
   */
  distributorId = "";

  /**
   * @generated from field: string model_name = 4;
   */
  modelName = "";

  /**
   * @generated from field: string version = 5;
   */
  version = "";

  /**
   * @generated from field: int32 limit_num = 6;
   */
  limitNum = 0;

  /**
   * @generated from field: string mac = 7;
   */
  mac = "";

  /**
   * @generated from field: string combo = 8;
   */
  combo = "";

  constructor(data?: PartialMessage<GetMainDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMainDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "distributor_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "limit_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "mac", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "combo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMainDataRequest {
    return new GetMainDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMainDataRequest {
    return new GetMainDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMainDataRequest {
    return new GetMainDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMainDataRequest | PlainMessage<GetMainDataRequest> | undefined, b: GetMainDataRequest | PlainMessage<GetMainDataRequest> | undefined): boolean {
    return proto3.util.equals(GetMainDataRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.GetMainDataResponse
 */
export class GetMainDataResponse extends Message<GetMainDataResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: bytes data = 6;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<GetMainDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.GetMainDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMainDataResponse {
    return new GetMainDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMainDataResponse {
    return new GetMainDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMainDataResponse {
    return new GetMainDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMainDataResponse | PlainMessage<GetMainDataResponse> | undefined, b: GetMainDataResponse | PlainMessage<GetMainDataResponse> | undefined): boolean {
    return proto3.util.equals(GetMainDataResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllAddressTypeRequest
 */
export class QueryAllAddressTypeRequest extends Message<QueryAllAddressTypeRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllAddressTypeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllAddressTypeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAddressTypeRequest {
    return new QueryAllAddressTypeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAddressTypeRequest {
    return new QueryAllAddressTypeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAddressTypeRequest {
    return new QueryAllAddressTypeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAddressTypeRequest | PlainMessage<QueryAllAddressTypeRequest> | undefined, b: QueryAllAddressTypeRequest | PlainMessage<QueryAllAddressTypeRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllAddressTypeRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllAddressTypeResponse
 */
export class QueryAllAddressTypeResponse extends Message<QueryAllAddressTypeResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.LabelResp address_type_list = 5;
   */
  addressTypeList: LabelResp[] = [];

  constructor(data?: PartialMessage<QueryAllAddressTypeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllAddressTypeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "address_type_list", kind: "message", T: LabelResp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAddressTypeResponse {
    return new QueryAllAddressTypeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAddressTypeResponse {
    return new QueryAllAddressTypeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAddressTypeResponse {
    return new QueryAllAddressTypeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAddressTypeResponse | PlainMessage<QueryAllAddressTypeResponse> | undefined, b: QueryAllAddressTypeResponse | PlainMessage<QueryAllAddressTypeResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllAddressTypeResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodTypeListRequest
 */
export class QueryVodTypeListRequest extends Message<QueryVodTypeListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.VodType vod_type = 4;
   */
  vodType?: VodType;

  constructor(data?: PartialMessage<QueryVodTypeListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodTypeListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vod_type", kind: "message", T: VodType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodTypeListRequest {
    return new QueryVodTypeListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodTypeListRequest {
    return new QueryVodTypeListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodTypeListRequest {
    return new QueryVodTypeListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodTypeListRequest | PlainMessage<QueryVodTypeListRequest> | undefined, b: QueryVodTypeListRequest | PlainMessage<QueryVodTypeListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodTypeListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodTypeListResponse
 */
export class QueryVodTypeListResponse extends Message<QueryVodTypeListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodType list = 6;
   */
  list: VodType[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodTypeListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodTypeListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: VodType, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodTypeListResponse {
    return new QueryVodTypeListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodTypeListResponse {
    return new QueryVodTypeListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodTypeListResponse {
    return new QueryVodTypeListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodTypeListResponse | PlainMessage<QueryVodTypeListResponse> | undefined, b: QueryVodTypeListResponse | PlainMessage<QueryVodTypeListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodTypeListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodTypeRequest
 */
export class InsertVodTypeRequest extends Message<InsertVodTypeRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodType vod_type = 3;
   */
  vodType?: VodType;

  constructor(data?: PartialMessage<InsertVodTypeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodTypeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_type", kind: "message", T: VodType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodTypeRequest {
    return new InsertVodTypeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodTypeRequest {
    return new InsertVodTypeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodTypeRequest {
    return new InsertVodTypeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodTypeRequest | PlainMessage<InsertVodTypeRequest> | undefined, b: InsertVodTypeRequest | PlainMessage<InsertVodTypeRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodTypeRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodTypeResponse
 */
export class InsertVodTypeResponse extends Message<InsertVodTypeResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVodTypeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodTypeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodTypeResponse {
    return new InsertVodTypeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodTypeResponse {
    return new InsertVodTypeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodTypeResponse {
    return new InsertVodTypeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodTypeResponse | PlainMessage<InsertVodTypeResponse> | undefined, b: InsertVodTypeResponse | PlainMessage<InsertVodTypeResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodTypeResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodTypeRequest
 */
export class UpdateVodTypeRequest extends Message<UpdateVodTypeRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodType vod_type = 3;
   */
  vodType?: VodType;

  constructor(data?: PartialMessage<UpdateVodTypeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodTypeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_type", kind: "message", T: VodType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodTypeRequest {
    return new UpdateVodTypeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodTypeRequest {
    return new UpdateVodTypeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodTypeRequest {
    return new UpdateVodTypeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodTypeRequest | PlainMessage<UpdateVodTypeRequest> | undefined, b: UpdateVodTypeRequest | PlainMessage<UpdateVodTypeRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodTypeRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodTypeResponse
 */
export class UpdateVodTypeResponse extends Message<UpdateVodTypeResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVodTypeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodTypeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodTypeResponse {
    return new UpdateVodTypeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodTypeResponse {
    return new UpdateVodTypeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodTypeResponse {
    return new UpdateVodTypeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodTypeResponse | PlainMessage<UpdateVodTypeResponse> | undefined, b: UpdateVodTypeResponse | PlainMessage<UpdateVodTypeResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodTypeResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodTypeRequest
 */
export class DeleteVodTypeRequest extends Message<DeleteVodTypeRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodTypeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodTypeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodTypeRequest {
    return new DeleteVodTypeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodTypeRequest {
    return new DeleteVodTypeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodTypeRequest {
    return new DeleteVodTypeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodTypeRequest | PlainMessage<DeleteVodTypeRequest> | undefined, b: DeleteVodTypeRequest | PlainMessage<DeleteVodTypeRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodTypeRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodTypeResponse
 */
export class DeleteVodTypeResponse extends Message<DeleteVodTypeResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<DeleteVodTypeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodTypeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodTypeResponse {
    return new DeleteVodTypeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodTypeResponse {
    return new DeleteVodTypeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodTypeResponse {
    return new DeleteVodTypeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodTypeResponse | PlainMessage<DeleteVodTypeResponse> | undefined, b: DeleteVodTypeResponse | PlainMessage<DeleteVodTypeResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodTypeResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodTypeItemListRequest
 */
export class QueryVodTypeItemListRequest extends Message<QueryVodTypeItemListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.VodTypeItem vod_type_item = 4;
   */
  vodTypeItem?: VodTypeItem;

  constructor(data?: PartialMessage<QueryVodTypeItemListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodTypeItemListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vod_type_item", kind: "message", T: VodTypeItem },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodTypeItemListRequest {
    return new QueryVodTypeItemListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodTypeItemListRequest {
    return new QueryVodTypeItemListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodTypeItemListRequest {
    return new QueryVodTypeItemListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodTypeItemListRequest | PlainMessage<QueryVodTypeItemListRequest> | undefined, b: QueryVodTypeItemListRequest | PlainMessage<QueryVodTypeItemListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodTypeItemListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodTypeItemListResponse
 */
export class QueryVodTypeItemListResponse extends Message<QueryVodTypeItemListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodTypeItem list = 6;
   */
  list: VodTypeItem[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodTypeItemListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodTypeItemListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "list", kind: "message", T: VodTypeItem, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodTypeItemListResponse {
    return new QueryVodTypeItemListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodTypeItemListResponse {
    return new QueryVodTypeItemListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodTypeItemListResponse {
    return new QueryVodTypeItemListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodTypeItemListResponse | PlainMessage<QueryVodTypeItemListResponse> | undefined, b: QueryVodTypeItemListResponse | PlainMessage<QueryVodTypeItemListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodTypeItemListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodTypeItemRequest
 */
export class InsertVodTypeItemRequest extends Message<InsertVodTypeItemRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodTypeItem vod_type_item = 3;
   */
  vodTypeItem?: VodTypeItem;

  constructor(data?: PartialMessage<InsertVodTypeItemRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodTypeItemRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_type_item", kind: "message", T: VodTypeItem },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodTypeItemRequest {
    return new InsertVodTypeItemRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodTypeItemRequest {
    return new InsertVodTypeItemRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodTypeItemRequest {
    return new InsertVodTypeItemRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodTypeItemRequest | PlainMessage<InsertVodTypeItemRequest> | undefined, b: InsertVodTypeItemRequest | PlainMessage<InsertVodTypeItemRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodTypeItemRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodTypeItemResponse
 */
export class InsertVodTypeItemResponse extends Message<InsertVodTypeItemResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVodTypeItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodTypeItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodTypeItemResponse {
    return new InsertVodTypeItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodTypeItemResponse {
    return new InsertVodTypeItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodTypeItemResponse {
    return new InsertVodTypeItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodTypeItemResponse | PlainMessage<InsertVodTypeItemResponse> | undefined, b: InsertVodTypeItemResponse | PlainMessage<InsertVodTypeItemResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodTypeItemResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodTypeItemRequest
 */
export class UpdateVodTypeItemRequest extends Message<UpdateVodTypeItemRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodTypeItem vod_type_item = 3;
   */
  vodTypeItem?: VodTypeItem;

  constructor(data?: PartialMessage<UpdateVodTypeItemRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodTypeItemRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_type_item", kind: "message", T: VodTypeItem },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodTypeItemRequest {
    return new UpdateVodTypeItemRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodTypeItemRequest {
    return new UpdateVodTypeItemRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodTypeItemRequest {
    return new UpdateVodTypeItemRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodTypeItemRequest | PlainMessage<UpdateVodTypeItemRequest> | undefined, b: UpdateVodTypeItemRequest | PlainMessage<UpdateVodTypeItemRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodTypeItemRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodTypeItemResponse
 */
export class UpdateVodTypeItemResponse extends Message<UpdateVodTypeItemResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVodTypeItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodTypeItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodTypeItemResponse {
    return new UpdateVodTypeItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodTypeItemResponse {
    return new UpdateVodTypeItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodTypeItemResponse {
    return new UpdateVodTypeItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodTypeItemResponse | PlainMessage<UpdateVodTypeItemResponse> | undefined, b: UpdateVodTypeItemResponse | PlainMessage<UpdateVodTypeItemResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodTypeItemResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodTypeItemRequest
 */
export class DeleteVodTypeItemRequest extends Message<DeleteVodTypeItemRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 id = 3;
   */
  id: number[] = [];

  constructor(data?: PartialMessage<DeleteVodTypeItemRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodTypeItemRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodTypeItemRequest {
    return new DeleteVodTypeItemRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodTypeItemRequest {
    return new DeleteVodTypeItemRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodTypeItemRequest {
    return new DeleteVodTypeItemRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodTypeItemRequest | PlainMessage<DeleteVodTypeItemRequest> | undefined, b: DeleteVodTypeItemRequest | PlainMessage<DeleteVodTypeItemRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVodTypeItemRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteVodTypeItemResponse
 */
export class DeleteVodTypeItemResponse extends Message<DeleteVodTypeItemResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<DeleteVodTypeItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteVodTypeItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVodTypeItemResponse {
    return new DeleteVodTypeItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVodTypeItemResponse {
    return new DeleteVodTypeItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVodTypeItemResponse {
    return new DeleteVodTypeItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVodTypeItemResponse | PlainMessage<DeleteVodTypeItemResponse> | undefined, b: DeleteVodTypeItemResponse | PlainMessage<DeleteVodTypeItemResponse> | undefined): boolean {
    return proto3.util.equals(DeleteVodTypeItemResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodBannerListRequest
 */
export class QueryVodBannerListRequest extends Message<QueryVodBannerListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.VodBanner vod_banner = 4;
   */
  vodBanner?: VodBanner;

  constructor(data?: PartialMessage<QueryVodBannerListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodBannerListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "vod_banner", kind: "message", T: VodBanner },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodBannerListRequest {
    return new QueryVodBannerListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodBannerListRequest {
    return new QueryVodBannerListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodBannerListRequest {
    return new QueryVodBannerListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodBannerListRequest | PlainMessage<QueryVodBannerListRequest> | undefined, b: QueryVodBannerListRequest | PlainMessage<QueryVodBannerListRequest> | undefined): boolean {
    return proto3.util.equals(QueryVodBannerListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryVodBannerListResponse
 */
export class QueryVodBannerListResponse extends Message<QueryVodBannerListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.VodBanner vod_banner_list = 6;
   */
  vodBannerList: VodBanner[] = [];

  /**
   * @generated from field: int32 code = 7;
   */
  code = 0;

  constructor(data?: PartialMessage<QueryVodBannerListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryVodBannerListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "vod_banner_list", kind: "message", T: VodBanner, repeated: true },
    { no: 7, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVodBannerListResponse {
    return new QueryVodBannerListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVodBannerListResponse {
    return new QueryVodBannerListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVodBannerListResponse {
    return new QueryVodBannerListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVodBannerListResponse | PlainMessage<QueryVodBannerListResponse> | undefined, b: QueryVodBannerListResponse | PlainMessage<QueryVodBannerListResponse> | undefined): boolean {
    return proto3.util.equals(QueryVodBannerListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodBannerRequest
 */
export class InsertVodBannerRequest extends Message<InsertVodBannerRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodBanner vod_banner = 3;
   */
  vodBanner?: VodBanner;

  constructor(data?: PartialMessage<InsertVodBannerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodBannerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_banner", kind: "message", T: VodBanner },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodBannerRequest {
    return new InsertVodBannerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodBannerRequest {
    return new InsertVodBannerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodBannerRequest {
    return new InsertVodBannerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodBannerRequest | PlainMessage<InsertVodBannerRequest> | undefined, b: InsertVodBannerRequest | PlainMessage<InsertVodBannerRequest> | undefined): boolean {
    return proto3.util.equals(InsertVodBannerRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.InsertVodBannerResponse
 */
export class InsertVodBannerResponse extends Message<InsertVodBannerResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<InsertVodBannerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.InsertVodBannerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertVodBannerResponse {
    return new InsertVodBannerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertVodBannerResponse {
    return new InsertVodBannerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertVodBannerResponse {
    return new InsertVodBannerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InsertVodBannerResponse | PlainMessage<InsertVodBannerResponse> | undefined, b: InsertVodBannerResponse | PlainMessage<InsertVodBannerResponse> | undefined): boolean {
    return proto3.util.equals(InsertVodBannerResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodBannerRequest
 */
export class UpdateVodBannerRequest extends Message<UpdateVodBannerRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.VodBanner vod_banner = 3;
   */
  vodBanner?: VodBanner;

  constructor(data?: PartialMessage<UpdateVodBannerRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodBannerRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vod_banner", kind: "message", T: VodBanner },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodBannerRequest {
    return new UpdateVodBannerRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodBannerRequest {
    return new UpdateVodBannerRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodBannerRequest {
    return new UpdateVodBannerRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodBannerRequest | PlainMessage<UpdateVodBannerRequest> | undefined, b: UpdateVodBannerRequest | PlainMessage<UpdateVodBannerRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVodBannerRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateVodBannerResponse
 */
export class UpdateVodBannerResponse extends Message<UpdateVodBannerResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: int32 code = 5;
   */
  code = 0;

  constructor(data?: PartialMessage<UpdateVodBannerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateVodBannerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVodBannerResponse {
    return new UpdateVodBannerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVodBannerResponse {
    return new UpdateVodBannerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVodBannerResponse {
    return new UpdateVodBannerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVodBannerResponse | PlainMessage<UpdateVodBannerResponse> | undefined, b: UpdateVodBannerResponse | PlainMessage<UpdateVodBannerResponse> | undefined): boolean {
    return proto3.util.equals(UpdateVodBannerResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLiveMonitorRecordListRequest
 */
export class QueryLiveMonitorRecordListRequest extends Message<QueryLiveMonitorRecordListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.LiveMonitorRecord filter = 4;
   */
  filter?: LiveMonitorRecord;

  constructor(data?: PartialMessage<QueryLiveMonitorRecordListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLiveMonitorRecordListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "filter", kind: "message", T: LiveMonitorRecord },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLiveMonitorRecordListRequest {
    return new QueryLiveMonitorRecordListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLiveMonitorRecordListRequest {
    return new QueryLiveMonitorRecordListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLiveMonitorRecordListRequest {
    return new QueryLiveMonitorRecordListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLiveMonitorRecordListRequest | PlainMessage<QueryLiveMonitorRecordListRequest> | undefined, b: QueryLiveMonitorRecordListRequest | PlainMessage<QueryLiveMonitorRecordListRequest> | undefined): boolean {
    return proto3.util.equals(QueryLiveMonitorRecordListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLiveMonitorRecordListResponse
 */
export class QueryLiveMonitorRecordListResponse extends Message<QueryLiveMonitorRecordListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.LiveMonitorRecord data = 6;
   */
  data: LiveMonitorRecord[] = [];

  /**
   * @generated from field: int32 error_code = 7;
   */
  errorCode = 0;

  constructor(data?: PartialMessage<QueryLiveMonitorRecordListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLiveMonitorRecordListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "data", kind: "message", T: LiveMonitorRecord, repeated: true },
    { no: 7, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLiveMonitorRecordListResponse {
    return new QueryLiveMonitorRecordListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLiveMonitorRecordListResponse {
    return new QueryLiveMonitorRecordListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLiveMonitorRecordListResponse {
    return new QueryLiveMonitorRecordListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLiveMonitorRecordListResponse | PlainMessage<QueryLiveMonitorRecordListResponse> | undefined, b: QueryLiveMonitorRecordListResponse | PlainMessage<QueryLiveMonitorRecordListResponse> | undefined): boolean {
    return proto3.util.equals(QueryLiveMonitorRecordListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateLiveMonitorRecordRequest
 */
export class UpdateLiveMonitorRecordRequest extends Message<UpdateLiveMonitorRecordRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.ks.v1.LiveMonitorRecord record = 3;
   */
  record?: LiveMonitorRecord;

  constructor(data?: PartialMessage<UpdateLiveMonitorRecordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateLiveMonitorRecordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "record", kind: "message", T: LiveMonitorRecord },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLiveMonitorRecordRequest {
    return new UpdateLiveMonitorRecordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLiveMonitorRecordRequest {
    return new UpdateLiveMonitorRecordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLiveMonitorRecordRequest {
    return new UpdateLiveMonitorRecordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLiveMonitorRecordRequest | PlainMessage<UpdateLiveMonitorRecordRequest> | undefined, b: UpdateLiveMonitorRecordRequest | PlainMessage<UpdateLiveMonitorRecordRequest> | undefined): boolean {
    return proto3.util.equals(UpdateLiveMonitorRecordRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.UpdateLiveMonitorRecordResponse
 */
export class UpdateLiveMonitorRecordResponse extends Message<UpdateLiveMonitorRecordResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: string data = 6;
   */
  data = "";

  constructor(data?: PartialMessage<UpdateLiveMonitorRecordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.UpdateLiveMonitorRecordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLiveMonitorRecordResponse {
    return new UpdateLiveMonitorRecordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLiveMonitorRecordResponse {
    return new UpdateLiveMonitorRecordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLiveMonitorRecordResponse {
    return new UpdateLiveMonitorRecordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateLiveMonitorRecordResponse | PlainMessage<UpdateLiveMonitorRecordResponse> | undefined, b: UpdateLiveMonitorRecordResponse | PlainMessage<UpdateLiveMonitorRecordResponse> | undefined): boolean {
    return proto3.util.equals(UpdateLiveMonitorRecordResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLiveMonitorImageListRequest
 */
export class QueryLiveMonitorImageListRequest extends Message<QueryLiveMonitorImageListRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 3;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: api.ks.v1.LiveMonitorImageList filter = 4;
   */
  filter?: LiveMonitorImageList;

  constructor(data?: PartialMessage<QueryLiveMonitorImageListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLiveMonitorImageListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "page_meta", kind: "message", T: PageMeta },
    { no: 4, name: "filter", kind: "message", T: LiveMonitorImageList },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLiveMonitorImageListRequest {
    return new QueryLiveMonitorImageListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLiveMonitorImageListRequest {
    return new QueryLiveMonitorImageListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLiveMonitorImageListRequest {
    return new QueryLiveMonitorImageListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLiveMonitorImageListRequest | PlainMessage<QueryLiveMonitorImageListRequest> | undefined, b: QueryLiveMonitorImageListRequest | PlainMessage<QueryLiveMonitorImageListRequest> | undefined): boolean {
    return proto3.util.equals(QueryLiveMonitorImageListRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryLiveMonitorImageListResponse
 */
export class QueryLiveMonitorImageListResponse extends Message<QueryLiveMonitorImageListResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  /**
   * @generated from field: api.com.v1.PageMeta page_meta = 5;
   */
  pageMeta?: PageMeta;

  /**
   * @generated from field: repeated api.ks.v1.LiveMonitorImageList data = 6;
   */
  data: LiveMonitorImageList[] = [];

  /**
   * @generated from field: int32 error_code = 7;
   */
  errorCode = 0;

  constructor(data?: PartialMessage<QueryLiveMonitorImageListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryLiveMonitorImageListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "page_meta", kind: "message", T: PageMeta },
    { no: 6, name: "data", kind: "message", T: LiveMonitorImageList, repeated: true },
    { no: 7, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLiveMonitorImageListResponse {
    return new QueryLiveMonitorImageListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLiveMonitorImageListResponse {
    return new QueryLiveMonitorImageListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLiveMonitorImageListResponse {
    return new QueryLiveMonitorImageListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLiveMonitorImageListResponse | PlainMessage<QueryLiveMonitorImageListResponse> | undefined, b: QueryLiveMonitorImageListResponse | PlainMessage<QueryLiveMonitorImageListResponse> | undefined): boolean {
    return proto3.util.equals(QueryLiveMonitorImageListResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteLiveMonitorRecordRequest
 */
export class DeleteLiveMonitorRecordRequest extends Message<DeleteLiveMonitorRecordRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 ids = 3;
   */
  ids: number[] = [];

  constructor(data?: PartialMessage<DeleteLiveMonitorRecordRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteLiveMonitorRecordRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteLiveMonitorRecordRequest {
    return new DeleteLiveMonitorRecordRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteLiveMonitorRecordRequest {
    return new DeleteLiveMonitorRecordRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteLiveMonitorRecordRequest {
    return new DeleteLiveMonitorRecordRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteLiveMonitorRecordRequest | PlainMessage<DeleteLiveMonitorRecordRequest> | undefined, b: DeleteLiveMonitorRecordRequest | PlainMessage<DeleteLiveMonitorRecordRequest> | undefined): boolean {
    return proto3.util.equals(DeleteLiveMonitorRecordRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.DeleteLiveMonitorRecordResponse
 */
export class DeleteLiveMonitorRecordResponse extends Message<DeleteLiveMonitorRecordResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: string data = 6;
   */
  data = "";

  constructor(data?: PartialMessage<DeleteLiveMonitorRecordResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.DeleteLiveMonitorRecordResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteLiveMonitorRecordResponse {
    return new DeleteLiveMonitorRecordResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteLiveMonitorRecordResponse {
    return new DeleteLiveMonitorRecordResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteLiveMonitorRecordResponse {
    return new DeleteLiveMonitorRecordResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteLiveMonitorRecordResponse | PlainMessage<DeleteLiveMonitorRecordResponse> | undefined, b: DeleteLiveMonitorRecordResponse | PlainMessage<DeleteLiveMonitorRecordResponse> | undefined): boolean {
    return proto3.util.equals(DeleteLiveMonitorRecordResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.AnalysisLinkByMainClassIdRequest
 */
export class AnalysisLinkByMainClassIdRequest extends Message<AnalysisLinkByMainClassIdRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: repeated int32 ids = 3;
   */
  ids: number[] = [];

  constructor(data?: PartialMessage<AnalysisLinkByMainClassIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.AnalysisLinkByMainClassIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnalysisLinkByMainClassIdRequest {
    return new AnalysisLinkByMainClassIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnalysisLinkByMainClassIdRequest {
    return new AnalysisLinkByMainClassIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnalysisLinkByMainClassIdRequest {
    return new AnalysisLinkByMainClassIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AnalysisLinkByMainClassIdRequest | PlainMessage<AnalysisLinkByMainClassIdRequest> | undefined, b: AnalysisLinkByMainClassIdRequest | PlainMessage<AnalysisLinkByMainClassIdRequest> | undefined): boolean {
    return proto3.util.equals(AnalysisLinkByMainClassIdRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.AnalysisLinkByMainClassIdResponse
 */
export class AnalysisLinkByMainClassIdResponse extends Message<AnalysisLinkByMainClassIdResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool success = 3;
   */
  success = false;

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  /**
   * @generated from field: int32 error_code = 5;
   */
  errorCode = 0;

  /**
   * @generated from field: string data = 6;
   */
  data = "";

  constructor(data?: PartialMessage<AnalysisLinkByMainClassIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.AnalysisLinkByMainClassIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "error_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnalysisLinkByMainClassIdResponse {
    return new AnalysisLinkByMainClassIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnalysisLinkByMainClassIdResponse {
    return new AnalysisLinkByMainClassIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnalysisLinkByMainClassIdResponse {
    return new AnalysisLinkByMainClassIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AnalysisLinkByMainClassIdResponse | PlainMessage<AnalysisLinkByMainClassIdResponse> | undefined, b: AnalysisLinkByMainClassIdResponse | PlainMessage<AnalysisLinkByMainClassIdResponse> | undefined): boolean {
    return proto3.util.equals(AnalysisLinkByMainClassIdResponse, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllAppInfoRequest
 */
export class QueryAllAppInfoRequest extends Message<QueryAllAppInfoRequest> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllAppInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllAppInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAppInfoRequest {
    return new QueryAllAppInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAppInfoRequest {
    return new QueryAllAppInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAppInfoRequest {
    return new QueryAllAppInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAppInfoRequest | PlainMessage<QueryAllAppInfoRequest> | undefined, b: QueryAllAppInfoRequest | PlainMessage<QueryAllAppInfoRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllAppInfoRequest, a, b);
  }
}

/**
 * @generated from message api.ks.v1.QueryAllAppInfoResponse
 */
export class QueryAllAppInfoResponse extends Message<QueryAllAppInfoResponse> {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId = protoInt64.zero;

  /**
   * @generated from field: int64 session_id = 2;
   */
  sessionId = protoInt64.zero;

  /**
   * @generated from field: bool status = 3;
   */
  status = false;

  /**
   * @generated from field: string message = 4;
   */
  message = "";

  /**
   * @generated from field: repeated api.ks.v1.LabelResp app_info_list = 5;
   */
  appInfoList: LabelResp[] = [];

  constructor(data?: PartialMessage<QueryAllAppInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.ks.v1.QueryAllAppInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transaction_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "app_info_list", kind: "message", T: LabelResp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAppInfoResponse {
    return new QueryAllAppInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAppInfoResponse {
    return new QueryAllAppInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAppInfoResponse {
    return new QueryAllAppInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAppInfoResponse | PlainMessage<QueryAllAppInfoResponse> | undefined, b: QueryAllAppInfoResponse | PlainMessage<QueryAllAppInfoResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllAppInfoResponse, a, b);
  }
}

